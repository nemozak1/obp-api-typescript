/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"
import {describe, beforeEach, test, expect} from 'vitest'

const config: Configuration = { apiKey }

describe("APIApi", () => {
  let instance: api.APIApi
  beforeEach(function() {
    instance = new api.APIApi(config)
  });

  test("oBPv140GetBankLevelDynamicResourceDocsObp", () => {
    const API_VERSION: string = "API_VERSION_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140GetBankLevelDynamicResourceDocsObp(API_VERSION, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv140GetResourceDocsObpV400", () => {
    const API_VERSION: string = "API_VERSION_example"
    return expect(instance.oBPv140GetResourceDocsObpV400(API_VERSION, {})).resolves.toBe(null)
  })
  test("oBPv140GetResourceDocsSwagger", () => {
    const API_VERSION: string = "API_VERSION_example"
    return expect(instance.oBPv140GetResourceDocsSwagger(API_VERSION, {})).resolves.toBe(null)
  })
  test("oBPv200ElasticSearchMetrics", () => {
    return expect(instance.oBPv200ElasticSearchMetrics({})).resolves.toBe(null)
  })
  test("oBPv220GetConnectorMetrics", () => {
    return expect(instance.oBPv220GetConnectorMetrics({})).resolves.toBe(null)
  })
  test("oBPv220GetMessageDocs", () => {
    return expect(instance.oBPv220GetMessageDocs({})).resolves.toBe(null)
  })
  test("oBPv300GetAdapterInfoForBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetAdapterInfoForBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310Config", () => {
    return expect(instance.oBPv310Config({})).resolves.toBe(null)
  })
  test("oBPv310CreateMethodRouting", () => {
    const body: api.ManagementMethodRoutingsBody = undefined
    return expect(instance.oBPv310CreateMethodRouting(body, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteMethodRouting", () => {
    const METHOD_ROUTING_ID: string = "METHOD_ROUTING_ID_example"
    return expect(instance.oBPv310DeleteMethodRouting(METHOD_ROUTING_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetMessageDocsSwagger", () => {
    return expect(instance.oBPv310GetMessageDocsSwagger({})).resolves.toBe(null)
  })
  test("oBPv310GetMethodRoutings", () => {
    return expect(instance.oBPv310GetMethodRoutings({})).resolves.toBe(null)
  })
  test("oBPv310GetOAuth2ServerJWKsURIs", () => {
    return expect(instance.oBPv310GetOAuth2ServerJWKsURIs({})).resolves.toBe(null)
  })
  test("oBPv310GetObpConnectorLoopback", () => {
    return expect(instance.oBPv310GetObpConnectorLoopback({})).resolves.toBe(null)
  })
  test("oBPv310GetRateLimitingInfo", () => {
    return expect(instance.oBPv310GetRateLimitingInfo({})).resolves.toBe(null)
  })
  test("oBPv310GetServerJWK", () => {
    return expect(instance.oBPv310GetServerJWK({})).resolves.toBe(null)
  })
  test("oBPv310UpdateMethodRouting", () => {
    const body: api.MethodRoutingsMETHODROUTINGIDBody = undefined
    const METHOD_ROUTING_ID: string = "METHOD_ROUTING_ID_example"
    return expect(instance.oBPv310UpdateMethodRouting(body, METHOD_ROUTING_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateBankLevelDynamicEndpoint", () => {
    const body: api.BANKIDDynamicendpointsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankLevelDynamicEndpoint(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateBankLevelDynamicEntity", () => {
    const body: api.BANKIDDynamicentitiesBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankLevelDynamicEntity(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateBankLevelEndpointTag", () => {
    const body: api.OPERATIONIDTagsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankLevelEndpointTag(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateDynamicEndpoint", () => {
    const body: api.ManagementDynamicendpointsBody = undefined
    return expect(instance.oBPv400CreateDynamicEndpoint(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateSystemDynamicEntity", () => {
    const body: api.ManagementSystemdynamicentitiesBody = undefined
    return expect(instance.oBPv400CreateSystemDynamicEntity(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateSystemLevelEndpointTag", () => {
    const body: api.OPERATIONIDTagsBody1 = undefined
    return expect(instance.oBPv400CreateSystemLevelEndpointTag(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankLevelDynamicEndpoint", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankLevelDynamicEndpoint(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankLevelDynamicEntity", () => {
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankLevelEndpointTag", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankLevelEndpointTag(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteDynamicEndpoint", () => {
    return expect(instance.oBPv400DeleteDynamicEndpoint({})).resolves.toBe(null)
  })
  test("oBPv400DeleteMyDynamicEndpoint", () => {
    return expect(instance.oBPv400DeleteMyDynamicEndpoint({})).resolves.toBe(null)
  })
  test("oBPv400DeleteMyDynamicEntity", () => {
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    return expect(instance.oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteSystemDynamicEntity", () => {
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    return expect(instance.oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteSystemLevelEndpointTag", () => {
    return expect(instance.oBPv400DeleteSystemLevelEndpointTag({})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelDynamicEndpoint", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelDynamicEndpoint(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelDynamicEndpoints", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelDynamicEndpoints(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelDynamicEntities", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelDynamicEntities(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelEndpointTags", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelEndpointTags(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCallContext", () => {
    return expect(instance.oBPv400GetCallContext({})).resolves.toBe(null)
  })
  test("oBPv400GetDynamicEndpoint", () => {
    return expect(instance.oBPv400GetDynamicEndpoint({})).resolves.toBe(null)
  })
  test("oBPv400GetDynamicEndpoints", () => {
    return expect(instance.oBPv400GetDynamicEndpoints({})).resolves.toBe(null)
  })
  test("oBPv400GetMapperDatabaseInfo", () => {
    return expect(instance.oBPv400GetMapperDatabaseInfo({})).resolves.toBe(null)
  })
  test("oBPv400GetMyDynamicEndpoints", () => {
    return expect(instance.oBPv400GetMyDynamicEndpoints({})).resolves.toBe(null)
  })
  test("oBPv400GetMyDynamicEntities", () => {
    return expect(instance.oBPv400GetMyDynamicEntities({})).resolves.toBe(null)
  })
  test("oBPv400GetScannedApiVersions", () => {
    return expect(instance.oBPv400GetScannedApiVersions({})).resolves.toBe(null)
  })
  test("oBPv400GetSystemDynamicEntities", () => {
    return expect(instance.oBPv400GetSystemDynamicEntities({})).resolves.toBe(null)
  })
  test("oBPv400GetSystemLevelEndpointTags", () => {
    return expect(instance.oBPv400GetSystemLevelEndpointTags({})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankLevelDynamicEndpointHost", () => {
    const body: api.DYNAMICENDPOINTIDHostBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankLevelDynamicEndpointHost(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankLevelDynamicEntity", () => {
    const body: api.DynamicentitiesDYNAMICENTITYIDBody = undefined
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankLevelDynamicEntity(body, DYNAMIC_ENTITY_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankLevelEndpointTag", () => {
    const body: api.TagsENDPOINTTAGIDBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankLevelEndpointTag(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateDynamicEndpointHost", () => {
    const body: api.DYNAMICENDPOINTIDHostBody1 = undefined
    return expect(instance.oBPv400UpdateDynamicEndpointHost(body, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateMyDynamicEntity", () => {
    const body: api.DynamicentitiesDYNAMICENTITYIDBody1 = undefined
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    return expect(instance.oBPv400UpdateMyDynamicEntity(body, DYNAMIC_ENTITY_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateSystemDynamicEntity", () => {
    const body: api.SystemdynamicentitiesDYNAMICENTITYIDBody = undefined
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    return expect(instance.oBPv400UpdateSystemDynamicEntity(body, DYNAMIC_ENTITY_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateSystemLevelEndpointTag", () => {
    const body: api.TagsENDPOINTTAGIDBody1 = undefined
    return expect(instance.oBPv400UpdateSystemLevelEndpointTag(body, {})).resolves.toBe(null)
  })
  test("oBPv400VerifyRequestSignResponse", () => {
    return expect(instance.oBPv400VerifyRequestSignResponse({})).resolves.toBe(null)
  })
  test("oBPv500GetAdapterInfo", () => {
    return expect(instance.oBPv500GetAdapterInfo({})).resolves.toBe(null)
  })
  test("oBPv500GetMetricsAtBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetMetricsAtBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateRegulatedEntity", () => {
    const body: api.V510RegulatedentitiesBody = undefined
    return expect(instance.oBPv510CreateRegulatedEntity(body, {})).resolves.toBe(null)
  })
  test("oBPv510DeleteRegulatedEntity", () => {
    return expect(instance.oBPv510DeleteRegulatedEntity({})).resolves.toBe(null)
  })
  test("oBPv510GetApiTags", () => {
    return expect(instance.oBPv510GetApiTags({})).resolves.toBe(null)
  })
  test("oBPv510GetMetrics", () => {
    return expect(instance.oBPv510GetMetrics({})).resolves.toBe(null)
  })
  test("oBPv510GetRegulatedEntityById", () => {
    return expect(instance.oBPv510GetRegulatedEntityById({})).resolves.toBe(null)
  })
  test("oBPv510RegulatedEntities", () => {
    return expect(instance.oBPv510RegulatedEntities({})).resolves.toBe(null)
  })
  test("oBPv510Root", () => {
    return expect(instance.oBPv510Root({})).resolves.toBe(null)
  })
  test("oBPv510SuggestedSessionTimeout", () => {
    return expect(instance.oBPv510SuggestedSessionTimeout({})).resolves.toBe(null)
  })
  test("oBPv510WaitingForGodot", () => {
    return expect(instance.oBPv510WaitingForGodot({})).resolves.toBe(null)
  })
})

describe("ATMApi", () => {
  let instance: api.ATMApi
  beforeEach(function() {
    instance = new api.ATMApi(config)
  });

  test("oBPv400UpdateAtmAccessibilityFeatures", () => {
    const body: api.ATMIDAccessibilityfeaturesBody = undefined
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateAtmAccessibilityFeatures(body, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateAtmLocationCategories", () => {
    const body: api.ATMIDLocationcategoriesBody = undefined
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateAtmLocationCategories(body, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateAtmNotes", () => {
    const body: api.ATMIDNotesBody = undefined
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateAtmNotes(body, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateAtmServices", () => {
    const body: api.ATMIDServicesBody = undefined
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateAtmServices(body, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateAtmSupportedCurrencies", () => {
    const body: api.ATMIDSupportedcurrenciesBody = undefined
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateAtmSupportedCurrencies(body, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateAtmSupportedLanguages", () => {
    const body: api.ATMIDSupportedlanguagesBody = undefined
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateAtmSupportedLanguages(body, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500HeadAtms", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500HeadAtms(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateAtm", () => {
    const body: api.BANKIDAtmsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateAtm(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateAtmAttribute", () => {
    const body: api.ATMIDAttributesBody = undefined
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateAtmAttribute(body, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510DeleteAtm", () => {
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510DeleteAtm(ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510DeleteAtmAttribute", () => {
    const ATM_ATTRIBUTE_ID: string = "ATM_ATTRIBUTE_ID_example"
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510DeleteAtmAttribute(ATM_ATTRIBUTE_ID, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAtm", () => {
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetAtm(ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAtmAttribute", () => {
    const ATM_ATTRIBUTE_ID: string = "ATM_ATTRIBUTE_ID_example"
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetAtmAttribute(ATM_ATTRIBUTE_ID, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAtmAttributes", () => {
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetAtmAttributes(ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAtms", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetAtms(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateAtm", () => {
    const body: api.AtmsATMIDBody = undefined
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateAtm(body, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateAtmAttribute", () => {
    const body: api.AttributesATMATTRIBUTEIDBody = undefined
    const ATM_ATTRIBUTE_ID: string = "ATM_ATTRIBUTE_ID_example"
    const ATM_ID: string = "ATM_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateAtmAttribute(body, ATM_ATTRIBUTE_ID, ATM_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("AccountApi", () => {
  let instance: api.AccountApi
  beforeEach(function() {
    instance = new api.AccountApi(config)
  });

  test("oBPv121DeleteViewForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteViewForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetPermissionsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200GetPermissionsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200PublicAccountsAllBanks", () => {
    return expect(instance.oBPv200PublicAccountsAllBanks({})).resolves.toBe(null)
  })
  test("oBPv200PublicAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200PublicAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300CorePrivateAccountsAllBanks", () => {
    return expect(instance.oBPv300CorePrivateAccountsAllBanks({})).resolves.toBe(null)
  })
  test("oBPv300CreateViewForBankAccount", () => {
    const body: api.ACCOUNTIDViewsBody = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300CreateViewForBankAccount(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetAccountsHeld", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetAccountsHeld(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetCoreTransactionsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetCoreTransactionsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetOtherAccountByIdForBankAccount", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetOtherAccountByIdForBankAccount(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetOtherAccountsForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetOtherAccountsForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetPermissionForUserForBankAccount", () => {
    const PROVIDER: string = "PROVIDER_example"
    const PROVIDER_ID: string = "PROVIDER_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetPermissionForUserForBankAccount(PROVIDER, PROVIDER_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetPrivateAccountIdsbyBankId", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetPrivateAccountIdsbyBankId(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetPublicAccountById", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetPublicAccountById(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetTransactionsForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetTransactionsForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300PrivateAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300PrivateAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300UpdateViewForBankAccount", () => {
    const body: api.ViewsVIEWIDBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300UpdateViewForBankAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CheckFundsAvailable", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CheckFundsAvailable(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateAccountApplication", () => {
    const body: api.BANKIDAccountapplicationsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateAccountApplication(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateAccountAttribute", () => {
    const body: api.PRODUCTCODEAttributeBody = undefined
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateAccountAttribute(body, PRODUCT_CODE, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetAccountApplication", () => {
    const ACCOUNT_APPLICATION_ID: string = "ACCOUNT_APPLICATION_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetAccountApplication(ACCOUNT_APPLICATION_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetAccountApplications", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetAccountApplications(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCheckbookOrders", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetCheckbookOrders(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateAccount", () => {
    const body: api.AccountsACCOUNTIDBody = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateAccount(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateAccountApplicationStatus", () => {
    const body: api.AccountapplicationsACCOUNTAPPLICATIONIDBody = undefined
    const ACCOUNT_APPLICATION_ID: string = "ACCOUNT_APPLICATION_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateAccountApplicationStatus(body, ACCOUNT_APPLICATION_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateAccountAttribute", () => {
    const body: api.AttributesACCOUNTATTRIBUTEIDBody = undefined
    const ACCOUNT_ATTRIBUTE_ID: string = "ACCOUNT_ATTRIBUTE_ID_example"
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateAccountAttribute(body, ACCOUNT_ATTRIBUTE_ID, PRODUCT_CODE, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400AddAccount", () => {
    const body: api.BANKIDAccountsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400AddAccount(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400AddTagForViewOnAccount", () => {
    const body: api.MetadataTagsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400AddTagForViewOnAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateCounterparty", () => {
    const body: api.VIEWIDCounterpartiesBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateCounterparty(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateCounterpartyForAnyAccount", () => {
    const body: api.VIEWIDCounterpartiesBody1 = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateCounterpartyForAnyAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateDirectDebit", () => {
    const body: api.VIEWIDDirectdebitBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateDirectDebit(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateDirectDebitManagement", () => {
    const body: api.ACCOUNTIDDirectdebitBody = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateDirectDebitManagement(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateOrUpdateAccountAttributeDefinition", () => {
    const body: api.AttributedefinitionsAccountBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateOrUpdateAccountAttributeDefinition(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateStandingOrder", () => {
    const body: api.VIEWIDStandingorderBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateStandingOrder(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateStandingOrderManagement", () => {
    const body: api.ACCOUNTIDStandingorderBody = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateStandingOrderManagement(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteAccountAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteAccountAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteAccountCascade", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteAccountCascade(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteCounterpartyForAnyAccount", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteCounterpartyForAnyAccount(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteExplicitCounterparty", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteExplicitCounterparty(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteTagForViewOnAccount", () => {
    const TAG_ID: string = "TAG_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteTagForViewOnAccount(TAG_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetAccountAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetAccountAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetAccountByAccountRouting", () => {
    const body: api.AccountsAccountroutingqueryBody = undefined
    return expect(instance.oBPv400GetAccountByAccountRouting(body, {})).resolves.toBe(null)
  })
  test("oBPv400GetAccountsByAccountRoutingRegex", () => {
    const body: api.AccountsAccountroutingregexqueryBody = undefined
    return expect(instance.oBPv400GetAccountsByAccountRoutingRegex(body, {})).resolves.toBe(null)
  })
  test("oBPv400GetAccountsMinimalByCustomerId", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv400GetAccountsMinimalByCustomerId(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankAccountBalancesForCurrentUser", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankAccountBalancesForCurrentUser(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCoreAccountById", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCoreAccountById(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCounterpartiesForAnyAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCounterpartiesForAnyAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCounterpartyByIdForAnyAccount", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCounterpartyByIdForAnyAccount(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCounterpartyByNameForAnyAccount", () => {
    const COUNTERPARTY_NAME: string = "COUNTERPARTY_NAME_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCounterpartyByNameForAnyAccount(COUNTERPARTY_NAME, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetExplicitCounterpartiesForAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetExplicitCounterpartiesForAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetFastFirehoseAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetFastFirehoseAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetFirehoseAccountsAtOneBank", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetFirehoseAccountsAtOneBank(VIEW_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetPrivateAccountByIdFull", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetPrivateAccountByIdFull(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetPrivateAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetPrivateAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTagsForViewOnAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTagsForViewOnAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400IbanChecker", () => {
    const body: api.SchemeIbanBody = undefined
    return expect(instance.oBPv400IbanChecker(body, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateAccountLabel", () => {
    const body: api.AccountsACCOUNTIDBody1 = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateAccountLabel(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateAccount", () => {
    const body: api.AccountsACCOUNTIDBody2 = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500CreateAccount(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateCustomerAccountLink", () => {
    const body: api.BANKIDCustomeraccountlinksBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500CreateCustomerAccountLink(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetViewsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetViewsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateCustomView", () => {
    const body: api.VIEWIDTargetviewsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateCustomView(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateUserWithAccountAccessById", () => {
    const body: api.VIEWIDUseraccountaccessBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateUserWithAccountAccessById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510DeleteCustomView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510DeleteCustomView(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAccountAccessByUserId", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510GetAccountAccessByUserId(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAccountsHeldByUser", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510GetAccountsHeldByUser(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAccountsHeldByUserAtBank", () => {
    const USER_ID: string = "USER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetAccountsHeldByUserAtBank(USER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAgent", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetAgent(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAgents", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetAgents(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountBalances", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountBalances(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountsBalances", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountsBalances(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountsBalancesThroughView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountsBalancesThroughView(VIEW_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCoreAccountByIdThroughView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCoreAccountByIdThroughView(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCustomView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCustomView(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GrantUserAccessToViewById", () => {
    const body: api.AccountaccessGrantBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GrantUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510RevokeUserAccessToViewById", () => {
    const body: api.AccountaccessRevokeBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510RevokeUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateCustomView", () => {
    const body: api.TargetviewsTARGETVIEWIDBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateCustomView(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("AccountAccessApi", () => {
  let instance: api.AccountAccessApi
  beforeEach(function() {
    instance = new api.AccountAccessApi(config)
  });

  test("oBPv510CreateUserWithAccountAccessById", () => {
    const body: api.VIEWIDUseraccountaccessBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateUserWithAccountAccessById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GrantUserAccessToViewById", () => {
    const body: api.AccountaccessGrantBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GrantUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510RevokeUserAccessToViewById", () => {
    const body: api.AccountaccessRevokeBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510RevokeUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("AccountApplicationApi", () => {
  let instance: api.AccountApplicationApi
  beforeEach(function() {
    instance = new api.AccountApplicationApi(config)
  });

  test("oBPv310CreateAccountApplication", () => {
    const body: api.BANKIDAccountapplicationsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateAccountApplication(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetAccountApplication", () => {
    const ACCOUNT_APPLICATION_ID: string = "ACCOUNT_APPLICATION_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetAccountApplication(ACCOUNT_APPLICATION_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetAccountApplications", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetAccountApplications(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateAccountApplicationStatus", () => {
    const body: api.AccountapplicationsACCOUNTAPPLICATIONIDBody = undefined
    const ACCOUNT_APPLICATION_ID: string = "ACCOUNT_APPLICATION_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateAccountApplicationStatus(body, ACCOUNT_APPLICATION_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("AccountFirehoseApi", () => {
  let instance: api.AccountFirehoseApi
  beforeEach(function() {
    instance = new api.AccountFirehoseApi(config)
  });

  test("oBPv300GetFirehoseTransactionsForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetFirehoseTransactionsForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetFastFirehoseAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetFastFirehoseAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetFirehoseAccountsAtOneBank", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetFirehoseAccountsAtOneBank(VIEW_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("AccountInformationServiceAISApi", () => {
  let instance: api.AccountInformationServiceAISApi
  beforeEach(function() {
    instance = new api.AccountInformationServiceAISApi(config)
  });

  test("oBPv200GetTransactionTypes", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200GetTransactionTypes(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300CorePrivateAccountsAllBanks", () => {
    return expect(instance.oBPv300CorePrivateAccountsAllBanks({})).resolves.toBe(null)
  })
  test("oBPv300GetAccountsHeld", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetAccountsHeld(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetCoreTransactionsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetCoreTransactionsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetPrivateAccountIdsbyBankId", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetPrivateAccountIdsbyBankId(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300PrivateAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300PrivateAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310AnswerConsentChallenge", () => {
    const body: api.CONSENTIDChallengeBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310AnswerConsentChallenge(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentEmail", () => {
    const body: api.ConsentsEMAILBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentEmail(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentImplicit", () => {
    const body: api.ConsentsIMPLICITBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentImplicit(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentSms", () => {
    const body: api.ConsentsSMSBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentSms(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetServerJWK", () => {
    return expect(instance.oBPv310GetServerJWK({})).resolves.toBe(null)
  })
  test("oBPv310RevokeConsent", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310RevokeConsent(CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400AddConsentUser", () => {
    const body: api.CONSENTIDUserupdaterequestBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400AddConsentUser(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankAccountBalancesForCurrentUser", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankAccountBalancesForCurrentUser(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBanks", () => {
    return expect(instance.oBPv400GetBanks({})).resolves.toBe(null)
  })
  test("oBPv400GetConsentInfos", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetConsentInfos(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCoreAccountById", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCoreAccountById(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateConsentStatus", () => {
    const body: api.ConsentsCONSENTIDBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateConsentStatus(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdEmail", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdEmail({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdImplicit", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdImplicit({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdSms", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdSms({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentRequest", () => {
    const body: api.ConsumerConsentrequestsBody = undefined
    return expect(instance.oBPv500CreateConsentRequest(body, {})).resolves.toBe(null)
  })
  test("oBPv500GetBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetConsentByConsentRequestId", () => {
    return expect(instance.oBPv500GetConsentByConsentRequestId({})).resolves.toBe(null)
  })
  test("oBPv500GetConsentRequest", () => {
    return expect(instance.oBPv500GetConsentRequest({})).resolves.toBe(null)
  })
  test("oBPv510CreateConsentImplicit", () => {
    const body: api.ConsentsIMPLICITBody1 = undefined
    return expect(instance.oBPv510CreateConsentImplicit(body, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountBalances", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountBalances(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountsBalances", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountsBalances(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountsBalancesThroughView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountsBalancesThroughView(VIEW_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsentByConsentId", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    return expect(instance.oBPv510GetConsentByConsentId(CONSENT_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsentByConsentIdViaConsumer", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    return expect(instance.oBPv510GetConsentByConsentIdViaConsumer(CONSENT_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsents", () => {
    return expect(instance.oBPv510GetConsents({})).resolves.toBe(null)
  })
  test("oBPv510GetConsentsAtBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetConsentsAtBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCoreAccountByIdThroughView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCoreAccountByIdThroughView(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetMyConsents", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetMyConsents(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510MtlsClientCertificateInfo", () => {
    return expect(instance.oBPv510MtlsClientCertificateInfo({})).resolves.toBe(null)
  })
  test("oBPv510RevokeConsentAtBank", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510RevokeConsentAtBank(CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510SelfRevokeConsent", () => {
    return expect(instance.oBPv510SelfRevokeConsent({})).resolves.toBe(null)
  })
  test("oBPv510UpdateConsentAccountAccessByConsentId", () => {
    const body: api.CONSENTIDAccountaccessBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateConsentAccountAccessByConsentId(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateConsentStatusByConsent", () => {
    const body: api.ConsentsCONSENTIDBody1 = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateConsentStatusByConsent(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateConsentUserIdByConsentId", () => {
    const body: api.CONSENTIDCreatedbyuserBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateConsentUserIdByConsentId(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("AccountMetadataApi", () => {
  let instance: api.AccountMetadataApi
  beforeEach(function() {
    instance = new api.AccountMetadataApi(config)
  });

  test("oBPv400AddTagForViewOnAccount", () => {
    const body: api.MetadataTagsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400AddTagForViewOnAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteTagForViewOnAccount", () => {
    const TAG_ID: string = "TAG_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteTagForViewOnAccount(TAG_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTagsForViewOnAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTagsForViewOnAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("AccountPublicApi", () => {
  let instance: api.AccountPublicApi
  beforeEach(function() {
    instance = new api.AccountPublicApi(config)
  });

  test("oBPv200PublicAccountsAllBanks", () => {
    return expect(instance.oBPv200PublicAccountsAllBanks({})).resolves.toBe(null)
  })
  test("oBPv200PublicAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200PublicAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetPublicAccountById", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetPublicAccountById(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("AggregateMetricsApi", () => {
  let instance: api.AggregateMetricsApi
  beforeEach(function() {
    instance = new api.AggregateMetricsApi(config)
  });

  test("oBPv510GetAggregateMetrics", () => {
    return expect(instance.oBPv510GetAggregateMetrics({})).resolves.toBe(null)
  })
})

describe("ApiCollectionApi", () => {
  let instance: api.ApiCollectionApi
  beforeEach(function() {
    instance = new api.ApiCollectionApi(config)
  });

  test("oBPv400CreateMyApiCollection", () => {
    const body: api.MyApicollectionsBody = undefined
    return expect(instance.oBPv400CreateMyApiCollection(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateMyApiCollectionEndpoint", () => {
    const body: api.APICOLLECTIONNAMEApicollectionendpointsBody = undefined
    return expect(instance.oBPv400CreateMyApiCollectionEndpoint(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateMyApiCollectionEndpointById", () => {
    const body: api.APICOLLECTIONIDApicollectionendpointsBody = undefined
    return expect(instance.oBPv400CreateMyApiCollectionEndpointById(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteMyApiCollection", () => {
    return expect(instance.oBPv400DeleteMyApiCollection({})).resolves.toBe(null)
  })
  test("oBPv400DeleteMyApiCollectionEndpoint", () => {
    return expect(instance.oBPv400DeleteMyApiCollectionEndpoint({})).resolves.toBe(null)
  })
  test("oBPv400DeleteMyApiCollectionEndpointById", () => {
    return expect(instance.oBPv400DeleteMyApiCollectionEndpointById({})).resolves.toBe(null)
  })
  test("oBPv400DeleteMyApiCollectionEndpointByOperationId", () => {
    return expect(instance.oBPv400DeleteMyApiCollectionEndpointByOperationId({})).resolves.toBe(null)
  })
  test("oBPv400GetApiCollectionEndpoints", () => {
    return expect(instance.oBPv400GetApiCollectionEndpoints({})).resolves.toBe(null)
  })
  test("oBPv400GetApiCollectionsForUser", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv400GetApiCollectionsForUser(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetFeaturedApiCollections", () => {
    return expect(instance.oBPv400GetFeaturedApiCollections({})).resolves.toBe(null)
  })
  test("oBPv400GetMyApiCollectionById", () => {
    return expect(instance.oBPv400GetMyApiCollectionById({})).resolves.toBe(null)
  })
  test("oBPv400GetMyApiCollectionByName", () => {
    return expect(instance.oBPv400GetMyApiCollectionByName({})).resolves.toBe(null)
  })
  test("oBPv400GetMyApiCollectionEndpoint", () => {
    return expect(instance.oBPv400GetMyApiCollectionEndpoint({})).resolves.toBe(null)
  })
  test("oBPv400GetMyApiCollectionEndpoints", () => {
    return expect(instance.oBPv400GetMyApiCollectionEndpoints({})).resolves.toBe(null)
  })
  test("oBPv400GetMyApiCollectionEndpointsById", () => {
    return expect(instance.oBPv400GetMyApiCollectionEndpointsById({})).resolves.toBe(null)
  })
  test("oBPv400GetMyApiCollections", () => {
    return expect(instance.oBPv400GetMyApiCollections({})).resolves.toBe(null)
  })
  test("oBPv400GetSharableApiCollectionById", () => {
    return expect(instance.oBPv400GetSharableApiCollectionById({})).resolves.toBe(null)
  })
  test("oBPv510GetAllApiCollections", () => {
    return expect(instance.oBPv510GetAllApiCollections({})).resolves.toBe(null)
  })
  test("oBPv510UpdateMyApiCollection", () => {
    const body: api.ApicollectionsAPICOLLECTIONIDBody = undefined
    return expect(instance.oBPv510UpdateMyApiCollection(body, {})).resolves.toBe(null)
  })
})

describe("AuthenticationTypeValidationApi", () => {
  let instance: api.AuthenticationTypeValidationApi
  beforeEach(function() {
    instance = new api.AuthenticationTypeValidationApi(config)
  });

  test("oBPv400CreateAuthenticationTypeValidation", () => {
    const body: Array<string> = undefined
    return expect(instance.oBPv400CreateAuthenticationTypeValidation(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteAuthenticationTypeValidation", () => {
    return expect(instance.oBPv400DeleteAuthenticationTypeValidation({})).resolves.toBe(null)
  })
  test("oBPv400GetAllAuthenticationTypeValidations", () => {
    return expect(instance.oBPv400GetAllAuthenticationTypeValidations({})).resolves.toBe(null)
  })
  test("oBPv400GetAllAuthenticationTypeValidationsPublic", () => {
    return expect(instance.oBPv400GetAllAuthenticationTypeValidationsPublic({})).resolves.toBe(null)
  })
  test("oBPv400GetAuthenticationTypeValidation", () => {
    return expect(instance.oBPv400GetAuthenticationTypeValidation({})).resolves.toBe(null)
  })
  test("oBPv400UpdateAuthenticationTypeValidation", () => {
    const body: Array<string> = undefined
    return expect(instance.oBPv400UpdateAuthenticationTypeValidation(body, {})).resolves.toBe(null)
  })
})

describe("BankApi", () => {
  let instance: api.BankApi
  beforeEach(function() {
    instance = new api.BankApi(config)
  });

  test("oBPv200GetTransactionTypes", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200GetTransactionTypes(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210CreateTransactionType", () => {
    const body: api.BANKIDTransactiontypesBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210CreateTransactionType(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210GetTransactionRequestTypesSupportedByBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210GetTransactionRequestTypesSupportedByBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetBranch", () => {
    const BRANCH_ID: string = "BRANCH_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetBranch(BRANCH_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetBranches", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetBranches(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateAccountWebhook", () => {
    const body: api.BANKIDAccountwebhooksBody1 = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateAccountWebhook(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310EnableDisableAccountWebhook", () => {
    const body: api.BANKIDAccountwebhooksBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310EnableDisableAccountWebhook(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetAccountWebhooks", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetAccountWebhooks(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateBankAccountNotificationWebhook", () => {
    const body: api.NotificationsOncreatetransactionBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankAccountNotificationWebhook(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateBankAttribute", () => {
    const body: api.BANKIDAttributeBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankAttribute(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateOrUpdateBankAttributeDefinition", () => {
    const body: api.AttributedefinitionsBankBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateOrUpdateBankAttributeDefinition(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateSettlementAccount", () => {
    const body: api.BANKIDSettlementaccountsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateSettlementAccount(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateSystemAccountNotificationWebhook", () => {
    const body: api.NotificationsOncreatetransactionBody1 = undefined
    return expect(instance.oBPv400CreateSystemAccountNotificationWebhook(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankAttribute", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankAttribute(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankCascade", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankCascade(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankAttribute", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankAttribute(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankAttributes", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankAttributes(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBanks", () => {
    return expect(instance.oBPv400GetBanks({})).resolves.toBe(null)
  })
  test("oBPv400GetSettlementAccounts", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetSettlementAccounts(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankAttribute", () => {
    const body: api.AttributesBANKATTRIBUTEIDBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankAttribute(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateBank", () => {
    const body: api.V500BanksBody1 = undefined
    return expect(instance.oBPv500CreateBank(body, {})).resolves.toBe(null)
  })
  test("oBPv500GetBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500UpdateBank", () => {
    const body: api.V500BanksBody = undefined
    return expect(instance.oBPv500UpdateBank(body, {})).resolves.toBe(null)
  })
})

describe("BankAccountTag1Api", () => {
  let instance: api.BankAccountTag1Api
  beforeEach(function() {
    instance = new api.BankAccountTag1Api(config)
  });

  test("oBPv400GetBanks", () => {
    return expect(instance.oBPv400GetBanks({})).resolves.toBe(null)
  })
  test("oBPv400GetBanks_0", () => {
    return expect(instance.oBPv400GetBanks_0({})).resolves.toBe(null)
  })
  test("oBPv400GetBanks_1", () => {
    return expect(instance.oBPv400GetBanks_1({})).resolves.toBe(null)
  })
})

describe("BranchApi", () => {
  let instance: api.BranchApi
  beforeEach(function() {
    instance = new api.BranchApi(config)
  });

  test("oBPv300CreateBranch", () => {
    const body: api.BANKIDBranchesBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300CreateBranch(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetBranch", () => {
    const BRANCH_ID: string = "BRANCH_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetBranch(BRANCH_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetBranches", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetBranches(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteBranch", () => {
    const BRANCH_ID: string = "BRANCH_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310DeleteBranch(BRANCH_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("CardApi", () => {
  let instance: api.CardApi
  beforeEach(function() {
    instance = new api.CardApi(config)
  });

  test("oBPv130GetCards", () => {
    return expect(instance.oBPv130GetCards({})).resolves.toBe(null)
  })
  test("oBPv310CreateCardAttribute", () => {
    const body: api.CARDIDAttributeBody = undefined
    const CARD_ID: string = "CARD_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateCardAttribute(body, CARD_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteCardForBank", () => {
    const CARD_ID: string = "CARD_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310DeleteCardForBank(CARD_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCardForBank", () => {
    const CARD_ID: string = "CARD_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetCardForBank(CARD_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCardsForBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetCardsForBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetStatusOfCreditCardOrder", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetStatusOfCreditCardOrder(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCardAttribute", () => {
    const body: api.AttributesCARDATTRIBUTEIDBody = undefined
    const CARD_ATTRIBUTE_ID: string = "CARD_ATTRIBUTE_ID_example"
    const CARD_ID: string = "CARD_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCardAttribute(body, CARD_ATTRIBUTE_ID, CARD_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdatedCardForBank", () => {
    const body: api.CardsCARDIDBody = undefined
    const CARD_ID: string = "CARD_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdatedCardForBank(body, CARD_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateOrUpdateCardAttributeDefinition", () => {
    const body: api.AttributedefinitionsCardBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateOrUpdateCardAttributeDefinition(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteCardAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteCardAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCardAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCardAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500AddCardForBank", () => {
    const body: api.BANKIDCardsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500AddCardForBank(body, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("ConfirmationOfFundsServicePIISApi", () => {
  let instance: api.ConfirmationOfFundsServicePIISApi
  beforeEach(function() {
    instance = new api.ConfirmationOfFundsServicePIISApi(config)
  });

  test("oBPv310CheckFundsAvailable", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CheckFundsAvailable(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("ConnectorMethodApi", () => {
  let instance: api.ConnectorMethodApi
  beforeEach(function() {
    instance = new api.ConnectorMethodApi(config)
  });

  test("oBPv400CreateConnectorMethod", () => {
    const body: api.ManagementConnectormethodsBody = undefined
    return expect(instance.oBPv400CreateConnectorMethod(body, {})).resolves.toBe(null)
  })
  test("oBPv400GetAllConnectorMethods", () => {
    return expect(instance.oBPv400GetAllConnectorMethods({})).resolves.toBe(null)
  })
  test("oBPv400GetConnectorMethod", () => {
    return expect(instance.oBPv400GetConnectorMethod({})).resolves.toBe(null)
  })
  test("oBPv400UpdateConnectorMethod", () => {
    const body: api.ConnectormethodsCONNECTORMETHODIDBody = undefined
    return expect(instance.oBPv400UpdateConnectorMethod(body, {})).resolves.toBe(null)
  })
})

describe("ConsentApi", () => {
  let instance: api.ConsentApi
  beforeEach(function() {
    instance = new api.ConsentApi(config)
  });

  test("oBPv310AnswerConsentChallenge", () => {
    const body: api.CONSENTIDChallengeBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310AnswerConsentChallenge(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentEmail", () => {
    const body: api.ConsentsEMAILBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentEmail(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentImplicit", () => {
    const body: api.ConsentsIMPLICITBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentImplicit(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentSms", () => {
    const body: api.ConsentsSMSBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentSms(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310RevokeConsent", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310RevokeConsent(CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400AddConsentUser", () => {
    const body: api.CONSENTIDUserupdaterequestBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400AddConsentUser(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetConsentInfos", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetConsentInfos(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateConsentStatus", () => {
    const body: api.ConsentsCONSENTIDBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateConsentStatus(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdEmail", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdEmail({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdImplicit", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdImplicit({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdSms", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdSms({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentRequest", () => {
    const body: api.ConsumerConsentrequestsBody = undefined
    return expect(instance.oBPv500CreateConsentRequest(body, {})).resolves.toBe(null)
  })
  test("oBPv500GetConsentByConsentRequestId", () => {
    return expect(instance.oBPv500GetConsentByConsentRequestId({})).resolves.toBe(null)
  })
  test("oBPv500GetConsentRequest", () => {
    return expect(instance.oBPv500GetConsentRequest({})).resolves.toBe(null)
  })
  test("oBPv510CreateConsentImplicit", () => {
    const body: api.ConsentsIMPLICITBody1 = undefined
    return expect(instance.oBPv510CreateConsentImplicit(body, {})).resolves.toBe(null)
  })
  test("oBPv510CreateVRPConsentRequest", () => {
    const body: api.ConsumerVrpconsentrequestsBody = undefined
    return expect(instance.oBPv510CreateVRPConsentRequest(body, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsentByConsentId", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    return expect(instance.oBPv510GetConsentByConsentId(CONSENT_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsentByConsentIdViaConsumer", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    return expect(instance.oBPv510GetConsentByConsentIdViaConsumer(CONSENT_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsents", () => {
    return expect(instance.oBPv510GetConsents({})).resolves.toBe(null)
  })
  test("oBPv510GetConsentsAtBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetConsentsAtBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetMyConsents", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetMyConsents(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510MtlsClientCertificateInfo", () => {
    return expect(instance.oBPv510MtlsClientCertificateInfo({})).resolves.toBe(null)
  })
  test("oBPv510RevokeConsentAtBank", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510RevokeConsentAtBank(CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510SelfRevokeConsent", () => {
    return expect(instance.oBPv510SelfRevokeConsent({})).resolves.toBe(null)
  })
  test("oBPv510UpdateConsentAccountAccessByConsentId", () => {
    const body: api.CONSENTIDAccountaccessBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateConsentAccountAccessByConsentId(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateConsentStatusByConsent", () => {
    const body: api.ConsentsCONSENTIDBody1 = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateConsentStatusByConsent(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateConsentUserIdByConsentId", () => {
    const body: api.CONSENTIDCreatedbyuserBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateConsentUserIdByConsentId(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("ConsumerApi", () => {
  let instance: api.ConsumerApi
  beforeEach(function() {
    instance = new api.ConsumerApi(config)
  });

  test("oBPv300DeleteScope", () => {
    const SCOPE_ID: string = "SCOPE_ID_example"
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv300DeleteScope(SCOPE_ID, CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv310EnableDisableConsumers", () => {
    const body: api.ConsumersCONSUMERIDBody = undefined
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv310EnableDisableConsumers(body, CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCallsLimit", () => {
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv310GetCallsLimit(CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetConsumersForCurrentUser", () => {
    return expect(instance.oBPv310GetConsumersForCurrentUser({})).resolves.toBe(null)
  })
  test("oBPv400AddScope", () => {
    const body: api.CONSUMERIDScopesBody = undefined
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv400AddScope(body, CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CallsLimit", () => {
    const body: api.ConsumerCalllimitsBody = undefined
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv400CallsLimit(body, CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetScopes", () => {
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv400GetScopes(CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateConsumer", () => {
    const body: api.ManagementConsumersBody = undefined
    return expect(instance.oBPv510CreateConsumer(body, {})).resolves.toBe(null)
  })
  test("oBPv510CreateConsumerDynamicRegistraion", () => {
    const body: api.DynamicregistrationConsumersBody = undefined
    return expect(instance.oBPv510CreateConsumerDynamicRegistraion(body, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsumer", () => {
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv510GetConsumer(CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsumers", () => {
    return expect(instance.oBPv510GetConsumers({})).resolves.toBe(null)
  })
  test("oBPv510UpdateConsumerLogoURL", () => {
    const body: api.ConsumerLogoUrlBody = undefined
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv510UpdateConsumerLogoURL(body, CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateConsumerRedirectUrl", () => {
    const body: api.ConsumerRedirectUrlBody = undefined
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv510UpdateConsumerRedirectUrl(body, CONSUMER_ID, {})).resolves.toBe(null)
  })
})

describe("CounterpartyApi", () => {
  let instance: api.CounterpartyApi
  beforeEach(function() {
    instance = new api.CounterpartyApi(config)
  });

  test("oBPv121AddCounterpartyCorporateLocation", () => {
    const body: api.CorporateLocationJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyCorporateLocation(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyImageUrl", () => {
    const body: api.ImageUrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyImageUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyMoreInfo", () => {
    const body: api.MoreInfoJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyMoreInfo(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyOpenCorporatesUrl", () => {
    const body: api.OpenCorporateUrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyOpenCorporatesUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyPhysicalLocation", () => {
    const body: api.PhysicalLocationJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyPhysicalLocation(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyPublicAlias", () => {
    const body: api.AliasJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyPublicAlias(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyUrl", () => {
    const body: api.UrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddOtherAccountPrivateAlias", () => {
    const body: api.AliasJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddOtherAccountPrivateAlias(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyCorporateLocation", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyCorporateLocation(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyImageUrl", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyImageUrl(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyMoreInfo", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyMoreInfo(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyOpenCorporatesUrl", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyOpenCorporatesUrl(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyPhysicalLocation", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyPhysicalLocation(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyPrivateAlias", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyPrivateAlias(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyPublicAlias", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyPublicAlias(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyUrl", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyUrl(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetCounterpartyPublicAlias", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetCounterpartyPublicAlias(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetOtherAccountForTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetOtherAccountForTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetOtherAccountMetadata", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetOtherAccountMetadata(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetOtherAccountPrivateAlias", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetOtherAccountPrivateAlias(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyCorporateLocation", () => {
    const body: api.CorporateLocationJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyCorporateLocation(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyImageUrl", () => {
    const body: api.ImageUrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyImageUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyMoreInfo", () => {
    const body: api.MoreInfoJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyMoreInfo(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyOpenCorporatesUrl", () => {
    const body: api.OpenCorporateUrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyOpenCorporatesUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyPhysicalLocation", () => {
    const body: api.PhysicalLocationJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyPhysicalLocation(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyPrivateAlias", () => {
    const body: api.AliasJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyPrivateAlias(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyPublicAlias", () => {
    const body: api.AliasJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyPublicAlias(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyUrl", () => {
    const body: api.UrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetOtherAccountByIdForBankAccount", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetOtherAccountByIdForBankAccount(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetOtherAccountsForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetOtherAccountsForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateCounterparty", () => {
    const body: api.VIEWIDCounterpartiesBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateCounterparty(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateCounterpartyForAnyAccount", () => {
    const body: api.VIEWIDCounterpartiesBody1 = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateCounterpartyForAnyAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteCounterpartyForAnyAccount", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteCounterpartyForAnyAccount(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteExplicitCounterparty", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteExplicitCounterparty(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCounterpartiesForAnyAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCounterpartiesForAnyAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCounterpartyByIdForAnyAccount", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCounterpartyByIdForAnyAccount(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCounterpartyByNameForAnyAccount", () => {
    const COUNTERPARTY_NAME: string = "COUNTERPARTY_NAME_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCounterpartyByNameForAnyAccount(COUNTERPARTY_NAME, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetExplicitCounterpartiesForAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetExplicitCounterpartiesForAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetExplicitCounterpartyById", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetExplicitCounterpartyById(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("CounterpartyLimitsApi", () => {
  let instance: api.CounterpartyLimitsApi
  beforeEach(function() {
    instance = new api.CounterpartyLimitsApi(config)
  });

  test("oBPv510CreateCounterpartyLimit", () => {
    const body: api.COUNTERPARTYIDLimitsBody1 = undefined
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateCounterpartyLimit(body, COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510DeleteCounterpartyLimit", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510DeleteCounterpartyLimit(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCounterpartyLimit", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCounterpartyLimit(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCounterpartyLimitStatus", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCounterpartyLimitStatus(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateCounterpartyLimit", () => {
    const body: api.COUNTERPARTYIDLimitsBody = undefined
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateCounterpartyLimit(body, COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("CounterpartyMetadataApi", () => {
  let instance: api.CounterpartyMetadataApi
  beforeEach(function() {
    instance = new api.CounterpartyMetadataApi(config)
  });

  test("oBPv121AddCounterpartyCorporateLocation", () => {
    const body: api.CorporateLocationJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyCorporateLocation(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyImageUrl", () => {
    const body: api.ImageUrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyImageUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyMoreInfo", () => {
    const body: api.MoreInfoJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyMoreInfo(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyOpenCorporatesUrl", () => {
    const body: api.OpenCorporateUrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyOpenCorporatesUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyPhysicalLocation", () => {
    const body: api.PhysicalLocationJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyPhysicalLocation(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyPublicAlias", () => {
    const body: api.AliasJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyPublicAlias(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddCounterpartyUrl", () => {
    const body: api.UrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCounterpartyUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddOtherAccountPrivateAlias", () => {
    const body: api.AliasJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddOtherAccountPrivateAlias(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyCorporateLocation", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyCorporateLocation(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyImageUrl", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyImageUrl(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyMoreInfo", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyMoreInfo(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyOpenCorporatesUrl", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyOpenCorporatesUrl(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyPhysicalLocation", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyPhysicalLocation(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyPrivateAlias", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyPrivateAlias(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyPublicAlias", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyPublicAlias(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCounterpartyUrl", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCounterpartyUrl(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetCounterpartyPublicAlias", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetCounterpartyPublicAlias(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetOtherAccountMetadata", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetOtherAccountMetadata(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetOtherAccountPrivateAlias", () => {
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetOtherAccountPrivateAlias(OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyCorporateLocation", () => {
    const body: api.CorporateLocationJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyCorporateLocation(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyImageUrl", () => {
    const body: api.ImageUrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyImageUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyMoreInfo", () => {
    const body: api.MoreInfoJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyMoreInfo(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyOpenCorporatesUrl", () => {
    const body: api.OpenCorporateUrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyOpenCorporatesUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyPhysicalLocation", () => {
    const body: api.PhysicalLocationJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyPhysicalLocation(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyPrivateAlias", () => {
    const body: api.AliasJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyPrivateAlias(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyPublicAlias", () => {
    const body: api.AliasJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyPublicAlias(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateCounterpartyUrl", () => {
    const body: api.UrlJSON = undefined
    const OTHER_ACCOUNT_ID: string = "OTHER_ACCOUNT_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateCounterpartyUrl(body, OTHER_ACCOUNT_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetExplicitCounterpartyById", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetExplicitCounterpartyById(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("CustomerApi", () => {
  let instance: api.CustomerApi
  beforeEach(function() {
    instance = new api.CustomerApi(config)
  });

  test("oBPv140AddCustomerMessage", () => {
    const body: api.AddCustomerMessageJson = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140AddCustomerMessage(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv140GetCrmEvents", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140GetCrmEvents(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv140GetCustomersMessages", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140GetCustomersMessages(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200AddKycCheck", () => {
    const body: api.PostKycCheckJSON = undefined
    const KYC_CHECK_ID: string = "KYC_CHECK_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddKycCheck(body, KYC_CHECK_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200AddKycDocument", () => {
    const body: api.PostKycDocumentJSON = undefined
    const KYC_DOCUMENT_ID: string = "KYC_DOCUMENT_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddKycDocument(body, KYC_DOCUMENT_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200AddKycMedia", () => {
    const body: api.PostKycMediaJSON = undefined
    const KYC_MEDIA_ID: string = "KYC_MEDIA_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddKycMedia(body, KYC_MEDIA_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200AddKycStatus", () => {
    const body: api.PostKycStatusJSON = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddKycStatus(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200AddSocialMediaHandle", () => {
    const body: api.SocialMediaJSON = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddSocialMediaHandle(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetKycChecks", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv200GetKycChecks(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetKycDocuments", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv200GetKycDocuments(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetKycMedia", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv200GetKycMedia(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetKycStatuses", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv200GetKycStatuses(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetSocialMediaHandles", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200GetSocialMediaHandles(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetCustomersForUser", () => {
    return expect(instance.oBPv300GetCustomersForUser({})).resolves.toBe(null)
  })
  test("oBPv310CreateCustomerAddress", () => {
    const body: api.CUSTOMERIDAddressBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateCustomerAddress(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateMeeting", () => {
    const body: api.BANKIDMeetingsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateMeeting(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateTaxResidence", () => {
    const body: api.CUSTOMERIDTaxresidenceBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateTaxResidence(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteCustomerAddress", () => {
    const CUSTOMER_ADDRESS_ID: string = "CUSTOMER_ADDRESS_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310DeleteCustomerAddress(CUSTOMER_ADDRESS_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteTaxResidence", () => {
    const TAX_RESIDENCE_ID: string = "TAX_RESIDENCE_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310DeleteTaxResidence(TAX_RESIDENCE_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCustomerAddresses", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetCustomerAddresses(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCustomerByCustomerId", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetCustomerByCustomerId(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCustomerByCustomerNumber", () => {
    const body: api.CustomersCustomernumberBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetCustomerByCustomerNumber(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetFirehoseCustomers", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetFirehoseCustomers(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetMeeting", () => {
    const MEETING_ID: string = "MEETING_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetMeeting(MEETING_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetMeetings", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetMeetings(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetTaxResidence", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetTaxResidence(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerAddress", () => {
    const body: api.AddressesCUSTOMERADDRESSIDBody = undefined
    const CUSTOMER_ADDRESS_ID: string = "CUSTOMER_ADDRESS_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerAddress(body, CUSTOMER_ADDRESS_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerBranch", () => {
    const body: api.CUSTOMERIDBranchBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerBranch(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerCreditLimit", () => {
    const body: api.CUSTOMERIDCreditlimitBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerCreditLimit(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerCreditRatingAndSource", () => {
    const body: api.CUSTOMERIDCreditratingandsourceBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerCreditRatingAndSource(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerData", () => {
    const body: api.CUSTOMERIDDataBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerData(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerEmail", () => {
    const body: api.CUSTOMERIDEmailBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerEmail(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerIdentity", () => {
    const body: api.CUSTOMERIDIdentityBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerIdentity(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerMobileNumber", () => {
    const body: api.CUSTOMERIDMobilenumberBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerMobileNumber(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310UpdateCustomerNumber", () => {
    const body: api.CUSTOMERIDNumberBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310UpdateCustomerNumber(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateCustomerAttribute", () => {
    const body: api.CUSTOMERIDAttributeBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateCustomerAttribute(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateCustomerMessage", () => {
    const body: api.CUSTOMERIDMessagesBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateCustomerMessage(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateOrUpdateCustomerAttributeAttributeDefinition", () => {
    const body: api.AttributedefinitionsCustomerBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateOrUpdateCustomerAttributeAttributeDefinition(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateUserCustomerLinks", () => {
    const body: api.BANKIDUserCustomerLinksBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateUserCustomerLinks(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteCustomerAttribute", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteCustomerAttribute(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteCustomerAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteCustomerAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteCustomerCascade", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteCustomerCascade(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteUserCustomerLink", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteUserCustomerLink(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCorrelatedUsersInfoByCustomerId", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCorrelatedUsersInfoByCustomerId(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCustomerAttributeById", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCustomerAttributeById(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCustomerAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCustomerAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCustomerAttributes", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCustomerAttributes(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCustomerMessages", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCustomerMessages(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCustomersAtAnyBank", () => {
    return expect(instance.oBPv400GetCustomersAtAnyBank({})).resolves.toBe(null)
  })
  test("oBPv400GetCustomersByCustomerPhoneNumber", () => {
    const body: api.CustomersMobilephonenumberBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCustomersByCustomerPhoneNumber(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCustomersMinimalAtAnyBank", () => {
    return expect(instance.oBPv400GetCustomersMinimalAtAnyBank({})).resolves.toBe(null)
  })
  test("oBPv400GetMyCorrelatedEntities", () => {
    return expect(instance.oBPv400GetMyCorrelatedEntities({})).resolves.toBe(null)
  })
  test("oBPv400GetUserCustomerLinksByCustomerId", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetUserCustomerLinksByCustomerId(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetUserCustomerLinksByUserId", () => {
    const USER_ID: string = "USER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetUserCustomerLinksByUserId(USER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateCustomerAttribute", () => {
    const body: api.AttributesCUSTOMERATTRIBUTEIDBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateCustomerAttribute(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateCustomer", () => {
    const body: api.BANKIDCustomersBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500CreateCustomer(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateCustomerAccountLink", () => {
    const body: api.BANKIDCustomeraccountlinksBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500CreateCustomerAccountLink(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500DeleteCustomerAccountLinkById", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500DeleteCustomerAccountLinkById(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomerAccountLinkById", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomerAccountLinkById(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomerAccountLinksByBankIdAccountId", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomerAccountLinksByBankIdAccountId(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomerAccountLinksByCustomerId", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomerAccountLinksByCustomerId(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomerOverview", () => {
    const body: api.CustomernumberqueryOverviewBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomerOverview(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomerOverviewFlat", () => {
    const body: api.CustomernumberqueryOverviewflatBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomerOverviewFlat(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomersAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomersAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomersMinimalAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomersMinimalAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetMyCustomersAtAnyBank", () => {
    return expect(instance.oBPv500GetMyCustomersAtAnyBank({})).resolves.toBe(null)
  })
  test("oBPv500GetMyCustomersAtBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetMyCustomersAtBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500UpdateCustomerAccountLinkById", () => {
    const body: api.CustomeraccountlinksCUSTOMERACCOUNTLINKIDBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500UpdateCustomerAccountLinkById(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateAgent", () => {
    const body: api.BANKIDAgentsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateAgent(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCustomersByLegalName", () => {
    const body: api.CustomersLegalnameBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCustomersByLegalName(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCustomersForUserIdsOnly", () => {
    return expect(instance.oBPv510GetCustomersForUserIdsOnly({})).resolves.toBe(null)
  })
  test("oBPv510UpdateAgentStatus", () => {
    const body: api.AgentsAGENTIDBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateAgentStatus(body, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("CustomerMeetingApi", () => {
  let instance: api.CustomerMeetingApi
  beforeEach(function() {
    instance = new api.CustomerMeetingApi(config)
  });

  test("oBPv310CreateMeeting", () => {
    const body: api.BANKIDMeetingsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateMeeting(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetMeeting", () => {
    const MEETING_ID: string = "MEETING_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetMeeting(MEETING_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetMeetings", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetMeetings(BANK_ID, {})).resolves.toBe(null)
  })
})

describe("CustomerMessageApi", () => {
  let instance: api.CustomerMessageApi
  beforeEach(function() {
    instance = new api.CustomerMessageApi(config)
  });

  test("oBPv140AddCustomerMessage", () => {
    const body: api.AddCustomerMessageJson = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140AddCustomerMessage(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv140GetCustomersMessages", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140GetCustomersMessages(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateCustomerMessage", () => {
    const body: api.CUSTOMERIDMessagesBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateCustomerMessage(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCustomerMessages", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCustomerMessages(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("DAuthApi", () => {
  let instance: api.DAuthApi
  beforeEach(function() {
    instance = new api.DAuthApi(config)
  });

  test("oBPv400CreateUserWithRoles", () => {
    const body: api.V400UserentitlementsBody = undefined
    return expect(instance.oBPv400CreateUserWithRoles(body, {})).resolves.toBe(null)
  })
  test("oBPv510CreateUserWithAccountAccessById", () => {
    const body: api.VIEWIDUseraccountaccessBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateUserWithAccountAccessById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("DataWarehouseApi", () => {
  let instance: api.DataWarehouseApi
  beforeEach(function() {
    instance = new api.DataWarehouseApi(config)
  });

  test("oBPv300DataWarehouseSearch", () => {
    const body: api.WarehouseINDEXBody = undefined
    const INDEX: string = "INDEX_example"
    return expect(instance.oBPv300DataWarehouseSearch(body, INDEX, {})).resolves.toBe(null)
  })
  test("oBPv300DataWarehouseStatistics", () => {
    const body: api.INDEXFIELDBody = undefined
    const FIELD: string = "FIELD_example"
    const INDEX: string = "INDEX_example"
    return expect(instance.oBPv300DataWarehouseStatistics(body, FIELD, INDEX, {})).resolves.toBe(null)
  })
})

describe("DirectDebitApi", () => {
  let instance: api.DirectDebitApi
  beforeEach(function() {
    instance = new api.DirectDebitApi(config)
  });

  test("oBPv400CreateDirectDebit", () => {
    const body: api.VIEWIDDirectdebitBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateDirectDebit(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateDirectDebitManagement", () => {
    const body: api.ACCOUNTIDDirectdebitBody = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateDirectDebitManagement(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("DirectoryApi", () => {
  let instance: api.DirectoryApi
  beforeEach(function() {
    instance = new api.DirectoryApi(config)
  });

  test("oBPv510CreateConsumerDynamicRegistraion", () => {
    const body: api.DynamicregistrationConsumersBody = undefined
    return expect(instance.oBPv510CreateConsumerDynamicRegistraion(body, {})).resolves.toBe(null)
  })
  test("oBPv510CreateRegulatedEntity", () => {
    const body: api.V510RegulatedentitiesBody = undefined
    return expect(instance.oBPv510CreateRegulatedEntity(body, {})).resolves.toBe(null)
  })
  test("oBPv510DeleteRegulatedEntity", () => {
    return expect(instance.oBPv510DeleteRegulatedEntity({})).resolves.toBe(null)
  })
  test("oBPv510GetRegulatedEntityById", () => {
    return expect(instance.oBPv510GetRegulatedEntityById({})).resolves.toBe(null)
  })
  test("oBPv510RegulatedEntities", () => {
    return expect(instance.oBPv510RegulatedEntities({})).resolves.toBe(null)
  })
})

describe("DocumentationApi", () => {
  let instance: api.DocumentationApi
  beforeEach(function() {
    instance = new api.DocumentationApi(config)
  });

  test("oBPv140GetBankLevelDynamicResourceDocsObp", () => {
    const API_VERSION: string = "API_VERSION_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140GetBankLevelDynamicResourceDocsObp(API_VERSION, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv140GetResourceDocsObpV400", () => {
    const API_VERSION: string = "API_VERSION_example"
    return expect(instance.oBPv140GetResourceDocsObpV400(API_VERSION, {})).resolves.toBe(null)
  })
  test("oBPv140GetResourceDocsSwagger", () => {
    const API_VERSION: string = "API_VERSION_example"
    return expect(instance.oBPv140GetResourceDocsSwagger(API_VERSION, {})).resolves.toBe(null)
  })
  test("oBPv220GetMessageDocs", () => {
    return expect(instance.oBPv220GetMessageDocs({})).resolves.toBe(null)
  })
  test("oBPv300GetApiGlossary", () => {
    return expect(instance.oBPv300GetApiGlossary({})).resolves.toBe(null)
  })
  test("oBPv310GetMessageDocsSwagger", () => {
    return expect(instance.oBPv310GetMessageDocsSwagger({})).resolves.toBe(null)
  })
  test("oBPv400GetScannedApiVersions", () => {
    return expect(instance.oBPv400GetScannedApiVersions({})).resolves.toBe(null)
  })
})

describe("DynamicEndpointManageApi", () => {
  let instance: api.DynamicEndpointManageApi
  beforeEach(function() {
    instance = new api.DynamicEndpointManageApi(config)
  });

  test("oBPv400CreateBankLevelDynamicEndpoint", () => {
    const body: api.BANKIDDynamicendpointsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankLevelDynamicEndpoint(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateDynamicEndpoint", () => {
    const body: api.ManagementDynamicendpointsBody = undefined
    return expect(instance.oBPv400CreateDynamicEndpoint(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankLevelDynamicEndpoint", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankLevelDynamicEndpoint(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteDynamicEndpoint", () => {
    return expect(instance.oBPv400DeleteDynamicEndpoint({})).resolves.toBe(null)
  })
  test("oBPv400DeleteMyDynamicEndpoint", () => {
    return expect(instance.oBPv400DeleteMyDynamicEndpoint({})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelDynamicEndpoint", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelDynamicEndpoint(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelDynamicEndpoints", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelDynamicEndpoints(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetDynamicEndpoint", () => {
    return expect(instance.oBPv400GetDynamicEndpoint({})).resolves.toBe(null)
  })
  test("oBPv400GetDynamicEndpoints", () => {
    return expect(instance.oBPv400GetDynamicEndpoints({})).resolves.toBe(null)
  })
  test("oBPv400GetMyDynamicEndpoints", () => {
    return expect(instance.oBPv400GetMyDynamicEndpoints({})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankLevelDynamicEndpointHost", () => {
    const body: api.DYNAMICENDPOINTIDHostBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankLevelDynamicEndpointHost(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateDynamicEndpointHost", () => {
    const body: api.DYNAMICENDPOINTIDHostBody1 = undefined
    return expect(instance.oBPv400UpdateDynamicEndpointHost(body, {})).resolves.toBe(null)
  })
})

describe("DynamicEntityManageApi", () => {
  let instance: api.DynamicEntityManageApi
  beforeEach(function() {
    instance = new api.DynamicEntityManageApi(config)
  });

  test("oBPv400CreateBankLevelDynamicEntity", () => {
    const body: api.BANKIDDynamicentitiesBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankLevelDynamicEntity(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateSystemDynamicEntity", () => {
    const body: api.ManagementSystemdynamicentitiesBody = undefined
    return expect(instance.oBPv400CreateSystemDynamicEntity(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankLevelDynamicEntity", () => {
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteMyDynamicEntity", () => {
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    return expect(instance.oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteSystemDynamicEntity", () => {
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    return expect(instance.oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelDynamicEntities", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelDynamicEntities(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetMyDynamicEntities", () => {
    return expect(instance.oBPv400GetMyDynamicEntities({})).resolves.toBe(null)
  })
  test("oBPv400GetSystemDynamicEntities", () => {
    return expect(instance.oBPv400GetSystemDynamicEntities({})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankLevelDynamicEntity", () => {
    const body: api.DynamicentitiesDYNAMICENTITYIDBody = undefined
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankLevelDynamicEntity(body, DYNAMIC_ENTITY_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateMyDynamicEntity", () => {
    const body: api.DynamicentitiesDYNAMICENTITYIDBody1 = undefined
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    return expect(instance.oBPv400UpdateMyDynamicEntity(body, DYNAMIC_ENTITY_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateSystemDynamicEntity", () => {
    const body: api.SystemdynamicentitiesDYNAMICENTITYIDBody = undefined
    const DYNAMIC_ENTITY_ID: string = "DYNAMIC_ENTITY_ID_example"
    return expect(instance.oBPv400UpdateSystemDynamicEntity(body, DYNAMIC_ENTITY_ID, {})).resolves.toBe(null)
  })
})

describe("DynamicMessageDocApi", () => {
  let instance: api.DynamicMessageDocApi
  beforeEach(function() {
    instance = new api.DynamicMessageDocApi(config)
  });

  test("oBPv400CreateBankLevelDynamicMessageDoc", () => {
    const body: api.BANKIDDynamicmessagedocsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankLevelDynamicMessageDoc(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateDynamicMessageDoc", () => {
    const body: api.ManagementDynamicmessagedocsBody = undefined
    return expect(instance.oBPv400CreateDynamicMessageDoc(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankLevelDynamicMessageDoc", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankLevelDynamicMessageDoc(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteDynamicMessageDoc", () => {
    return expect(instance.oBPv400DeleteDynamicMessageDoc({})).resolves.toBe(null)
  })
  test("oBPv400GetAllBankLevelDynamicMessageDocs", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetAllBankLevelDynamicMessageDocs(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetAllDynamicMessageDocs", () => {
    return expect(instance.oBPv400GetAllDynamicMessageDocs({})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelDynamicMessageDoc", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelDynamicMessageDoc(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetDynamicMessageDoc", () => {
    return expect(instance.oBPv400GetDynamicMessageDoc({})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankLevelDynamicMessageDoc", () => {
    const body: api.DynamicmessagedocsDYNAMICMESSAGEDOCIDBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankLevelDynamicMessageDoc(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateDynamicMessageDoc", () => {
    const body: api.DynamicmessagedocsDYNAMICMESSAGEDOCIDBody1 = undefined
    return expect(instance.oBPv400UpdateDynamicMessageDoc(body, {})).resolves.toBe(null)
  })
})

describe("DynamicResourceDocApi", () => {
  let instance: api.DynamicResourceDocApi
  beforeEach(function() {
    instance = new api.DynamicResourceDocApi(config)
  });

  test("oBPv400BuildDynamicEndpointTemplate", () => {
    const body: api.DynamicresourcedocsEndpointcodeBody = undefined
    return expect(instance.oBPv400BuildDynamicEndpointTemplate(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateBankLevelDynamicResourceDoc", () => {
    const body: api.BANKIDDynamicresourcedocsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankLevelDynamicResourceDoc(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateDynamicResourceDoc", () => {
    const body: api.ManagementDynamicresourcedocsBody = undefined
    return expect(instance.oBPv400CreateDynamicResourceDoc(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankLevelDynamicResourceDoc", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankLevelDynamicResourceDoc(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteDynamicResourceDoc", () => {
    return expect(instance.oBPv400DeleteDynamicResourceDoc({})).resolves.toBe(null)
  })
  test("oBPv400GetAllBankLevelDynamicResourceDocs", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetAllBankLevelDynamicResourceDocs(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetAllDynamicResourceDocs", () => {
    return expect(instance.oBPv400GetAllDynamicResourceDocs({})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelDynamicResourceDoc", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelDynamicResourceDoc(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetDynamicResourceDoc", () => {
    return expect(instance.oBPv400GetDynamicResourceDoc({})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankLevelDynamicResourceDoc", () => {
    const body: api.DynamicresourcedocsDYNAMICRESOURCEDOCIDBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankLevelDynamicResourceDoc(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateDynamicResourceDoc", () => {
    const body: api.DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1 = undefined
    return expect(instance.oBPv400UpdateDynamicResourceDoc(body, {})).resolves.toBe(null)
  })
})

describe("EndpointMappingApi", () => {
  let instance: api.EndpointMappingApi
  beforeEach(function() {
    instance = new api.EndpointMappingApi(config)
  });

  test("oBPv400CreateBankLevelEndpointMapping", () => {
    const body: api.BANKIDEndpointmappingsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankLevelEndpointMapping(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateEndpointMapping", () => {
    const body: api.ManagementEndpointmappingsBody = undefined
    return expect(instance.oBPv400CreateEndpointMapping(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteBankLevelEndpointMapping", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteBankLevelEndpointMapping(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteEndpointMapping", () => {
    return expect(instance.oBPv400DeleteEndpointMapping({})).resolves.toBe(null)
  })
  test("oBPv400GetAllBankLevelEndpointMappings", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetAllBankLevelEndpointMappings(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetAllEndpointMappings", () => {
    return expect(instance.oBPv400GetAllEndpointMappings({})).resolves.toBe(null)
  })
  test("oBPv400GetBankLevelEndpointMapping", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankLevelEndpointMapping(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetEndpointMapping", () => {
    return expect(instance.oBPv400GetEndpointMapping({})).resolves.toBe(null)
  })
  test("oBPv400UpdateBankLevelEndpointMapping", () => {
    const body: api.EndpointmappingsENDPOINTMAPPINGIDBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateBankLevelEndpointMapping(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateEndpointMapping", () => {
    const body: api.EndpointmappingsENDPOINTMAPPINGIDBody1 = undefined
    return expect(instance.oBPv400UpdateEndpointMapping(body, {})).resolves.toBe(null)
  })
})

describe("EntitlementApi", () => {
  let instance: api.EntitlementApi
  beforeEach(function() {
    instance = new api.EntitlementApi(config)
  });

  test("oBPv200AddEntitlement", () => {
    const body: api.CreateEntitlementJSON = undefined
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv200AddEntitlement(body, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200DeleteEntitlement", () => {
    const ENTITLEMENT_ID: string = "ENTITLEMENT_ID_example"
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv200DeleteEntitlement(ENTITLEMENT_ID, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetPermissionsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200GetPermissionsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210GetEntitlementsByBankAndUser", () => {
    const USER_ID: string = "USER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210GetEntitlementsByBankAndUser(USER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300AddEntitlementRequest", () => {
    const body: api.V300EntitlementrequestsBody = undefined
    return expect(instance.oBPv300AddEntitlementRequest(body, {})).resolves.toBe(null)
  })
  test("oBPv300DeleteEntitlementRequest", () => {
    const ENTITLEMENT_REQUEST_ID: string = "ENTITLEMENT_REQUEST_ID_example"
    return expect(instance.oBPv300DeleteEntitlementRequest(ENTITLEMENT_REQUEST_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetAllEntitlementRequests", () => {
    return expect(instance.oBPv300GetAllEntitlementRequests({})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementRequests", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv300GetEntitlementRequests(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementRequestsForCurrentUser", () => {
    return expect(instance.oBPv300GetEntitlementRequestsForCurrentUser({})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementsForCurrentUser", () => {
    return expect(instance.oBPv300GetEntitlementsForCurrentUser({})).resolves.toBe(null)
  })
  test("oBPv310GetAllEntitlements", () => {
    return expect(instance.oBPv310GetAllEntitlements({})).resolves.toBe(null)
  })
  test("oBPv400CreateUserWithRoles", () => {
    const body: api.V400UserentitlementsBody = undefined
    return expect(instance.oBPv400CreateUserWithRoles(body, {})).resolves.toBe(null)
  })
  test("oBPv400GetEntitlements", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv400GetEntitlements(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetEntitlementsForBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetEntitlementsForBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetEntitlementsAndPermissions", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510GetEntitlementsAndPermissions(USER_ID, {})).resolves.toBe(null)
  })
})

describe("ExperimentalApi", () => {
  let instance: api.ExperimentalApi
  beforeEach(function() {
    instance = new api.ExperimentalApi(config)
  });

  test("oBPv310CreateMeeting", () => {
    const body: api.BANKIDMeetingsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateMeeting(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetMeeting", () => {
    const MEETING_ID: string = "MEETING_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetMeeting(MEETING_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetMeetings", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetMeetings(BANK_ID, {})).resolves.toBe(null)
  })
})

describe("FXApi", () => {
  let instance: api.FXApi
  beforeEach(function() {
    instance = new api.FXApi(config)
  });

  test("oBPv220CreateFx", () => {
    const body: api.BANKIDFxBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv220CreateFx(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv220GetCurrentFxRate", () => {
    const TO_CURRENCY_CODE: string = "TO_CURRENCY_CODE_example"
    const FROM_CURRENCY_CODE: string = "FROM_CURRENCY_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv220GetCurrentFxRate(TO_CURRENCY_CODE, FROM_CURRENCY_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCurrenciesAtBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCurrenciesAtBank(BANK_ID, {})).resolves.toBe(null)
  })
})

describe("FirehoseDataApi", () => {
  let instance: api.FirehoseDataApi
  beforeEach(function() {
    instance = new api.FirehoseDataApi(config)
  });

  test("oBPv300GetFirehoseTransactionsForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetFirehoseTransactionsForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetFirehoseCustomers", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetFirehoseCustomers(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetFastFirehoseAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetFastFirehoseAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetFirehoseAccountsAtOneBank", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetFirehoseAccountsAtOneBank(VIEW_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("JSONSchemaValidationApi", () => {
  let instance: api.JSONSchemaValidationApi
  beforeEach(function() {
    instance = new api.JSONSchemaValidationApi(config)
  });

  test("oBPv400CreateJsonSchemaValidation", () => {
    const body: api.JsonschemavalidationsOPERATIONIDBody1 = undefined
    return expect(instance.oBPv400CreateJsonSchemaValidation(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteJsonSchemaValidation", () => {
    return expect(instance.oBPv400DeleteJsonSchemaValidation({})).resolves.toBe(null)
  })
  test("oBPv400GetAllJsonSchemaValidations", () => {
    return expect(instance.oBPv400GetAllJsonSchemaValidations({})).resolves.toBe(null)
  })
  test("oBPv400GetAllJsonSchemaValidationsPublic", () => {
    return expect(instance.oBPv400GetAllJsonSchemaValidationsPublic({})).resolves.toBe(null)
  })
  test("oBPv400GetJsonSchemaValidation", () => {
    return expect(instance.oBPv400GetJsonSchemaValidation({})).resolves.toBe(null)
  })
  test("oBPv400UpdateJsonSchemaValidation", () => {
    const body: api.JsonschemavalidationsOPERATIONIDBody = undefined
    return expect(instance.oBPv400UpdateJsonSchemaValidation(body, {})).resolves.toBe(null)
  })
})

describe("KYCApi", () => {
  let instance: api.KYCApi
  beforeEach(function() {
    instance = new api.KYCApi(config)
  });

  test("oBPv200AddKycCheck", () => {
    const body: api.PostKycCheckJSON = undefined
    const KYC_CHECK_ID: string = "KYC_CHECK_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddKycCheck(body, KYC_CHECK_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200AddKycDocument", () => {
    const body: api.PostKycDocumentJSON = undefined
    const KYC_DOCUMENT_ID: string = "KYC_DOCUMENT_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddKycDocument(body, KYC_DOCUMENT_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200AddKycMedia", () => {
    const body: api.PostKycMediaJSON = undefined
    const KYC_MEDIA_ID: string = "KYC_MEDIA_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddKycMedia(body, KYC_MEDIA_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200AddKycStatus", () => {
    const body: api.PostKycStatusJSON = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200AddKycStatus(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetKycChecks", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv200GetKycChecks(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetKycDocuments", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv200GetKycDocuments(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetKycMedia", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv200GetKycMedia(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetKycStatuses", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    return expect(instance.oBPv200GetKycStatuses(CUSTOMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateTaxResidence", () => {
    const body: api.CUSTOMERIDTaxresidenceBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateTaxResidence(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteCustomerAddress", () => {
    const CUSTOMER_ADDRESS_ID: string = "CUSTOMER_ADDRESS_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310DeleteCustomerAddress(CUSTOMER_ADDRESS_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteTaxResidence", () => {
    const TAX_RESIDENCE_ID: string = "TAX_RESIDENCE_ID_example"
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310DeleteTaxResidence(TAX_RESIDENCE_ID, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCustomerAddresses", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetCustomerAddresses(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetCustomerByCustomerNumber", () => {
    const body: api.CustomersCustomernumberBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetCustomerByCustomerNumber(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetTaxResidence", () => {
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetTaxResidence(CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateUserInvitation", () => {
    const body: api.BANKIDUserinvitationBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateUserInvitation(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCustomersByCustomerPhoneNumber", () => {
    const body: api.CustomersMobilephonenumberBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCustomersByCustomerPhoneNumber(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetUserInvitationAnonymous", () => {
    const body: api.BANKIDUserinvitationsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetUserInvitationAnonymous(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomerOverview", () => {
    const body: api.CustomernumberqueryOverviewBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomerOverview(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomerOverviewFlat", () => {
    const body: api.CustomernumberqueryOverviewflatBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomerOverviewFlat(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCustomersByLegalName", () => {
    const body: api.CustomersLegalnameBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCustomersByLegalName(body, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("MethodRoutingApi", () => {
  let instance: api.MethodRoutingApi
  beforeEach(function() {
    instance = new api.MethodRoutingApi(config)
  });

  test("oBPv310CreateMethodRouting", () => {
    const body: api.ManagementMethodRoutingsBody = undefined
    return expect(instance.oBPv310CreateMethodRouting(body, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteMethodRouting", () => {
    const METHOD_ROUTING_ID: string = "METHOD_ROUTING_ID_example"
    return expect(instance.oBPv310DeleteMethodRouting(METHOD_ROUTING_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetMethodRoutings", () => {
    return expect(instance.oBPv310GetMethodRoutings({})).resolves.toBe(null)
  })
  test("oBPv310UpdateMethodRouting", () => {
    const body: api.MethodRoutingsMETHODROUTINGIDBody = undefined
    const METHOD_ROUTING_ID: string = "METHOD_ROUTING_ID_example"
    return expect(instance.oBPv310UpdateMethodRouting(body, METHOD_ROUTING_ID, {})).resolves.toBe(null)
  })
})

describe("MetricApi", () => {
  let instance: api.MetricApi
  beforeEach(function() {
    instance = new api.MetricApi(config)
  });

  test("oBPv200ElasticSearchMetrics", () => {
    return expect(instance.oBPv200ElasticSearchMetrics({})).resolves.toBe(null)
  })
  test("oBPv220GetConnectorMetrics", () => {
    return expect(instance.oBPv220GetConnectorMetrics({})).resolves.toBe(null)
  })
  test("oBPv310GetMetricsTopConsumers", () => {
    return expect(instance.oBPv310GetMetricsTopConsumers({})).resolves.toBe(null)
  })
  test("oBPv310GetTopAPIs", () => {
    return expect(instance.oBPv310GetTopAPIs({})).resolves.toBe(null)
  })
  test("oBPv500GetMetricsAtBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetMetricsAtBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetAggregateMetrics", () => {
    return expect(instance.oBPv510GetAggregateMetrics({})).resolves.toBe(null)
  })
  test("oBPv510GetMetrics", () => {
    return expect(instance.oBPv510GetMetrics({})).resolves.toBe(null)
  })
})

describe("OldStyleApi", () => {
  let instance: api.OldStyleApi
  beforeEach(function() {
    instance = new api.OldStyleApi(config)
  });

  test("oBPv200ElasticSearchMetrics", () => {
    return expect(instance.oBPv200ElasticSearchMetrics({})).resolves.toBe(null)
  })
})

describe("OnboardingApi", () => {
  let instance: api.OnboardingApi
  beforeEach(function() {
    instance = new api.OnboardingApi(config)
  });

  test("oBPv200CreateUser", () => {
    const body: api.CreateUserJson = undefined
    return expect(instance.oBPv200CreateUser(body, {})).resolves.toBe(null)
  })
  test("oBPv500CreateAccount", () => {
    const body: api.AccountsACCOUNTIDBody2 = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500CreateAccount(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("OwnerViewRequiredApi", () => {
  let instance: api.OwnerViewRequiredApi
  beforeEach(function() {
    instance = new api.OwnerViewRequiredApi(config)
  });

  test("oBPv510CreateUserWithAccountAccessById", () => {
    const body: api.VIEWIDUseraccountaccessBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateUserWithAccountAccessById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GrantUserAccessToViewById", () => {
    const body: api.AccountaccessGrantBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GrantUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510RevokeUserAccessToViewById", () => {
    const body: api.AccountaccessRevokeBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510RevokeUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("PSD2Api", () => {
  let instance: api.PSD2Api
  beforeEach(function() {
    instance = new api.PSD2Api(config)
  });

  test("oBPv140GetTransactionRequestTypes", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140GetTransactionRequestTypes(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetTransactionTypes", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200GetTransactionTypes(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210CreateTransactionRequestSandboxTan", () => {
    const body: api.SANDBOXTANTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210CreateTransactionRequestSandboxTan(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300CorePrivateAccountsAllBanks", () => {
    return expect(instance.oBPv300CorePrivateAccountsAllBanks({})).resolves.toBe(null)
  })
  test("oBPv300GetAccountsHeld", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetAccountsHeld(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetCoreTransactionsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetCoreTransactionsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetPrivateAccountIdsbyBankId", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetPrivateAccountIdsbyBankId(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300PrivateAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300PrivateAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310AnswerConsentChallenge", () => {
    const body: api.CONSENTIDChallengeBody = undefined
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310AnswerConsentChallenge(body, CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CheckFundsAvailable", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CheckFundsAvailable(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentEmail", () => {
    const body: api.ConsentsEMAILBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentEmail(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentImplicit", () => {
    const body: api.ConsentsIMPLICITBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentImplicit(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310CreateConsentSms", () => {
    const body: api.ConsentsSMSBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateConsentSms(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetServerJWK", () => {
    return expect(instance.oBPv310GetServerJWK({})).resolves.toBe(null)
  })
  test("oBPv310RevokeConsent", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310RevokeConsent(CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400AnswerTransactionRequestChallenge", () => {
    const body: api.TRANSACTIONREQUESTIDChallengeBody = undefined
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const TRANSACTION_REQUEST_TYPE: string = "TRANSACTION_REQUEST_TYPE_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400AnswerTransactionRequestChallenge(body, TRANSACTION_REQUEST_ID, TRANSACTION_REQUEST_TYPE, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAccount", () => {
    const body: api.ACCOUNTTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAccountOtp", () => {
    const body: api.ACCOUNTOTPTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAccountOtp(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAgentCashWithDrawal", () => {
    const body: api.AGENTCASHWITHDRAWALTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAgentCashWithDrawal(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestCard", () => {
    const body: api.CARDTransactionrequestsBody = undefined
    return expect(instance.oBPv400CreateTransactionRequestCard(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestCounterparty", () => {
    const body: api.COUNTERPARTYTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestCounterparty(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestRefund", () => {
    const body: api.REFUNDTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestRefund(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestSepa", () => {
    const body: api.SEPATransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestSepa(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestSimple", () => {
    const body: api.SIMPLETransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestSimple(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBankAccountBalancesForCurrentUser", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetBankAccountBalancesForCurrentUser(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBanks", () => {
    return expect(instance.oBPv400GetBanks({})).resolves.toBe(null)
  })
  test("oBPv400GetConsentInfos", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetConsentInfos(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCoreAccountById", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCoreAccountById(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCounterpartiesForAnyAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCounterpartiesForAnyAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetExplicitCounterpartiesForAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetExplicitCounterpartiesForAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetExplicitCounterpartyById", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetExplicitCounterpartyById(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetSettlementAccounts", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetSettlementAccounts(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionRequest", () => {
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionRequest(TRANSACTION_REQUEST_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdEmail", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdEmail({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdImplicit", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdImplicit({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentByConsentRequestIdSms", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdSms({})).resolves.toBe(null)
  })
  test("oBPv500CreateConsentRequest", () => {
    const body: api.ConsumerConsentrequestsBody = undefined
    return expect(instance.oBPv500CreateConsentRequest(body, {})).resolves.toBe(null)
  })
  test("oBPv500GetBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetConsentByConsentRequestId", () => {
    return expect(instance.oBPv500GetConsentByConsentRequestId({})).resolves.toBe(null)
  })
  test("oBPv500GetConsentRequest", () => {
    return expect(instance.oBPv500GetConsentRequest({})).resolves.toBe(null)
  })
  test("oBPv510CreateConsentImplicit", () => {
    const body: api.ConsentsIMPLICITBody1 = undefined
    return expect(instance.oBPv510CreateConsentImplicit(body, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountBalances", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountBalances(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountsBalances", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountsBalances(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetBankAccountsBalancesThroughView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetBankAccountsBalancesThroughView(VIEW_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsentByConsentId", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    return expect(instance.oBPv510GetConsentByConsentId(CONSENT_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsentByConsentIdViaConsumer", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    return expect(instance.oBPv510GetConsentByConsentIdViaConsumer(CONSENT_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetConsents", () => {
    return expect(instance.oBPv510GetConsents({})).resolves.toBe(null)
  })
  test("oBPv510GetConsentsAtBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetConsentsAtBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCoreAccountByIdThroughView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCoreAccountByIdThroughView(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetMyConsents", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetMyConsents(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetTransactionRequestById", () => {
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    return expect(instance.oBPv510GetTransactionRequestById(TRANSACTION_REQUEST_ID, {})).resolves.toBe(null)
  })
  test("oBPv510MtlsClientCertificateInfo", () => {
    return expect(instance.oBPv510MtlsClientCertificateInfo({})).resolves.toBe(null)
  })
  test("oBPv510RevokeConsentAtBank", () => {
    const CONSENT_ID: string = "CONSENT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510RevokeConsentAtBank(CONSENT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510SelfRevokeConsent", () => {
    return expect(instance.oBPv510SelfRevokeConsent({})).resolves.toBe(null)
  })
})

describe("PaymentInitiationServicePISApi", () => {
  let instance: api.PaymentInitiationServicePISApi
  beforeEach(function() {
    instance = new api.PaymentInitiationServicePISApi(config)
  });

  test("oBPv140GetTransactionRequestTypes", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140GetTransactionRequestTypes(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210CreateTransactionRequestSandboxTan", () => {
    const body: api.SANDBOXTANTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210CreateTransactionRequestSandboxTan(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400AnswerTransactionRequestChallenge", () => {
    const body: api.TRANSACTIONREQUESTIDChallengeBody = undefined
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const TRANSACTION_REQUEST_TYPE: string = "TRANSACTION_REQUEST_TYPE_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400AnswerTransactionRequestChallenge(body, TRANSACTION_REQUEST_ID, TRANSACTION_REQUEST_TYPE, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAccount", () => {
    const body: api.ACCOUNTTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAccountOtp", () => {
    const body: api.ACCOUNTOTPTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAccountOtp(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAgentCashWithDrawal", () => {
    const body: api.AGENTCASHWITHDRAWALTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAgentCashWithDrawal(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestCard", () => {
    const body: api.CARDTransactionrequestsBody = undefined
    return expect(instance.oBPv400CreateTransactionRequestCard(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestCounterparty", () => {
    const body: api.COUNTERPARTYTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestCounterparty(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestFreeForm", () => {
    const body: api.FREEFORMTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestFreeForm(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestRefund", () => {
    const body: api.REFUNDTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestRefund(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestSepa", () => {
    const body: api.SEPATransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestSepa(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestSimple", () => {
    const body: api.SIMPLETransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestSimple(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCounterpartiesForAnyAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetCounterpartiesForAnyAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetExplicitCounterpartiesForAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetExplicitCounterpartiesForAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetExplicitCounterpartyById", () => {
    const COUNTERPARTY_ID: string = "COUNTERPARTY_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetExplicitCounterpartyById(COUNTERPARTY_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionRequest", () => {
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionRequest(TRANSACTION_REQUEST_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetTransactionRequestById", () => {
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    return expect(instance.oBPv510GetTransactionRequestById(TRANSACTION_REQUEST_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetTransactionRequests", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetTransactionRequests(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("PersonApi", () => {
  let instance: api.PersonApi
  beforeEach(function() {
    instance = new api.PersonApi(config)
  });

  test("oBPv140AddCustomerMessage", () => {
    const body: api.AddCustomerMessageJson = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140AddCustomerMessage(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateCustomerMessage", () => {
    const body: api.CUSTOMERIDMessagesBody = undefined
    const CUSTOMER_ID: string = "CUSTOMER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateCustomerMessage(body, CUSTOMER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateCustomer", () => {
    const body: api.BANKIDCustomersBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500CreateCustomer(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateAgent", () => {
    const body: api.BANKIDAgentsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateAgent(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateAgentStatus", () => {
    const body: api.AgentsAGENTIDBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateAgentStatus(body, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("PrivateDataApi", () => {
  let instance: api.PrivateDataApi
  beforeEach(function() {
    instance = new api.PrivateDataApi(config)
  });

  test("oBPv300CorePrivateAccountsAllBanks", () => {
    return expect(instance.oBPv300CorePrivateAccountsAllBanks({})).resolves.toBe(null)
  })
  test("oBPv400GetPrivateAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetPrivateAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
})

describe("ProductApi", () => {
  let instance: api.ProductApi
  beforeEach(function() {
    instance = new api.ProductApi(config)
  });

  test("oBPv310CreateProductCollection", () => {
    const body: api.ProductcollectionsCOLLECTIONCODEBody = undefined
    const COLLECTION_CODE: string = "COLLECTION_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateProductCollection(body, COLLECTION_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteProductAttribute", () => {
    const PRODUCT_ATTRIBUTE_ID: string = "PRODUCT_ATTRIBUTE_ID_example"
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310DeleteProductAttribute(PRODUCT_ATTRIBUTE_ID, PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetProductCollection", () => {
    const COLLECTION_CODE: string = "COLLECTION_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetProductCollection(COLLECTION_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetProductTree", () => {
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetProductTree(PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateOrUpdateProductAttributeDefinition", () => {
    const body: api.AttributedefinitionsProductBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateOrUpdateProductAttributeDefinition(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateProductAttribute", () => {
    const body: api.PRODUCTCODEAttributeBody1 = undefined
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateProductAttribute(body, PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateProductFee", () => {
    const body: api.PRODUCTCODEFeeBody = undefined
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateProductFee(body, PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteProductAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteProductAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteProductCascade", () => {
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteProductCascade(PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteProductFee", () => {
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteProductFee(PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetProduct", () => {
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetProduct(PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetProductAttribute", () => {
    const PRODUCT_ATTRIBUTE_ID: string = "PRODUCT_ATTRIBUTE_ID_example"
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetProductAttribute(PRODUCT_ATTRIBUTE_ID, PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetProductAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetProductAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetProductFee", () => {
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetProductFee(PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetProductFees", () => {
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetProductFees(PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetProducts", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetProducts(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateProductAttribute", () => {
    const body: api.AttributesPRODUCTATTRIBUTEIDBody = undefined
    const PRODUCT_ATTRIBUTE_ID: string = "PRODUCT_ATTRIBUTE_ID_example"
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateProductAttribute(body, PRODUCT_ATTRIBUTE_ID, PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateProductFee", () => {
    const body: api.FeesPRODUCTFEEIDBody = undefined
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateProductFee(body, PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateProduct", () => {
    const body: api.ProductsPRODUCTCODEBody = undefined
    const PRODUCT_CODE: string = "PRODUCT_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500CreateProduct(body, PRODUCT_CODE, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("ProductCollectionApi", () => {
  let instance: api.ProductCollectionApi
  beforeEach(function() {
    instance = new api.ProductCollectionApi(config)
  });

  test("oBPv310CreateProductCollection", () => {
    const body: api.ProductcollectionsCOLLECTIONCODEBody = undefined
    const COLLECTION_CODE: string = "COLLECTION_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateProductCollection(body, COLLECTION_CODE, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetProductCollection", () => {
    const COLLECTION_CODE: string = "COLLECTION_CODE_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetProductCollection(COLLECTION_CODE, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("PublicDataApi", () => {
  let instance: api.PublicDataApi
  beforeEach(function() {
    instance = new api.PublicDataApi(config)
  });

  test("oBPv200PublicAccountsAllBanks", () => {
    return expect(instance.oBPv200PublicAccountsAllBanks({})).resolves.toBe(null)
  })
  test("oBPv200PublicAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200PublicAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetPrivateAccountsAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetPrivateAccountsAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
})

describe("RateLimitsApi", () => {
  let instance: api.RateLimitsApi
  beforeEach(function() {
    instance = new api.RateLimitsApi(config)
  });

  test("oBPv310GetRateLimitingInfo", () => {
    return expect(instance.oBPv310GetRateLimitingInfo({})).resolves.toBe(null)
  })
  test("oBPv400CallsLimit", () => {
    const body: api.ConsumerCalllimitsBody = undefined
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv400CallsLimit(body, CONSUMER_ID, {})).resolves.toBe(null)
  })
})

describe("RoleApi", () => {
  let instance: api.RoleApi
  beforeEach(function() {
    instance = new api.RoleApi(config)
  });

  test("oBPv200AddEntitlement", () => {
    const body: api.CreateEntitlementJSON = undefined
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv200AddEntitlement(body, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200DeleteEntitlement", () => {
    const ENTITLEMENT_ID: string = "ENTITLEMENT_ID_example"
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv200DeleteEntitlement(ENTITLEMENT_ID, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv210GetEntitlementsByBankAndUser", () => {
    const USER_ID: string = "USER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210GetEntitlementsByBankAndUser(USER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210GetRoles", () => {
    return expect(instance.oBPv210GetRoles({})).resolves.toBe(null)
  })
  test("oBPv300AddEntitlementRequest", () => {
    const body: api.V300EntitlementrequestsBody = undefined
    return expect(instance.oBPv300AddEntitlementRequest(body, {})).resolves.toBe(null)
  })
  test("oBPv300DeleteEntitlementRequest", () => {
    const ENTITLEMENT_REQUEST_ID: string = "ENTITLEMENT_REQUEST_ID_example"
    return expect(instance.oBPv300DeleteEntitlementRequest(ENTITLEMENT_REQUEST_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetAllEntitlementRequests", () => {
    return expect(instance.oBPv300GetAllEntitlementRequests({})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementRequests", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv300GetEntitlementRequests(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementRequestsForCurrentUser", () => {
    return expect(instance.oBPv300GetEntitlementRequestsForCurrentUser({})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementsForCurrentUser", () => {
    return expect(instance.oBPv300GetEntitlementsForCurrentUser({})).resolves.toBe(null)
  })
  test("oBPv310GetAllEntitlements", () => {
    return expect(instance.oBPv310GetAllEntitlements({})).resolves.toBe(null)
  })
  test("oBPv400CreateUserWithRoles", () => {
    const body: api.V400UserentitlementsBody = undefined
    return expect(instance.oBPv400CreateUserWithRoles(body, {})).resolves.toBe(null)
  })
  test("oBPv400GetEntitlements", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv400GetEntitlements(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetEntitlementsForBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetEntitlementsForBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetEntitlementsAndPermissions", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510GetEntitlementsAndPermissions(USER_ID, {})).resolves.toBe(null)
  })
})

describe("SandboxApi", () => {
  let instance: api.SandboxApi
  beforeEach(function() {
    instance = new api.SandboxApi(config)
  });

  test("oBPv210SandboxDataImport", () => {
    const body: api.SandboxDataimportBody = undefined
    return expect(instance.oBPv210SandboxDataImport(body, {})).resolves.toBe(null)
  })
})

describe("ScopeApi", () => {
  let instance: api.ScopeApi
  beforeEach(function() {
    instance = new api.ScopeApi(config)
  });

  test("oBPv300DeleteScope", () => {
    const SCOPE_ID: string = "SCOPE_ID_example"
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv300DeleteScope(SCOPE_ID, CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400AddScope", () => {
    const body: api.CONSUMERIDScopesBody = undefined
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv400AddScope(body, CONSUMER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetScopes", () => {
    const CONSUMER_ID: string = "CONSUMER_ID_example"
    return expect(instance.oBPv400GetScopes(CONSUMER_ID, {})).resolves.toBe(null)
  })
})

describe("StandingOrderApi", () => {
  let instance: api.StandingOrderApi
  beforeEach(function() {
    instance = new api.StandingOrderApi(config)
  });

  test("oBPv400CreateStandingOrder", () => {
    const body: api.VIEWIDStandingorderBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateStandingOrder(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateStandingOrderManagement", () => {
    const body: api.ACCOUNTIDStandingorderBody = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateStandingOrderManagement(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("SystemIntegrityApi", () => {
  let instance: api.SystemIntegrityApi
  beforeEach(function() {
    instance = new api.SystemIntegrityApi(config)
  });

  test("oBPv510AccountAccessUniqueIndexCheck", () => {
    return expect(instance.oBPv510AccountAccessUniqueIndexCheck({})).resolves.toBe(null)
  })
  test("oBPv510AccountCurrencyCheck", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510AccountCurrencyCheck(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CustomViewNamesCheck", () => {
    return expect(instance.oBPv510CustomViewNamesCheck({})).resolves.toBe(null)
  })
  test("oBPv510OrphanedAccountCheck", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510OrphanedAccountCheck(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510SystemViewNamesCheck", () => {
    return expect(instance.oBPv510SystemViewNamesCheck({})).resolves.toBe(null)
  })
})

describe("TransactionApi", () => {
  let instance: api.TransactionApi
  beforeEach(function() {
    instance = new api.TransactionApi(config)
  });

  test("oBPv121AddCommentForViewOnTransaction", () => {
    const body: api.PostTransactionCommentJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCommentForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddImageForViewOnTransaction", () => {
    const body: api.PostTransactionImageJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddImageForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddTagForViewOnTransaction", () => {
    const body: api.PostTransactionTagJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddTagForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddTransactionNarrative", () => {
    const body: api.TransactionNarrativeJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddTransactionNarrative(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddWhereTagForViewOnTransaction", () => {
    const body: api.PostTransactionWhereJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddWhereTagForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCommentForViewOnTransaction", () => {
    const COMMENT_ID: string = "COMMENT_ID_example"
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCommentForViewOnTransaction(COMMENT_ID, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteImageForViewOnTransaction", () => {
    const IMAGE_ID: string = "IMAGE_ID_example"
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteImageForViewOnTransaction(IMAGE_ID, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteTagForViewOnTransaction", () => {
    const TAG_ID: string = "TAG_ID_example"
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteTagForViewOnTransaction(TAG_ID, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteTransactionNarrative", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteTransactionNarrative(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteWhereTagForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteWhereTagForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetCommentsForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetCommentsForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetImagesForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetImagesForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetOtherAccountForTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetOtherAccountForTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetTagsForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetTagsForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetTransactionNarrative", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetTransactionNarrative(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetWhereTagForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetWhereTagForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateTransactionNarrative", () => {
    const body: api.TransactionNarrativeJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateTransactionNarrative(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateWhereTagForViewOnTransaction", () => {
    const body: api.PostTransactionWhereJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateWhereTagForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetCoreTransactionsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetCoreTransactionsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetFirehoseTransactionsForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetFirehoseTransactionsForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetTransactionsForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetTransactionsForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetTransactionByIdForBankAccount", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetTransactionByIdForBankAccount(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateOrUpdateTransactionAttributeDefinition", () => {
    const body: api.AttributedefinitionsTransactionBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateOrUpdateTransactionAttributeDefinition(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionAttribute", () => {
    const body: api.TRANSACTIONIDAttributeBody = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionAttribute(body, TRANSACTION_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteTransactionAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteTransactionAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteTransactionCascade", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteTransactionCascade(TRANSACTION_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetBalancingTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    return expect(instance.oBPv400GetBalancingTransaction(TRANSACTION_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetDoubleEntryTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetDoubleEntryTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionAttributeById", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionAttributeById(TRANSACTION_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionAttributes", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionAttributes(TRANSACTION_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateTransactionAttribute", () => {
    const body: api.AttributesACCOUNTATTRIBUTEIDBody1 = undefined
    const ACCOUNT_ATTRIBUTE_ID: string = "ACCOUNT_ATTRIBUTE_ID_example"
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateTransactionAttribute(body, ACCOUNT_ATTRIBUTE_ID, TRANSACTION_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("TransactionFirehoseApi", () => {
  let instance: api.TransactionFirehoseApi
  beforeEach(function() {
    instance = new api.TransactionFirehoseApi(config)
  });

  test("oBPv300GetFirehoseTransactionsForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetFirehoseTransactionsForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("TransactionMetadataApi", () => {
  let instance: api.TransactionMetadataApi
  beforeEach(function() {
    instance = new api.TransactionMetadataApi(config)
  });

  test("oBPv121AddCommentForViewOnTransaction", () => {
    const body: api.PostTransactionCommentJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddCommentForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddImageForViewOnTransaction", () => {
    const body: api.PostTransactionImageJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddImageForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddTagForViewOnTransaction", () => {
    const body: api.PostTransactionTagJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddTagForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddTransactionNarrative", () => {
    const body: api.TransactionNarrativeJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddTransactionNarrative(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121AddWhereTagForViewOnTransaction", () => {
    const body: api.PostTransactionWhereJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121AddWhereTagForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteCommentForViewOnTransaction", () => {
    const COMMENT_ID: string = "COMMENT_ID_example"
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteCommentForViewOnTransaction(COMMENT_ID, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteImageForViewOnTransaction", () => {
    const IMAGE_ID: string = "IMAGE_ID_example"
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteImageForViewOnTransaction(IMAGE_ID, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteTagForViewOnTransaction", () => {
    const TAG_ID: string = "TAG_ID_example"
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteTagForViewOnTransaction(TAG_ID, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteTransactionNarrative", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteTransactionNarrative(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121DeleteWhereTagForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteWhereTagForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetCommentsForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetCommentsForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetImagesForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetImagesForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetTagsForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetTagsForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetTransactionNarrative", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetTransactionNarrative(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121GetWhereTagForViewOnTransaction", () => {
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121GetWhereTagForViewOnTransaction(TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateTransactionNarrative", () => {
    const body: api.TransactionNarrativeJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateTransactionNarrative(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv121UpdateWhereTagForViewOnTransaction", () => {
    const body: api.PostTransactionWhereJSON = undefined
    const TRANSACTION_ID: string = "TRANSACTION_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121UpdateWhereTagForViewOnTransaction(body, TRANSACTION_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("TransactionRequestApi", () => {
  let instance: api.TransactionRequestApi
  beforeEach(function() {
    instance = new api.TransactionRequestApi(config)
  });

  test("oBPv140GetTransactionRequestTypes", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv140GetTransactionRequestTypes(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210CreateTransactionRequestSandboxTan", () => {
    const body: api.SANDBOXTANTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210CreateTransactionRequestSandboxTan(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210GetTransactionRequestTypesSupportedByBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210GetTransactionRequestTypesSupportedByBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310SaveHistoricalTransaction", () => {
    const body: api.HistoricalTransactionsBody = undefined
    return expect(instance.oBPv310SaveHistoricalTransaction(body, {})).resolves.toBe(null)
  })
  test("oBPv400AnswerTransactionRequestChallenge", () => {
    const body: api.TRANSACTIONREQUESTIDChallengeBody = undefined
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const TRANSACTION_REQUEST_TYPE: string = "TRANSACTION_REQUEST_TYPE_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400AnswerTransactionRequestChallenge(body, TRANSACTION_REQUEST_ID, TRANSACTION_REQUEST_TYPE, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateHistoricalTransactionAtBank", () => {
    const body: api.HistoricalTransactionsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateHistoricalTransactionAtBank(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateOrUpdateTransactionRequestAttributeDefinition", () => {
    const body: api.AttributedefinitionsTransactionrequestBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateOrUpdateTransactionRequestAttributeDefinition(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAccount", () => {
    const body: api.ACCOUNTTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAccountOtp", () => {
    const body: api.ACCOUNTOTPTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAccountOtp(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAgentCashWithDrawal", () => {
    const body: api.AGENTCASHWITHDRAWALTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAgentCashWithDrawal(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestAttribute", () => {
    const body: api.TRANSACTIONREQUESTIDAttributeBody = undefined
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestAttribute(body, TRANSACTION_REQUEST_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestCard", () => {
    const body: api.CARDTransactionrequestsBody = undefined
    return expect(instance.oBPv400CreateTransactionRequestCard(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestCounterparty", () => {
    const body: api.COUNTERPARTYTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestCounterparty(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestFreeForm", () => {
    const body: api.FREEFORMTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestFreeForm(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestRefund", () => {
    const body: api.REFUNDTransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestRefund(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestSepa", () => {
    const body: api.SEPATransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestSepa(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateTransactionRequestSimple", () => {
    const body: api.SIMPLETransactionrequestsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateTransactionRequestSimple(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteTransactionRequestAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400DeleteTransactionRequestAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionRequest", () => {
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionRequest(TRANSACTION_REQUEST_ID, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionRequestAttributeById", () => {
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionRequestAttributeById(TRANSACTION_REQUEST_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionRequestAttributeDefinition", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionRequestAttributeDefinition(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetTransactionRequestAttributes", () => {
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetTransactionRequestAttributes(TRANSACTION_REQUEST_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateTransactionRequestAttribute", () => {
    const body: api.AttributesATTRIBUTEIDBody = undefined
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400UpdateTransactionRequestAttribute(body, TRANSACTION_REQUEST_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateVRPConsentRequest", () => {
    const body: api.ConsumerVrpconsentrequestsBody = undefined
    return expect(instance.oBPv510CreateVRPConsentRequest(body, {})).resolves.toBe(null)
  })
  test("oBPv510GetTransactionRequestById", () => {
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    return expect(instance.oBPv510GetTransactionRequestById(TRANSACTION_REQUEST_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetTransactionRequests", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetTransactionRequests(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateTransactionRequestStatus", () => {
    const body: api.TransactionrequestsTRANSACTIONREQUESTIDBody = undefined
    const TRANSACTION_REQUEST_ID: string = "TRANSACTION_REQUEST_ID_example"
    return expect(instance.oBPv510UpdateTransactionRequestStatus(body, TRANSACTION_REQUEST_ID, {})).resolves.toBe(null)
  })
})

describe("UserApi", () => {
  let instance: api.UserApi
  beforeEach(function() {
    instance = new api.UserApi(config)
  });

  test("oBPv200AddEntitlement", () => {
    const body: api.CreateEntitlementJSON = undefined
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv200AddEntitlement(body, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200CreateUser", () => {
    const body: api.CreateUserJson = undefined
    return expect(instance.oBPv200CreateUser(body, {})).resolves.toBe(null)
  })
  test("oBPv200DeleteEntitlement", () => {
    const ENTITLEMENT_ID: string = "ENTITLEMENT_ID_example"
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv200DeleteEntitlement(ENTITLEMENT_ID, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetPermissionsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200GetPermissionsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv210GetEntitlementsByBankAndUser", () => {
    const USER_ID: string = "USER_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv210GetEntitlementsByBankAndUser(USER_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300AddEntitlementRequest", () => {
    const body: api.V300EntitlementrequestsBody = undefined
    return expect(instance.oBPv300AddEntitlementRequest(body, {})).resolves.toBe(null)
  })
  test("oBPv300DeleteEntitlementRequest", () => {
    const ENTITLEMENT_REQUEST_ID: string = "ENTITLEMENT_REQUEST_ID_example"
    return expect(instance.oBPv300DeleteEntitlementRequest(ENTITLEMENT_REQUEST_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetAllEntitlementRequests", () => {
    return expect(instance.oBPv300GetAllEntitlementRequests({})).resolves.toBe(null)
  })
  test("oBPv300GetCurrentUser", () => {
    return expect(instance.oBPv300GetCurrentUser({})).resolves.toBe(null)
  })
  test("oBPv300GetCustomersForUser", () => {
    return expect(instance.oBPv300GetCustomersForUser({})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementRequests", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv300GetEntitlementRequests(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementRequestsForCurrentUser", () => {
    return expect(instance.oBPv300GetEntitlementRequestsForCurrentUser({})).resolves.toBe(null)
  })
  test("oBPv300GetEntitlementsForCurrentUser", () => {
    return expect(instance.oBPv300GetEntitlementsForCurrentUser({})).resolves.toBe(null)
  })
  test("oBPv300GetPermissionForUserForBankAccount", () => {
    const PROVIDER: string = "PROVIDER_example"
    const PROVIDER_ID: string = "PROVIDER_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetPermissionForUserForBankAccount(PROVIDER, PROVIDER_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteUserAuthContextById", () => {
    const USER_AUTH_CONTEXT_ID: string = "USER_AUTH_CONTEXT_ID_example"
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv310DeleteUserAuthContextById(USER_AUTH_CONTEXT_ID, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteUserAuthContexts", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv310DeleteUserAuthContexts(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv310RefreshUser", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv310RefreshUser(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateMyPersonalUserAttribute", () => {
    const body: api.UserAttributesBody = undefined
    return expect(instance.oBPv400CreateMyPersonalUserAttribute(body, {})).resolves.toBe(null)
  })
  test("oBPv400CreateUserCustomerLinks", () => {
    const body: api.BANKIDUserCustomerLinksBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateUserCustomerLinks(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateUserWithRoles", () => {
    const body: api.V400UserentitlementsBody = undefined
    return expect(instance.oBPv400CreateUserWithRoles(body, {})).resolves.toBe(null)
  })
  test("oBPv400DeleteUser", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv400DeleteUser(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetCurrentUserId", () => {
    return expect(instance.oBPv400GetCurrentUserId({})).resolves.toBe(null)
  })
  test("oBPv400GetCustomersAtAnyBank", () => {
    return expect(instance.oBPv400GetCustomersAtAnyBank({})).resolves.toBe(null)
  })
  test("oBPv400GetCustomersMinimalAtAnyBank", () => {
    return expect(instance.oBPv400GetCustomersMinimalAtAnyBank({})).resolves.toBe(null)
  })
  test("oBPv400GetEntitlements", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv400GetEntitlements(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetEntitlementsForBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetEntitlementsForBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetLogoutLink", () => {
    return expect(instance.oBPv400GetLogoutLink({})).resolves.toBe(null)
  })
  test("oBPv400GetMyPersonalUserAttributes", () => {
    return expect(instance.oBPv400GetMyPersonalUserAttributes({})).resolves.toBe(null)
  })
  test("oBPv400GetMySpaces", () => {
    return expect(instance.oBPv400GetMySpaces({})).resolves.toBe(null)
  })
  test("oBPv400GetUserByUserId", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv400GetUserByUserId(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetUserWithAttributes", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv400GetUserWithAttributes(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetUsers", () => {
    return expect(instance.oBPv400GetUsers({})).resolves.toBe(null)
  })
  test("oBPv400GetUsersByEmail", () => {
    return expect(instance.oBPv400GetUsersByEmail({})).resolves.toBe(null)
  })
  test("oBPv400ResetPasswordUrl", () => {
    const body: api.UserResetpasswordurlBody = undefined
    return expect(instance.oBPv400ResetPasswordUrl(body, {})).resolves.toBe(null)
  })
  test("oBPv400UpdateMyPersonalUserAttribute", () => {
    const body: api.AttributesUSERATTRIBUTEIDBody = undefined
    return expect(instance.oBPv400UpdateMyPersonalUserAttribute(body, {})).resolves.toBe(null)
  })
  test("oBPv500AnswerUserAuthContextUpdateChallenge", () => {
    const body: api.AUTHCONTEXTUPDATEIDChallengeBody = undefined
    const AUTH_CONTEXT_UPDATE_ID: string = "AUTH_CONTEXT_UPDATE_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500AnswerUserAuthContextUpdateChallenge(body, AUTH_CONTEXT_UPDATE_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateUserAuthContext", () => {
    const body: api.USERIDAuthcontextBody = undefined
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv500CreateUserAuthContext(body, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv500CreateUserAuthContextUpdateRequest", () => {
    const body: api.AuthcontextupdatesSCAMETHODBody = undefined
    const SCA_METHOD: string = "SCA_METHOD_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500CreateUserAuthContextUpdateRequest(body, SCA_METHOD, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomersAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomersAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetCustomersMinimalAtOneBank", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetCustomersMinimalAtOneBank(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetMyCustomersAtAnyBank", () => {
    return expect(instance.oBPv500GetMyCustomersAtAnyBank({})).resolves.toBe(null)
  })
  test("oBPv500GetUserAuthContexts", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv500GetUserAuthContexts(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateNonPersonalUserAttribute", () => {
    const body: api.NonpersonalAttributesBody = undefined
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510CreateNonPersonalUserAttribute(body, USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateUserWithAccountAccessById", () => {
    const body: api.VIEWIDUseraccountaccessBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateUserWithAccountAccessById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510DeleteNonPersonalUserAttribute", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510DeleteNonPersonalUserAttribute(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCustomersForUserIdsOnly", () => {
    return expect(instance.oBPv510GetCustomersForUserIdsOnly({})).resolves.toBe(null)
  })
  test("oBPv510GetEntitlementsAndPermissions", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510GetEntitlementsAndPermissions(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetNonPersonalUserAttributes", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510GetNonPersonalUserAttributes(USER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetUserByProviderAndUsername", () => {
    const PROVIDER: string = "PROVIDER_example"
    const USERNAME: string = "USERNAME_example"
    return expect(instance.oBPv510GetUserByProviderAndUsername(PROVIDER, USERNAME, {})).resolves.toBe(null)
  })
  test("oBPv510GetUserLockStatus", () => {
    const PROVIDER: string = "PROVIDER_example"
    const USERNAME: string = "USERNAME_example"
    return expect(instance.oBPv510GetUserLockStatus(PROVIDER, USERNAME, {})).resolves.toBe(null)
  })
  test("oBPv510GrantUserAccessToViewById", () => {
    const body: api.AccountaccessGrantBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GrantUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510LockUserByProviderAndUsername", () => {
    const PROVIDER: string = "PROVIDER_example"
    const USERNAME: string = "USERNAME_example"
    return expect(instance.oBPv510LockUserByProviderAndUsername(PROVIDER, USERNAME, {})).resolves.toBe(null)
  })
  test("oBPv510RevokeUserAccessToViewById", () => {
    const body: api.AccountaccessRevokeBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510RevokeUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510SyncExternalUser", () => {
    const PROVIDER: string = "PROVIDER_example"
    const PROVIDER_ID: string = "PROVIDER_ID_example"
    return expect(instance.oBPv510SyncExternalUser(PROVIDER, PROVIDER_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UnlockUserByProviderAndUsername", () => {
    const PROVIDER: string = "PROVIDER_example"
    const USERNAME: string = "USERNAME_example"
    return expect(instance.oBPv510UnlockUserByProviderAndUsername(PROVIDER, USERNAME, {})).resolves.toBe(null)
  })
  test("oBPv510ValidateUserByUserId", () => {
    const USER_ID: string = "USER_ID_example"
    return expect(instance.oBPv510ValidateUserByUserId(USER_ID, {})).resolves.toBe(null)
  })
})

describe("UserInvitationApi", () => {
  let instance: api.UserInvitationApi
  beforeEach(function() {
    instance = new api.UserInvitationApi(config)
  });

  test("oBPv400CreateUserInvitation", () => {
    const body: api.BANKIDUserinvitationBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateUserInvitation(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetUserInvitation", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetUserInvitation(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetUserInvitationAnonymous", () => {
    const body: api.BANKIDUserinvitationsBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetUserInvitationAnonymous(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400GetUserInvitations", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400GetUserInvitations(BANK_ID, {})).resolves.toBe(null)
  })
})

describe("VRPApi", () => {
  let instance: api.VRPApi
  beforeEach(function() {
    instance = new api.VRPApi(config)
  });

  test("oBPv500CreateConsentByConsentRequestIdEmail", () => {
    return expect(instance.oBPv500CreateConsentByConsentRequestIdEmail({})).resolves.toBe(null)
  })
  test("oBPv510CreateVRPConsentRequest", () => {
    const body: api.ConsumerVrpconsentrequestsBody = undefined
    return expect(instance.oBPv510CreateVRPConsentRequest(body, {})).resolves.toBe(null)
  })
})

describe("ViewCustomApi", () => {
  let instance: api.ViewCustomApi
  beforeEach(function() {
    instance = new api.ViewCustomApi(config)
  });

  test("oBPv121DeleteViewForBankAccount", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv121DeleteViewForBankAccount(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv200GetPermissionsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv200GetPermissionsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300CreateViewForBankAccount", () => {
    const body: api.ACCOUNTIDViewsBody = undefined
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300CreateViewForBankAccount(body, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetAccountsHeld", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetAccountsHeld(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300GetPermissionForUserForBankAccount", () => {
    const PROVIDER: string = "PROVIDER_example"
    const PROVIDER_ID: string = "PROVIDER_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300GetPermissionForUserForBankAccount(PROVIDER, PROVIDER_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv300UpdateViewForBankAccount", () => {
    const body: api.ViewsVIEWIDBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv300UpdateViewForBankAccount(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetViewsForBankAccount", () => {
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv500GetViewsForBankAccount(ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateCustomView", () => {
    const body: api.VIEWIDTargetviewsBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateCustomView(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510CreateUserWithAccountAccessById", () => {
    const body: api.VIEWIDUseraccountaccessBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510CreateUserWithAccountAccessById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510DeleteCustomView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510DeleteCustomView(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GetCustomView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GetCustomView(VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510GrantUserAccessToViewById", () => {
    const body: api.AccountaccessGrantBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510GrantUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510RevokeUserAccessToViewById", () => {
    const body: api.AccountaccessRevokeBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510RevokeUserAccessToViewById(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv510UpdateCustomView", () => {
    const body: api.TargetviewsTARGETVIEWIDBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    const ACCOUNT_ID: string = "ACCOUNT_ID_example"
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv510UpdateCustomView(body, VIEW_ID, ACCOUNT_ID, BANK_ID, {})).resolves.toBe(null)
  })
})

describe("ViewSystemApi", () => {
  let instance: api.ViewSystemApi
  beforeEach(function() {
    instance = new api.ViewSystemApi(config)
  });

  test("oBPv500CreateSystemView", () => {
    const body: api.V500SystemviewsBody = undefined
    return expect(instance.oBPv500CreateSystemView(body, {})).resolves.toBe(null)
  })
  test("oBPv500DeleteSystemView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    return expect(instance.oBPv500DeleteSystemView(VIEW_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetSystemView", () => {
    const VIEW_ID: string = "VIEW_ID_example"
    return expect(instance.oBPv500GetSystemView(VIEW_ID, {})).resolves.toBe(null)
  })
  test("oBPv500GetSystemViewsIds", () => {
    return expect(instance.oBPv500GetSystemViewsIds({})).resolves.toBe(null)
  })
  test("oBPv500UpdateSystemView", () => {
    const body: api.SystemviewsVIEWIDBody = undefined
    const VIEW_ID: string = "VIEW_ID_example"
    return expect(instance.oBPv500UpdateSystemView(body, VIEW_ID, {})).resolves.toBe(null)
  })
})

describe("WebUiPropsApi", () => {
  let instance: api.WebUiPropsApi
  beforeEach(function() {
    instance = new api.WebUiPropsApi(config)
  });

  test("oBPv310CreateWebUiProps", () => {
    const body: api.ManagementWebuiPropsBody = undefined
    return expect(instance.oBPv310CreateWebUiProps(body, {})).resolves.toBe(null)
  })
  test("oBPv310DeleteWebUiProps", () => {
    const WEB_UI_PROPS_ID: string = "WEB_UI_PROPS_ID_example"
    return expect(instance.oBPv310DeleteWebUiProps(WEB_UI_PROPS_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetWebUiProps", () => {
    return expect(instance.oBPv310GetWebUiProps({})).resolves.toBe(null)
  })
})

describe("WebhookApi", () => {
  let instance: api.WebhookApi
  beforeEach(function() {
    instance = new api.WebhookApi(config)
  });

  test("oBPv310CreateAccountWebhook", () => {
    const body: api.BANKIDAccountwebhooksBody1 = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310CreateAccountWebhook(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310EnableDisableAccountWebhook", () => {
    const body: api.BANKIDAccountwebhooksBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310EnableDisableAccountWebhook(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv310GetAccountWebhooks", () => {
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv310GetAccountWebhooks(BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateBankAccountNotificationWebhook", () => {
    const body: api.NotificationsOncreatetransactionBody = undefined
    const BANK_ID: string = "BANK_ID_example"
    return expect(instance.oBPv400CreateBankAccountNotificationWebhook(body, BANK_ID, {})).resolves.toBe(null)
  })
  test("oBPv400CreateSystemAccountNotificationWebhook", () => {
    const body: api.NotificationsOncreatetransactionBody1 = undefined
    return expect(instance.oBPv400CreateSystemAccountNotificationWebhook(body, {})).resolves.toBe(null)
  })
})

