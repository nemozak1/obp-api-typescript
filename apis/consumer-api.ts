/* tslint:disable */
/* eslint-disable */
/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { CallLimitJson } from '../models';
import { CallLimitPostJsonV400 } from '../models';
import { ConsumerJsonV210 } from '../models';
import { ConsumerJsonV510 } from '../models';
import { ConsumerJwtPostJsonV510 } from '../models';
import { ConsumerLogoUrlJson } from '../models';
import { ConsumerRedirectUrlJSON } from '../models';
import { ConsumersJsonV310 } from '../models';
import { ConsumersJsonV510 } from '../models';
import { CreateConsumerRequestJsonV510 } from '../models';
import { CreateScopeJson } from '../models';
import { ErrorInvalidJsonFormat } from '../models';
import { ErrorUserNotLoggedIn } from '../models';
import { PutEnabledJSON } from '../models';
import { ScopeJson } from '../models';
import { ScopeJsons } from '../models';
/**
 * ConsumerApi - axios parameter creator
 * @export
 */
export const ConsumerApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <p>Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#scope_id\">SCOPE_ID</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Consumer Scope
         * @param {string} SCOPE_ID the scope id
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv300DeleteScope: async (SCOPE_ID: string, CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'SCOPE_ID' is not null or undefined
            if (SCOPE_ID === null || SCOPE_ID === undefined) {
                throw new RequiredError('SCOPE_ID','Required parameter SCOPE_ID was null or undefined when calling oBPv300DeleteScope.');
            }
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv300DeleteScope.');
            }
            const localVarPath = `/obp/v3.0.0/consumers/{CONSUMER_ID}/scope/{SCOPE_ID}`
                .replace(`{${"SCOPE_ID"}}`, encodeURIComponent(String(SCOPE_ID)))
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Enable/Disable a Consumer specified by CONSUMER_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p>
         * @summary Enable or Disable Consumers
         * @param {PutEnabledJSON} body PutEnabledJSON object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310EnableDisableConsumers: async (body: PutEnabledJSON, CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310EnableDisableConsumers.');
            }
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv310EnableDisableConsumers.');
            }
            const localVarPath = `/obp/v3.1.0/management/consumers/{CONSUMER_ID}`
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get Calls limits per Consumer.<br />User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p><p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p><p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p><p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p><p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p><p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p><p><a href=\"/glossary#calls_made\">calls_made</a>: 50</p><p><a href=\"/glossary#current_state\">current_state</a>:</p><p><a href=\"/glossary#per_day\">per_day</a>: 4000</p><p><a href=\"/glossary#per_hour\">per_hour</a>:</p><p><a href=\"/glossary#per_minute\">per_minute</a>:</p><p><a href=\"/glossary#per_month\">per_month</a>: 500</p><p><a href=\"/glossary#per_second\">per_second</a>: 1000</p><p><a href=\"/glossary#per_week\">per_week</a>: 50000</p><p><a href=\"/glossary#reset_in_seconds\">reset_in_seconds</a>:</p>
         * @summary Get Call Limits for a Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetCallsLimit: async (CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv310GetCallsLimit.');
            }
            const localVarPath = `/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits`
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the Consumers for logged in User.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#108;t&#111;&#x3a;&#x66;&#x65;&#x6c;&#x69;x&#x73;&#109;&#105;&#116;&#x68;&#64;&#101;&#x78;&#97;&#109;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;\">&#x66;&#101;&#108;&#x69;&#x78;&#115;&#109;&#x69;&#x74;h&#x40;&#101;&#120;a&#109;&#112;&#x6c;e&#x2e;c&#x6f;&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Get Consumers (logged in User)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetConsumersForCurrentUser: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v3.1.0/management/users/current/consumers`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create Scope. Grant Role to Consumer.</p><p>Scopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>
         * @summary Create Scope for a Consumer
         * @param {CreateScopeJson} body CreateScopeJson object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400AddScope: async (body: CreateScopeJson, CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400AddScope.');
            }
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv400AddScope.');
            }
            const localVarPath = `/obp/v4.0.0/consumers/{CONSUMER_ID}/scopes`
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Set the API rate limits / call limits for a Consumer:</p><p>Rate limiting can be set:</p><p>Per Second<br />Per Minute<br />Per Hour<br />Per Week<br />Per Month</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#from_date\"><strong>from_date</strong></a>: 1100-01-01T01:01:01.000Z</p><p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p><p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p><p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p><p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p><p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p><p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p><p><a href=\"/glossary#to_date\"><strong>to_date</strong></a>: 1100-01-01T01:01:01.000Z</p><p><a href=\"/glossary#\">api_name</a>: api_name</p><p><a href=\"/glossary#api_version\">api_version</a>:</p><p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>
         * @summary Set Rate Limits / Call Limits per Consumer
         * @param {CallLimitPostJsonV400} body CallLimitPostJsonV400 object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CallsLimit: async (body: CallLimitPostJsonV400, CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CallsLimit.');
            }
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv400CallsLimit.');
            }
            const localVarPath = `/obp/v4.0.0/management/consumers/{CONSUMER_ID}/consumer/call-limits`
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all the scopes for an consumer specified by CONSUMER_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#list\"><strong>list</strong></a>:</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>
         * @summary Get Scopes for Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetScopes: async (CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv400GetScopes.');
            }
            const localVarPath = `/obp/v4.0.0/consumers/{CONSUMER_ID}/scopes`
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create a Consumer (Authenticated access).</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>client_certificate</strong></a>: client_certificate</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;i&#x6c;&#x74;o:&#x66;&#101;&#x6c;&#x69;&#120;&#115;mi&#116;&#104;&#x40;&#x65;&#x78;&#97;&#x6d;p&#x6c;&#x65;&#x2e;c&#111;&#109;\">&#102;&#x65;li&#x78;&#115;&#109;&#105;&#x74;h&#64;&#x65;x&#97;&#x6d;&#112;le&#x2e;&#99;&#111;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Create a Consumer
         * @param {CreateConsumerRequestJsonV510} body CreateConsumerRequestJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510CreateConsumer: async (body: CreateConsumerRequestJsonV510, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv510CreateConsumer.');
            }
            const localVarPath = `/obp/v5.1.0/management/consumers`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create a Consumer (mTLS access).</p><p>JWT payload:<br />- minimal<br />{ &quot;description&quot;:&quot;Description&quot; }<br />- full<br />{<br />&quot;description&quot;: &quot;Description&quot;,<br />&quot;app_name&quot;: &quot;Tesobe GmbH&quot;,<br />&quot;app_type&quot;: &quot;Sofit&quot;,<br />&quot;developer_email&quot;: &quot;<a href=\"&#109;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#x6d;a&#114;&#107;&#111;@&#x74;&#101;&#115;&#x6f;&#x62;&#x65;&#46;&#x63;&#111;&#109;\">&#x6d;a&#x72;&#107;&#111;&#64;&#x74;&#101;&#115;&#111;&#x62;e.&#99;&#x6f;&#109;</a>&quot;,<br />&quot;redirect_url&quot;: &quot;<a href=\"http://localhost:8082\">http://localhost:8082</a>&quot;<br />}<br />Please note that JWT must be signed with the counterpart private key of the public key used to establish mTLS</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#105;l&#116;&#111;&#58;f&#101;l&#105;&#120;&#115;m&#105;&#116;&#x68;&#x40;ex&#x61;&#x6d;&#112;&#x6c;&#x65;&#x2e;c&#111;&#x6d;\">&#x66;&#x65;l&#x69;&#x78;&#x73;&#x6d;i&#x74;&#104;&#x40;&#101;x&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#99;&#111;&#x6d;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Create a Consumer(Dynamic Registration)
         * @param {ConsumerJwtPostJsonV510} body ConsumerJwtPostJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510CreateConsumerDynamicRegistraion: async (body: ConsumerJwtPostJsonV510, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv510CreateConsumerDynamicRegistraion.');
            }
            const localVarPath = `/obp/v5.1.0/dynamic-registration/consumers`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the Consumer specified by CONSUMER_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"mailt&#111;&#x3a;&#102;&#x65;&#x6c;&#x69;&#120;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#x65;&#x78;&#97;m&#x70;&#x6c;&#x65;.&#99;&#x6f;&#x6d;\">f&#101;&#108;&#105;&#120;&#115;&#x6d;&#105;&#116;&#x68;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;o&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Get Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510GetConsumer: async (CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv510GetConsumer.');
            }
            const localVarPath = `/obp/v5.1.0/management/consumers/{CONSUMER_ID}`
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the all Consumers.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2025-03-24T11:36:39.335Z. NOTE! The default value is now (2025-03-24T11:36:39.335Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#58;&#102;&#x65;&#x6c;&#x69;&#x78;sm&#105;t&#x68;&#x40;&#101;&#x78;&#97;&#109;p&#x6c;&#x65;&#x2e;&#99;o&#x6d;\">&#x66;&#x65;l&#105;&#120;&#x73;&#x6d;&#105;th@&#101;&#x78;a&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#x6f;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Get Consumers
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510GetConsumers: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/management/consumers`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update an existing logoURL for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#105;&#x6c;t&#x6f;&#58;&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;it&#x68;&#64;ex&#x61;&#x6d;&#112;&#x6c;&#101;&#46;&#99;o&#x6d;\">&#x66;el&#105;&#120;&#x73;&#x6d;&#x69;&#x74;h&#x40;&#x65;&#x78;&#x61;&#109;p&#108;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Update Consumer LogoURL
         * @param {ConsumerLogoUrlJson} body ConsumerLogoUrlJson object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510UpdateConsumerLogoURL: async (body: ConsumerLogoUrlJson, CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv510UpdateConsumerLogoURL.');
            }
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv510UpdateConsumerLogoURL.');
            }
            const localVarPath = `/obp/v5.1.0/management/consumers/{CONSUMER_ID}/consumer/logo_url`
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#105;&#108;&#116;o:&#x66;&#x65;&#x6c;&#105;&#x78;&#x73;&#x6d;&#105;&#116;&#104;&#x40;&#x65;&#x78;&#x61;m&#112;&#x6c;&#x65;&#46;&#99;&#111;&#109;\">&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#x2e;&#99;&#111;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Update Consumer RedirectURL
         * @param {ConsumerRedirectUrlJSON} body ConsumerRedirectUrlJSON object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510UpdateConsumerRedirectUrl: async (body: ConsumerRedirectUrlJSON, CONSUMER_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv510UpdateConsumerRedirectUrl.');
            }
            // verify required parameter 'CONSUMER_ID' is not null or undefined
            if (CONSUMER_ID === null || CONSUMER_ID === undefined) {
                throw new RequiredError('CONSUMER_ID','Required parameter CONSUMER_ID was null or undefined when calling oBPv510UpdateConsumerRedirectUrl.');
            }
            const localVarPath = `/obp/v5.1.0/management/consumers/{CONSUMER_ID}/consumer/redirect_url`
                .replace(`{${"CONSUMER_ID"}}`, encodeURIComponent(String(CONSUMER_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ConsumerApi - functional programming interface
 * @export
 */
export const ConsumerApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <p>Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#scope_id\">SCOPE_ID</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Consumer Scope
         * @param {string} SCOPE_ID the scope id
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv300DeleteScope(SCOPE_ID: string, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv300DeleteScope(SCOPE_ID, CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Enable/Disable a Consumer specified by CONSUMER_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p>
         * @summary Enable or Disable Consumers
         * @param {PutEnabledJSON} body PutEnabledJSON object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310EnableDisableConsumers(body: PutEnabledJSON, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<PutEnabledJSON>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv310EnableDisableConsumers(body, CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get Calls limits per Consumer.<br />User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p><p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p><p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p><p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p><p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p><p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p><p><a href=\"/glossary#calls_made\">calls_made</a>: 50</p><p><a href=\"/glossary#current_state\">current_state</a>:</p><p><a href=\"/glossary#per_day\">per_day</a>: 4000</p><p><a href=\"/glossary#per_hour\">per_hour</a>:</p><p><a href=\"/glossary#per_minute\">per_minute</a>:</p><p><a href=\"/glossary#per_month\">per_month</a>: 500</p><p><a href=\"/glossary#per_second\">per_second</a>: 1000</p><p><a href=\"/glossary#per_week\">per_week</a>: 50000</p><p><a href=\"/glossary#reset_in_seconds\">reset_in_seconds</a>:</p>
         * @summary Get Call Limits for a Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetCallsLimit(CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<CallLimitJson>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv310GetCallsLimit(CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the Consumers for logged in User.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#108;t&#111;&#x3a;&#x66;&#x65;&#x6c;&#x69;x&#x73;&#109;&#105;&#116;&#x68;&#64;&#101;&#x78;&#97;&#109;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;\">&#x66;&#101;&#108;&#x69;&#x78;&#115;&#109;&#x69;&#x74;h&#x40;&#101;&#120;a&#109;&#112;&#x6c;e&#x2e;c&#x6f;&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Get Consumers (logged in User)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetConsumersForCurrentUser(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConsumersJsonV310>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv310GetConsumersForCurrentUser(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create Scope. Grant Role to Consumer.</p><p>Scopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>
         * @summary Create Scope for a Consumer
         * @param {CreateScopeJson} body CreateScopeJson object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400AddScope(body: CreateScopeJson, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ScopeJson>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv400AddScope(body, CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Set the API rate limits / call limits for a Consumer:</p><p>Rate limiting can be set:</p><p>Per Second<br />Per Minute<br />Per Hour<br />Per Week<br />Per Month</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#from_date\"><strong>from_date</strong></a>: 1100-01-01T01:01:01.000Z</p><p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p><p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p><p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p><p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p><p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p><p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p><p><a href=\"/glossary#to_date\"><strong>to_date</strong></a>: 1100-01-01T01:01:01.000Z</p><p><a href=\"/glossary#\">api_name</a>: api_name</p><p><a href=\"/glossary#api_version\">api_version</a>:</p><p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>
         * @summary Set Rate Limits / Call Limits per Consumer
         * @param {CallLimitPostJsonV400} body CallLimitPostJsonV400 object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CallsLimit(body: CallLimitPostJsonV400, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<CallLimitPostJsonV400>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv400CallsLimit(body, CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all the scopes for an consumer specified by CONSUMER_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#list\"><strong>list</strong></a>:</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>
         * @summary Get Scopes for Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetScopes(CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ScopeJsons>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv400GetScopes(CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create a Consumer (Authenticated access).</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>client_certificate</strong></a>: client_certificate</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;i&#x6c;&#x74;o:&#x66;&#101;&#x6c;&#x69;&#120;&#115;mi&#116;&#104;&#x40;&#x65;&#x78;&#97;&#x6d;p&#x6c;&#x65;&#x2e;c&#111;&#109;\">&#102;&#x65;li&#x78;&#115;&#109;&#105;&#x74;h&#64;&#x65;x&#97;&#x6d;&#112;le&#x2e;&#99;&#111;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Create a Consumer
         * @param {CreateConsumerRequestJsonV510} body CreateConsumerRequestJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510CreateConsumer(body: CreateConsumerRequestJsonV510, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConsumerJsonV510>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv510CreateConsumer(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create a Consumer (mTLS access).</p><p>JWT payload:<br />- minimal<br />{ &quot;description&quot;:&quot;Description&quot; }<br />- full<br />{<br />&quot;description&quot;: &quot;Description&quot;,<br />&quot;app_name&quot;: &quot;Tesobe GmbH&quot;,<br />&quot;app_type&quot;: &quot;Sofit&quot;,<br />&quot;developer_email&quot;: &quot;<a href=\"&#109;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#x6d;a&#114;&#107;&#111;@&#x74;&#101;&#115;&#x6f;&#x62;&#x65;&#46;&#x63;&#111;&#109;\">&#x6d;a&#x72;&#107;&#111;&#64;&#x74;&#101;&#115;&#111;&#x62;e.&#99;&#x6f;&#109;</a>&quot;,<br />&quot;redirect_url&quot;: &quot;<a href=\"http://localhost:8082\">http://localhost:8082</a>&quot;<br />}<br />Please note that JWT must be signed with the counterpart private key of the public key used to establish mTLS</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#105;l&#116;&#111;&#58;f&#101;l&#105;&#120;&#115;m&#105;&#116;&#x68;&#x40;ex&#x61;&#x6d;&#112;&#x6c;&#x65;&#x2e;c&#111;&#x6d;\">&#x66;&#x65;l&#x69;&#x78;&#x73;&#x6d;i&#x74;&#104;&#x40;&#101;x&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#99;&#111;&#x6d;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Create a Consumer(Dynamic Registration)
         * @param {ConsumerJwtPostJsonV510} body ConsumerJwtPostJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510CreateConsumerDynamicRegistraion(body: ConsumerJwtPostJsonV510, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConsumerJsonV510>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv510CreateConsumerDynamicRegistraion(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the Consumer specified by CONSUMER_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"mailt&#111;&#x3a;&#102;&#x65;&#x6c;&#x69;&#120;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#x65;&#x78;&#97;m&#x70;&#x6c;&#x65;.&#99;&#x6f;&#x6d;\">f&#101;&#108;&#105;&#120;&#115;&#x6d;&#105;&#116;&#x68;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;o&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Get Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetConsumer(CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConsumerJsonV210>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv510GetConsumer(CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the all Consumers.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2025-03-24T11:36:39.335Z. NOTE! The default value is now (2025-03-24T11:36:39.335Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#58;&#102;&#x65;&#x6c;&#x69;&#x78;sm&#105;t&#x68;&#x40;&#101;&#x78;&#97;&#109;p&#x6c;&#x65;&#x2e;&#99;o&#x6d;\">&#x66;&#x65;l&#105;&#120;&#x73;&#x6d;&#105;th@&#101;&#x78;a&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#x6f;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Get Consumers
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetConsumers(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConsumersJsonV510>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv510GetConsumers(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update an existing logoURL for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#105;&#x6c;t&#x6f;&#58;&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;it&#x68;&#64;ex&#x61;&#x6d;&#112;&#x6c;&#101;&#46;&#99;o&#x6d;\">&#x66;el&#105;&#120;&#x73;&#x6d;&#x69;&#x74;h&#x40;&#x65;&#x78;&#x61;&#109;p&#108;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Update Consumer LogoURL
         * @param {ConsumerLogoUrlJson} body ConsumerLogoUrlJson object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510UpdateConsumerLogoURL(body: ConsumerLogoUrlJson, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConsumerJsonV510>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv510UpdateConsumerLogoURL(body, CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#105;&#108;&#116;o:&#x66;&#x65;&#x6c;&#105;&#x78;&#x73;&#x6d;&#105;&#116;&#104;&#x40;&#x65;&#x78;&#x61;m&#112;&#x6c;&#x65;&#46;&#99;&#111;&#109;\">&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#x2e;&#99;&#111;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Update Consumer RedirectURL
         * @param {ConsumerRedirectUrlJSON} body ConsumerRedirectUrlJSON object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510UpdateConsumerRedirectUrl(body: ConsumerRedirectUrlJSON, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConsumerJsonV210>>> {
            const localVarAxiosArgs = await ConsumerApiAxiosParamCreator(configuration).oBPv510UpdateConsumerRedirectUrl(body, CONSUMER_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * ConsumerApi - factory interface
 * @export
 */
export const ConsumerApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * <p>Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#scope_id\">SCOPE_ID</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Consumer Scope
         * @param {string} SCOPE_ID the scope id
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv300DeleteScope(SCOPE_ID: string, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return ConsumerApiFp(configuration).oBPv300DeleteScope(SCOPE_ID, CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Enable/Disable a Consumer specified by CONSUMER_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p>
         * @summary Enable or Disable Consumers
         * @param {PutEnabledJSON} body PutEnabledJSON object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310EnableDisableConsumers(body: PutEnabledJSON, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<PutEnabledJSON>> {
            return ConsumerApiFp(configuration).oBPv310EnableDisableConsumers(body, CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get Calls limits per Consumer.<br />User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p><p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p><p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p><p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p><p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p><p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p><p><a href=\"/glossary#calls_made\">calls_made</a>: 50</p><p><a href=\"/glossary#current_state\">current_state</a>:</p><p><a href=\"/glossary#per_day\">per_day</a>: 4000</p><p><a href=\"/glossary#per_hour\">per_hour</a>:</p><p><a href=\"/glossary#per_minute\">per_minute</a>:</p><p><a href=\"/glossary#per_month\">per_month</a>: 500</p><p><a href=\"/glossary#per_second\">per_second</a>: 1000</p><p><a href=\"/glossary#per_week\">per_week</a>: 50000</p><p><a href=\"/glossary#reset_in_seconds\">reset_in_seconds</a>:</p>
         * @summary Get Call Limits for a Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetCallsLimit(CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<CallLimitJson>> {
            return ConsumerApiFp(configuration).oBPv310GetCallsLimit(CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the Consumers for logged in User.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#108;t&#111;&#x3a;&#x66;&#x65;&#x6c;&#x69;x&#x73;&#109;&#105;&#116;&#x68;&#64;&#101;&#x78;&#97;&#109;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;\">&#x66;&#101;&#108;&#x69;&#x78;&#115;&#109;&#x69;&#x74;h&#x40;&#101;&#120;a&#109;&#112;&#x6c;e&#x2e;c&#x6f;&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Get Consumers (logged in User)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetConsumersForCurrentUser(options?: AxiosRequestConfig): Promise<AxiosResponse<ConsumersJsonV310>> {
            return ConsumerApiFp(configuration).oBPv310GetConsumersForCurrentUser(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create Scope. Grant Role to Consumer.</p><p>Scopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>
         * @summary Create Scope for a Consumer
         * @param {CreateScopeJson} body CreateScopeJson object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400AddScope(body: CreateScopeJson, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ScopeJson>> {
            return ConsumerApiFp(configuration).oBPv400AddScope(body, CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Set the API rate limits / call limits for a Consumer:</p><p>Rate limiting can be set:</p><p>Per Second<br />Per Minute<br />Per Hour<br />Per Week<br />Per Month</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#from_date\"><strong>from_date</strong></a>: 1100-01-01T01:01:01.000Z</p><p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p><p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p><p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p><p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p><p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p><p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p><p><a href=\"/glossary#to_date\"><strong>to_date</strong></a>: 1100-01-01T01:01:01.000Z</p><p><a href=\"/glossary#\">api_name</a>: api_name</p><p><a href=\"/glossary#api_version\">api_version</a>:</p><p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>
         * @summary Set Rate Limits / Call Limits per Consumer
         * @param {CallLimitPostJsonV400} body CallLimitPostJsonV400 object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CallsLimit(body: CallLimitPostJsonV400, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<CallLimitPostJsonV400>> {
            return ConsumerApiFp(configuration).oBPv400CallsLimit(body, CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all the scopes for an consumer specified by CONSUMER_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#list\"><strong>list</strong></a>:</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>
         * @summary Get Scopes for Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetScopes(CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ScopeJsons>> {
            return ConsumerApiFp(configuration).oBPv400GetScopes(CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create a Consumer (Authenticated access).</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>client_certificate</strong></a>: client_certificate</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;i&#x6c;&#x74;o:&#x66;&#101;&#x6c;&#x69;&#120;&#115;mi&#116;&#104;&#x40;&#x65;&#x78;&#97;&#x6d;p&#x6c;&#x65;&#x2e;c&#111;&#109;\">&#102;&#x65;li&#x78;&#115;&#109;&#105;&#x74;h&#64;&#x65;x&#97;&#x6d;&#112;le&#x2e;&#99;&#111;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Create a Consumer
         * @param {CreateConsumerRequestJsonV510} body CreateConsumerRequestJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510CreateConsumer(body: CreateConsumerRequestJsonV510, options?: AxiosRequestConfig): Promise<AxiosResponse<ConsumerJsonV510>> {
            return ConsumerApiFp(configuration).oBPv510CreateConsumer(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create a Consumer (mTLS access).</p><p>JWT payload:<br />- minimal<br />{ &quot;description&quot;:&quot;Description&quot; }<br />- full<br />{<br />&quot;description&quot;: &quot;Description&quot;,<br />&quot;app_name&quot;: &quot;Tesobe GmbH&quot;,<br />&quot;app_type&quot;: &quot;Sofit&quot;,<br />&quot;developer_email&quot;: &quot;<a href=\"&#109;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#x6d;a&#114;&#107;&#111;@&#x74;&#101;&#115;&#x6f;&#x62;&#x65;&#46;&#x63;&#111;&#109;\">&#x6d;a&#x72;&#107;&#111;&#64;&#x74;&#101;&#115;&#111;&#x62;e.&#99;&#x6f;&#109;</a>&quot;,<br />&quot;redirect_url&quot;: &quot;<a href=\"http://localhost:8082\">http://localhost:8082</a>&quot;<br />}<br />Please note that JWT must be signed with the counterpart private key of the public key used to establish mTLS</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#105;l&#116;&#111;&#58;f&#101;l&#105;&#120;&#115;m&#105;&#116;&#x68;&#x40;ex&#x61;&#x6d;&#112;&#x6c;&#x65;&#x2e;c&#111;&#x6d;\">&#x66;&#x65;l&#x69;&#x78;&#x73;&#x6d;i&#x74;&#104;&#x40;&#101;x&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#99;&#111;&#x6d;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Create a Consumer(Dynamic Registration)
         * @param {ConsumerJwtPostJsonV510} body ConsumerJwtPostJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510CreateConsumerDynamicRegistraion(body: ConsumerJwtPostJsonV510, options?: AxiosRequestConfig): Promise<AxiosResponse<ConsumerJsonV510>> {
            return ConsumerApiFp(configuration).oBPv510CreateConsumerDynamicRegistraion(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the Consumer specified by CONSUMER_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"mailt&#111;&#x3a;&#102;&#x65;&#x6c;&#x69;&#120;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#x65;&#x78;&#97;m&#x70;&#x6c;&#x65;.&#99;&#x6f;&#x6d;\">f&#101;&#108;&#105;&#120;&#115;&#x6d;&#105;&#116;&#x68;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;o&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Get Consumer
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetConsumer(CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ConsumerJsonV210>> {
            return ConsumerApiFp(configuration).oBPv510GetConsumer(CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the all Consumers.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2025-03-24T11:36:39.335Z. NOTE! The default value is now (2025-03-24T11:36:39.335Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#58;&#102;&#x65;&#x6c;&#x69;&#x78;sm&#105;t&#x68;&#x40;&#101;&#x78;&#97;&#109;p&#x6c;&#x65;&#x2e;&#99;o&#x6d;\">&#x66;&#x65;l&#105;&#120;&#x73;&#x6d;&#105;th@&#101;&#x78;a&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#x6f;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Get Consumers
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetConsumers(options?: AxiosRequestConfig): Promise<AxiosResponse<ConsumersJsonV510>> {
            return ConsumerApiFp(configuration).oBPv510GetConsumers(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update an existing logoURL for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#105;&#x6c;t&#x6f;&#58;&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;it&#x68;&#64;ex&#x61;&#x6d;&#112;&#x6c;&#101;&#46;&#99;o&#x6d;\">&#x66;el&#105;&#120;&#x73;&#x6d;&#x69;&#x74;h&#x40;&#x65;&#x78;&#x61;&#109;p&#108;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
         * @summary Update Consumer LogoURL
         * @param {ConsumerLogoUrlJson} body ConsumerLogoUrlJson object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510UpdateConsumerLogoURL(body: ConsumerLogoUrlJson, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ConsumerJsonV510>> {
            return ConsumerApiFp(configuration).oBPv510UpdateConsumerLogoURL(body, CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#105;&#108;&#116;o:&#x66;&#x65;&#x6c;&#105;&#x78;&#x73;&#x6d;&#105;&#116;&#104;&#x40;&#x65;&#x78;&#x61;m&#112;&#x6c;&#x65;&#46;&#99;&#111;&#109;\">&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#x2e;&#99;&#111;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
         * @summary Update Consumer RedirectURL
         * @param {ConsumerRedirectUrlJSON} body ConsumerRedirectUrlJSON object that needs to be added.
         * @param {string} CONSUMER_ID new consumer id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510UpdateConsumerRedirectUrl(body: ConsumerRedirectUrlJSON, CONSUMER_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ConsumerJsonV210>> {
            return ConsumerApiFp(configuration).oBPv510UpdateConsumerRedirectUrl(body, CONSUMER_ID, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * ConsumerApi - object-oriented interface
 * @export
 * @class ConsumerApi
 * @extends {BaseAPI}
 */
export class ConsumerApi extends BaseAPI {
    /**
     * <p>Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#scope_id\">SCOPE_ID</a>:</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete Consumer Scope
     * @param {string} SCOPE_ID the scope id
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv300DeleteScope(SCOPE_ID: string, CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return ConsumerApiFp(this.configuration).oBPv300DeleteScope(SCOPE_ID, CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Enable/Disable a Consumer specified by CONSUMER_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p>
     * @summary Enable or Disable Consumers
     * @param {PutEnabledJSON} body PutEnabledJSON object that needs to be added.
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv310EnableDisableConsumers(body: PutEnabledJSON, CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<PutEnabledJSON>> {
        return ConsumerApiFp(this.configuration).oBPv310EnableDisableConsumers(body, CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get Calls limits per Consumer.<br />User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p><p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p><p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p><p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p><p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p><p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p><p><a href=\"/glossary#calls_made\">calls_made</a>: 50</p><p><a href=\"/glossary#current_state\">current_state</a>:</p><p><a href=\"/glossary#per_day\">per_day</a>: 4000</p><p><a href=\"/glossary#per_hour\">per_hour</a>:</p><p><a href=\"/glossary#per_minute\">per_minute</a>:</p><p><a href=\"/glossary#per_month\">per_month</a>: 500</p><p><a href=\"/glossary#per_second\">per_second</a>: 1000</p><p><a href=\"/glossary#per_week\">per_week</a>: 50000</p><p><a href=\"/glossary#reset_in_seconds\">reset_in_seconds</a>:</p>
     * @summary Get Call Limits for a Consumer
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv310GetCallsLimit(CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<CallLimitJson>> {
        return ConsumerApiFp(this.configuration).oBPv310GetCallsLimit(CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the Consumers for logged in User.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#108;t&#111;&#x3a;&#x66;&#x65;&#x6c;&#x69;x&#x73;&#109;&#105;&#116;&#x68;&#64;&#101;&#x78;&#97;&#109;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;\">&#x66;&#101;&#108;&#x69;&#x78;&#115;&#109;&#x69;&#x74;h&#x40;&#101;&#120;a&#109;&#112;&#x6c;e&#x2e;c&#x6f;&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
     * @summary Get Consumers (logged in User)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv310GetConsumersForCurrentUser(options?: AxiosRequestConfig) : Promise<AxiosResponse<ConsumersJsonV310>> {
        return ConsumerApiFp(this.configuration).oBPv310GetConsumersForCurrentUser(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create Scope. Grant Role to Consumer.</p><p>Scopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>
     * @summary Create Scope for a Consumer
     * @param {CreateScopeJson} body CreateScopeJson object that needs to be added.
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv400AddScope(body: CreateScopeJson, CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<ScopeJson>> {
        return ConsumerApiFp(this.configuration).oBPv400AddScope(body, CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Set the API rate limits / call limits for a Consumer:</p><p>Rate limiting can be set:</p><p>Per Second<br />Per Minute<br />Per Hour<br />Per Week<br />Per Month</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#from_date\"><strong>from_date</strong></a>: 1100-01-01T01:01:01.000Z</p><p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p><p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p><p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p><p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p><p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p><p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p><p><a href=\"/glossary#to_date\"><strong>to_date</strong></a>: 1100-01-01T01:01:01.000Z</p><p><a href=\"/glossary#\">api_name</a>: api_name</p><p><a href=\"/glossary#api_version\">api_version</a>:</p><p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>
     * @summary Set Rate Limits / Call Limits per Consumer
     * @param {CallLimitPostJsonV400} body CallLimitPostJsonV400 object that needs to be added.
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv400CallsLimit(body: CallLimitPostJsonV400, CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<CallLimitPostJsonV400>> {
        return ConsumerApiFp(this.configuration).oBPv400CallsLimit(body, CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all the scopes for an consumer specified by CONSUMER_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#list\"><strong>list</strong></a>:</p><p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p><p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>
     * @summary Get Scopes for Consumer
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv400GetScopes(CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<ScopeJsons>> {
        return ConsumerApiFp(this.configuration).oBPv400GetScopes(CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create a Consumer (Authenticated access).</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>client_certificate</strong></a>: client_certificate</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;i&#x6c;&#x74;o:&#x66;&#101;&#x6c;&#x69;&#120;&#115;mi&#116;&#104;&#x40;&#x65;&#x78;&#97;&#x6d;p&#x6c;&#x65;&#x2e;c&#111;&#109;\">&#102;&#x65;li&#x78;&#115;&#109;&#105;&#x74;h&#64;&#x65;x&#97;&#x6d;&#112;le&#x2e;&#99;&#111;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
     * @summary Create a Consumer
     * @param {CreateConsumerRequestJsonV510} body CreateConsumerRequestJsonV510 object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv510CreateConsumer(body: CreateConsumerRequestJsonV510, options?: AxiosRequestConfig) : Promise<AxiosResponse<ConsumerJsonV510>> {
        return ConsumerApiFp(this.configuration).oBPv510CreateConsumer(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create a Consumer (mTLS access).</p><p>JWT payload:<br />- minimal<br />{ &quot;description&quot;:&quot;Description&quot; }<br />- full<br />{<br />&quot;description&quot;: &quot;Description&quot;,<br />&quot;app_name&quot;: &quot;Tesobe GmbH&quot;,<br />&quot;app_type&quot;: &quot;Sofit&quot;,<br />&quot;developer_email&quot;: &quot;<a href=\"&#109;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#x6d;a&#114;&#107;&#111;@&#x74;&#101;&#115;&#x6f;&#x62;&#x65;&#46;&#x63;&#111;&#109;\">&#x6d;a&#x72;&#107;&#111;&#64;&#x74;&#101;&#115;&#111;&#x62;e.&#99;&#x6f;&#109;</a>&quot;,<br />&quot;redirect_url&quot;: &quot;<a href=\"http://localhost:8082\">http://localhost:8082</a>&quot;<br />}<br />Please note that JWT must be signed with the counterpart private key of the public key used to establish mTLS</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#105;l&#116;&#111;&#58;f&#101;l&#105;&#120;&#115;m&#105;&#116;&#x68;&#x40;ex&#x61;&#x6d;&#112;&#x6c;&#x65;&#x2e;c&#111;&#x6d;\">&#x66;&#x65;l&#x69;&#x78;&#x73;&#x6d;i&#x74;&#104;&#x40;&#101;x&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#99;&#111;&#x6d;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
     * @summary Create a Consumer(Dynamic Registration)
     * @param {ConsumerJwtPostJsonV510} body ConsumerJwtPostJsonV510 object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv510CreateConsumerDynamicRegistraion(body: ConsumerJwtPostJsonV510, options?: AxiosRequestConfig) : Promise<AxiosResponse<ConsumerJsonV510>> {
        return ConsumerApiFp(this.configuration).oBPv510CreateConsumerDynamicRegistraion(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the Consumer specified by CONSUMER_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"mailt&#111;&#x3a;&#102;&#x65;&#x6c;&#x69;&#120;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#x65;&#x78;&#97;m&#x70;&#x6c;&#x65;.&#99;&#x6f;&#x6d;\">f&#101;&#108;&#105;&#120;&#115;&#x6d;&#105;&#116;&#x68;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;o&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
     * @summary Get Consumer
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv510GetConsumer(CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<ConsumerJsonV210>> {
        return ConsumerApiFp(this.configuration).oBPv510GetConsumer(CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the all Consumers.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2025-03-24T11:36:39.335Z. NOTE! The default value is now (2025-03-24T11:36:39.335Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#58;&#102;&#x65;&#x6c;&#x69;&#x78;sm&#105;t&#x68;&#x40;&#101;&#x78;&#97;&#109;p&#x6c;&#x65;&#x2e;&#99;o&#x6d;\">&#x66;&#x65;l&#105;&#120;&#x73;&#x6d;&#105;th@&#101;&#x78;a&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#x6f;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
     * @summary Get Consumers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv510GetConsumers(options?: AxiosRequestConfig) : Promise<AxiosResponse<ConsumersJsonV510>> {
        return ConsumerApiFp(this.configuration).oBPv510GetConsumers(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update an existing logoURL for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>certificate_pem</strong></a>: certificate_pem</p><p><a href=\"/glossary#company\"><strong>company</strong></a>: Tesobe GmbH</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>consumer_key</strong></a>: bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#105;&#x6c;t&#x6f;&#58;&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;it&#x68;&#64;ex&#x61;&#x6d;&#112;&#x6c;&#101;&#46;&#99;o&#x6d;\">&#x66;el&#105;&#120;&#x73;&#x6d;&#x69;&#x74;h&#x40;&#x65;&#x78;&#x61;&#109;p&#108;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p><p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p><p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#\">certificate_info</a>: certificate_info</p><p><a href=\"/glossary#logo_url\">logo_url</a>: logo_url</p><p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p><p><a href=\"/glossary#\">roles_info</a>: roles_info</p>
     * @summary Update Consumer LogoURL
     * @param {ConsumerLogoUrlJson} body ConsumerLogoUrlJson object that needs to be added.
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv510UpdateConsumerLogoURL(body: ConsumerLogoUrlJson, CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<ConsumerJsonV510>> {
        return ConsumerApiFp(this.configuration).oBPv510UpdateConsumerLogoURL(body, CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>: Web</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#created\"><strong>created</strong></a>:</p><p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p><p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#105;&#108;&#116;o:&#x66;&#x65;&#x6c;&#105;&#x78;&#x73;&#x6d;&#105;&#116;&#104;&#x40;&#x65;&#x78;&#x61;m&#112;&#x6c;&#x65;&#46;&#99;&#111;&#109;\">&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#x2e;&#99;&#111;m</a></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>: <a href=\"https://apisandbox.openbankproject.com\">https://apisandbox.openbankproject.com</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>
     * @summary Update Consumer RedirectURL
     * @param {ConsumerRedirectUrlJSON} body ConsumerRedirectUrlJSON object that needs to be added.
     * @param {string} CONSUMER_ID new consumer id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsumerApi
     */
    public async oBPv510UpdateConsumerRedirectUrl(body: ConsumerRedirectUrlJSON, CONSUMER_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<ConsumerJsonV210>> {
        return ConsumerApiFp(this.configuration).oBPv510UpdateConsumerRedirectUrl(body, CONSUMER_ID, options).then((request) => request(this.axios, this.basePath));
    }
}
