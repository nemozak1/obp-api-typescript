/* tslint:disable */
/* eslint-disable */
/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { APIInfoJson400 } from '../models';
import { AccountsMinimalJson400 } from '../models';
import { AdapterInfoJsonV300 } from '../models';
import { AdapterInfoJsonV500 } from '../models';
import { BANKIDDynamicendpointsBody } from '../models';
import { BankLevelEndpointTagResponseJson400 } from '../models';
import { ConfigurationJSON } from '../models';
import { ConnectorMetricsJson } from '../models';
import { DynamicEndpointHostJson400 } from '../models';
import { DynamicEntityFooBar } from '../models';
import { EmptyElasticSearch } from '../models';
import { EndpointTagJson400 } from '../models';
import { ErrorBankNotFound } from '../models';
import { ErrorInvalidConnector } from '../models';
import { ErrorInvalidDateFormat } from '../models';
import { ErrorUnknownError } from '../models';
import { ErrorUserNotLoggedIn } from '../models';
import { Full } from '../models';
import { InlineResponse200 } from '../models';
import { InlineResponse20011 } from '../models';
import { InlineResponse2002 } from '../models';
import { InlineResponse2005 } from '../models';
import { InlineResponse2011 } from '../models';
import { ManagementDynamicendpointsBody } from '../models';
import { MessageDocsJson } from '../models';
import { MethodRoutingCommons } from '../models';
import { MetricsJson } from '../models';
import { MetricsJsonV510 } from '../models';
import { NotSupportedYet } from '../models';
import { OAuth2ServerJwksUrisJson } from '../models';
import { ObpApiLoopbackJson } from '../models';
import { RateLimitingInfoV310 } from '../models';
import { RegulatedEntitiesJsonV510 } from '../models';
import { RegulatedEntityPostJsonV510 } from '../models';
import { SeverJWK } from '../models';
import { SuggestedSessionTimeoutV510 } from '../models';
import { WaitingForGodotJsonV510 } from '../models';
/**
 * APIApi - axios parameter creator
 * @export
 */
export const APIApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Bank Level Dynamic Resource Docs
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv140GetBankLevelDynamicResourceDocsObp: async (API_VERSION: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'API_VERSION' is not null or undefined
            if (API_VERSION === null || API_VERSION === undefined) {
                throw new RequiredError('API_VERSION','Required parameter API_VERSION was null or undefined when calling oBPv140GetBankLevelDynamicResourceDocsObp.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv140GetBankLevelDynamicResourceDocsObp.');
            }
            const localVarPath = `/obp/v2.1.0/banks/{BANK_ID}/resource-docs/{API_VERSION}/obp`
                .replace(`{${"API_VERSION"}}`, encodeURIComponent(String(API_VERSION)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Resource Docs
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv140GetResourceDocsObpV400: async (API_VERSION: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'API_VERSION' is not null or undefined
            if (API_VERSION === null || API_VERSION === undefined) {
                throw new RequiredError('API_VERSION','Required parameter API_VERSION was null or undefined when calling oBPv140GetResourceDocsObpV400.');
            }
            const localVarPath = `/obp/v2.1.0/resource-docs/{API_VERSION}/obp`
                .replace(`{${"API_VERSION"}}`, encodeURIComponent(String(API_VERSION)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Swagger documentation
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv140GetResourceDocsSwagger: async (API_VERSION: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'API_VERSION' is not null or undefined
            if (API_VERSION === null || API_VERSION === undefined) {
                throw new RequiredError('API_VERSION','Required parameter API_VERSION was null or undefined when calling oBPv140GetResourceDocsSwagger.');
            }
            const localVarPath = `/obp/v2.1.0/resource-docs/{API_VERSION}/swagger`
                .replace(`{${"API_VERSION"}}`, encodeURIComponent(String(API_VERSION)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Search API Metrics via Elasticsearch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv200ElasticSearchMetrics: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v2.1.0/search/metrics`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#connector_name\"><strong>connector_name</strong></a>:</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p>
         * @summary Get Connector Metrics
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv220GetConnectorMetrics: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v2.2.0/management/connector/metrics`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>These message docs provide example messages sent by OBP to the (RabbitMq) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>: rest_vMar2019, stored_procedure_vDec2019 ...</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#adapter_implementation\"><strong>adapter_implementation</strong></a>:</p><p><a href=\"/glossary#dependent_endpoints\"><strong>dependent_endpoints</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#example_inbound_message\"><strong>example_inbound_message</strong></a>: {}</p><p><a href=\"/glossary#example_outbound_message\"><strong>example_outbound_message</strong></a>: {}</p><p><a href=\"/glossary#group\"><strong>group</strong></a>:</p><p><a href=\"/glossary#message_docs\"><strong>message_docs</strong></a>:</p><p><a href=\"/glossary#message_format\"><strong>message_format</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p><p><a href=\"/glossary#suggested_order\"><strong>suggested_order</strong></a>:</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#inboundavroschema\">inboundAvroSchema</a>:</p><p><a href=\"/glossary#inbound_topic\">inbound_topic</a>:</p><p><a href=\"/glossary#outboundavroschema\">outboundAvroSchema</a>:</p><p><a href=\"/glossary#outbound_topic\">outbound_topic</a>:</p><p><a href=\"/glossary#requiredfieldinfo\">requiredFieldInfo</a>: false</p>
         * @summary Get Message Docs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv220GetMessageDocs: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v2.2.0/message-docs/CONNECTOR`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get basic information about the Adapter listening on behalf of this bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>
         * @summary Get Adapter Info for a bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv300GetAdapterInfoForBank: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv300GetAdapterInfoForBank.');
            }
            const localVarPath = `/obp/v3.0.0/banks/{BANK_ID}/adapter`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#akka\"><strong>akka</strong></a>:</p><p><a href=\"/glossary#cache\"><strong>cache</strong></a>:</p><p><a href=\"/glossary#elastic_search\"><strong>elastic_search</strong></a>:</p><p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p><p><a href=\"/glossary#log_level\"><strong>log_level</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#ports\"><strong>ports</strong></a>:</p><p><a href=\"/glossary#property\"><strong>property</strong></a>:</p><p><a href=\"/glossary#require_scopes_for_all_roles\"><strong>require_scopes_for_all_roles</strong></a>:</p><p><a href=\"/glossary#require_scopes_for_listed_roles\"><strong>require_scopes_for_listed_roles</strong></a>: false</p><p><a href=\"/glossary#scopes\"><strong>scopes</strong></a>:</p><p><a href=\"/glossary#ttl_in_seconds\"><strong>ttl_in_seconds</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><a href=\"/glossary#warehouse\"><strong>warehouse</strong></a>:</p><p><a href=\"/glossary#\">remote_data_secret_matched</a>: remote_data_secret_matched</p>
         * @summary Get API Configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310Config: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v3.1.0/config`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create a MethodRouting.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Explanation of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some parameters for this method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li><li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li><li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Create MethodRouting
         * @param {MethodRoutingCommons} body MethodRoutingCommons object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310CreateMethodRouting: async (body: MethodRoutingCommons, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310CreateMethodRouting.');
            }
            const localVarPath = `/obp/v3.1.0/management/method_routings`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete MethodRouting
         * @param {string} METHOD_ROUTING_ID the method routing id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310DeleteMethodRouting: async (METHOD_ROUTING_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'METHOD_ROUTING_ID' is not null or undefined
            if (METHOD_ROUTING_ID === null || METHOD_ROUTING_ID === undefined) {
                throw new RequiredError('METHOD_ROUTING_ID','Required parameter METHOD_ROUTING_ID was null or undefined when calling oBPv310DeleteMethodRouting.');
            }
            const localVarPath = `/obp/v3.1.0/management/method_routings/{METHOD_ROUTING_ID}`
                .replace(`{${"METHOD_ROUTING_ID"}}`, encodeURIComponent(String(METHOD_ROUTING_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>This endpoint provides example message docs in swagger format.<br />It is only relavent for REST Connectors.</p><p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Message Docs Swagger
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetMessageDocsSwagger: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v3.1.0/message-docs/CONNECTOR/swagger2.0`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name: filter with method_name</li><li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li></ul><p>eg:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\">https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Get MethodRoutings
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetMethodRoutings: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v3.1.0/management/method_routings`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#jwks_uri\"><strong>jwks_uri</strong></a>:</p><p><a href=\"/glossary#jwks_uris\"><strong>jwks_uris</strong></a>:</p>
         * @summary Get JSON Web Key (JWK) URIs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetOAuth2ServerJWKsURIs: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v3.1.0/jwks-uris`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>This endpoint makes a call to the Connector to check the backend transport is reachable. (WIP)</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#connector_version\"><strong>connector_version</strong></a>:</p><p><a href=\"/glossary#duration_time\"><strong>duration_time</strong></a>: 60</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>
         * @summary Get Connector Status (Loopback)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetObpConnectorLoopback: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v3.1.0/connector/loopback`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Note: Rate limiting can be set at the Consumer level and also for anonymous calls.</p><p>See the consumer rate limits / call limits endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#service_available\"><strong>service_available</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>
         * @summary Get Rate Limiting Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetRateLimitingInfo: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v3.1.0/rate-limiting`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#e\"><strong>e</strong></a>:</p><p><a href=\"/glossary#kid\"><strong>kid</strong></a>:</p><p><a href=\"/glossary#kty\"><strong>kty</strong></a>:</p><p><a href=\"/glossary#n\"><strong>n</strong></a>:</p><p><a href=\"/glossary#use\"><strong>use</strong></a>:</p>
         * @summary Get JSON Web Key (JWK)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetServerJWK: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v3.1.0/certs`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update a MethodRouting.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Explaination of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />note:</li><li><p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p></li></ul><p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Update MethodRouting
         * @param {MethodRoutingCommons} body MethodRoutingCommons object that needs to be added.
         * @param {string} METHOD_ROUTING_ID the method routing id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310UpdateMethodRouting: async (body: MethodRoutingCommons, METHOD_ROUTING_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310UpdateMethodRouting.');
            }
            // verify required parameter 'METHOD_ROUTING_ID' is not null or undefined
            if (METHOD_ROUTING_ID === null || METHOD_ROUTING_ID === undefined) {
                throw new RequiredError('METHOD_ROUTING_ID','Required parameter METHOD_ROUTING_ID was null or undefined when calling oBPv310UpdateMethodRouting.');
            }
            const localVarPath = `/obp/v3.1.0/management/method_routings/{METHOD_ROUTING_ID}`
                .replace(`{${"METHOD_ROUTING_ID"}}`, encodeURIComponent(String(METHOD_ROUTING_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Create Bank Level Dynamic Endpoint
         * @param {BANKIDDynamicendpointsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateBankLevelDynamicEndpoint: async (body: BANKIDDynamicendpointsBody, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateBankLevelDynamicEndpoint.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400CreateBankLevelDynamicEndpoint.');
            }
            const localVarPath = `/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;branchId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;atmId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;productCode=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;cardId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;transactionId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;counterpartyId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateBankLevelDynamicEntity: async (body: DynamicEntityFooBar, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateBankLevelDynamicEntity.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400CreateBankLevelDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-entities`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create Bank Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Create Bank Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateBankLevelEndpointTag: async (body: EndpointTagJson400, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateBankLevelEndpointTag.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400CreateBankLevelEndpointTag.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Create Dynamic Endpoint
         * @param {ManagementDynamicendpointsBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateDynamicEndpoint: async (body: ManagementDynamicendpointsBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateDynamicEndpoint.');
            }
            const localVarPath = `/obp/v5.1.0/management/dynamic-endpoints`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create a system level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;branchId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;atmId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;productCode=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;cardId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;transactionId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;counterpartyId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateSystemDynamicEntity: async (body: DynamicEntityFooBar, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateSystemDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/system-dynamic-entities`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create System Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Create System Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateSystemLevelEndpointTag: async (body: EndpointTagJson400, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateSystemLevelEndpointTag.');
            }
            const localVarPath = `/obp/v4.0.0/management/endpoints/OPERATION_ID/tags`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Delete Bank Level Dynamic Endpoint
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteBankLevelDynamicEndpoint: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400DeleteBankLevelDynamicEndpoint.');
            }
            const localVarPath = `/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete Bank Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteBankLevelDynamicEntity: async (DYNAMIC_ENTITY_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400DeleteBankLevelDynamicEntity.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400DeleteBankLevelDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete Bank Level Endpoint Tag.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Bank Level Endpoint Tag
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteBankLevelEndpointTag: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400DeleteBankLevelEndpointTag.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Delete Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteDynamicEndpoint: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteMyDynamicEndpoint: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/my/dynamic-endpoints/DYNAMIC_ENDPOINT_ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteMyDynamicEntity: async (DYNAMIC_ENTITY_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400DeleteMyDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete System Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteSystemDynamicEntity: async (DYNAMIC_ENTITY_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400DeleteSystemDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete System Level Endpoint Tag.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete System Level Endpoint Tag
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteSystemLevelEndpointTag: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get a Bank Level Dynamic Endpoint.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Get Bank Level Dynamic Endpoint
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetBankLevelDynamicEndpoint: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400GetBankLevelDynamicEndpoint.');
            }
            const localVarPath = `/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get Bank Level Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Endpoints
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetBankLevelDynamicEndpoints: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400GetBankLevelDynamicEndpoints.');
            }
            const localVarPath = `/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all the bank level Dynamic Entities for one bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Entities
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetBankLevelDynamicEntities: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400GetBankLevelDynamicEntities.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-entities`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get Bank Level Endpoint Tags.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Get Bank Level Endpoint Tags
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetBankLevelEndpointTags: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400GetBankLevelEndpointTags.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the Call Context of the current call.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get the Call Context of a current call
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetCallContext: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/development/call_context`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get a Dynamic Endpoint.</p><p>Get one DynamicEndpoint,</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetDynamicEndpoint: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Get Dynamic Endpoints
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetDynamicEndpoints: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/management/dynamic-endpoints`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get basic information about the Mapper Database.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>
         * @summary Get Mapper Database Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetMapperDatabaseInfo: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/database/info`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get My Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Endpoints
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetMyDynamicEndpoints: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/my/dynamic-endpoints`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all my Dynamic Entities.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetMyDynamicEntities: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/my/dynamic-entities`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all the scanned API Versions.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get scanned API Versions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetScannedApiVersions: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/api/versions`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all System Dynamic Entities</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get System Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetSystemDynamicEntities: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/management/system-dynamic-entities`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get System Level Endpoint Tags.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Get System Level Endpoint Tags
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetSystemLevelEndpointTags: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/management/endpoints/OPERATION_ID/tags`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update Bank Level  dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Update Bank Level Dynamic Endpoint Host
         * @param {DynamicEndpointHostJson400} body DynamicEndpointHostJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateBankLevelDynamicEndpointHost: async (body: DynamicEndpointHostJson400, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateBankLevelDynamicEndpointHost.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400UpdateBankLevelDynamicEndpointHost.');
            }
            const localVarPath = `/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;branchId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;atmId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;productCode=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;cardId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;transactionId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;counterpartyId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p></code></pre>
         * @summary Update Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateBankLevelDynamicEntity: async (body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateBankLevelDynamicEntity.');
            }
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400UpdateBankLevelDynamicEntity.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400UpdateBankLevelDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Update Bank Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateBankLevelEndpointTag: async (body: EndpointTagJson400, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateBankLevelEndpointTag.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400UpdateBankLevelEndpointTag.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Update Dynamic Endpoint Host
         * @param {DynamicEndpointHostJson400} body DynamicEndpointHostJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateDynamicEndpointHost: async (body: DynamicEndpointHostJson400, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateDynamicEndpointHost.');
            }
            const localVarPath = `/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update my DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;branchId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;atmId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;productCode=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;cardId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;transactionId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;counterpartyId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p></code></pre>
         * @summary Update My Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateMyDynamicEntity: async (body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateMyDynamicEntity.');
            }
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400UpdateMyDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update a System Level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;branchId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;atmId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;productCode=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;cardId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;transactionId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;counterpartyId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p></code></pre>
         * @summary Update System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateSystemDynamicEntity: async (body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateSystemDynamicEntity.');
            }
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400UpdateSystemDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Update System Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateSystemLevelEndpointTag: async (body: EndpointTagJson400, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateSystemLevelEndpointTag.');
            }
            const localVarPath = `/obp/v4.0.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Verify Request and Sign Response of a current call.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Verify Request and Sign Response of a current call
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400VerifyRequestSignResponse: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/development/echo/jws-verified-request-jws-signed-response`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get basic information about the Adapter.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>backend_messages</strong></a>: backend_messages</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#errorCode\"><strong>errorCode</strong></a>: errorCode</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#text\"><strong>text</strong></a>:</p><p><a href=\"/glossary#\"><strong>total_duration</strong></a>: total_duration</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#duration\">duration</a>: 5.123</p>
         * @summary Get Adapter Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv500GetAdapterInfo: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.0.0/adapter`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the all metrics at the Bank specified by BANK_ID</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#x61;&#105;&#x6c;to:&#48;&#x31;&#x2e;&#48;&#48;&#x30;&#90;&#x26;&#108;&#x69;&#109;&#x69;&#116;&#x3d;&#x31;&#x30;&#48;&#x30;&#x30;&#38;&#111;&#x66;&#102;&#x73;&#x65;&#116;&#x3d;0&amp;&#x61;&#110;&#111;&#x6e;&#x3d;&#x66;&#x61;l&#115;&#101;&#x26;&#x61;pp&#95;&#x6e;&#x61;&#109;&#101;&#61;&#84;&#x65;&#97;&#x74;&#x41;&#x70;&#x70;&#38;&#105;&#x6d;&#112;&#108;&#x65;m&#101;&#x6e;&#116;&#x65;&#100;&#95;i&#110;_v&#101;r&#115;&#105;&#111;&#110;&#61;&#118;2&#x2e;&#49;.&#48;&#x26;&#118;&#101;&#x72;&#98;&#x3d;&#80;O&#x53;T&amp;&#x75;&#x73;&#x65;r_&#105;&#100;&#61;&#99;&#55;&#x62;6c&#98;&#x34;&#x37;&#45;&#x63;&#98;9&#54;&#x2d;4&#x34;&#52;&#x31;&#45;&#x38;&#56;&#x30;1-&#x33;&#x35;&#98;57&#x34;5&#54;&#x37;5&#x33;a&#x26;u&#115;&#x65;r&#x5f;&#x6e;&#x61;m&#101;&#61;&#115;&#x75;&#x73;a&#110;&#46;&#117;&#x6b;&#x2e;&#x32;&#x39;&#64;e&#x78;&#x61;&#x6d;&#112;&#x6c;&#x65;&#x2e;&#99;o&#109;\">&#48;&#49;&#46;00&#x30;&#x5a;&#x26;&#108;&#x69;m&#105;&#116;&#x3d;&#49;&#48;&#48;&#x30;&#48;&amp;&#111;&#x66;&#102;s&#x65;&#x74;&#x3d;&#48;&amp;&#x61;&#x6e;&#111;&#x6e;&#x3d;&#102;&#x61;&#x6c;&#115;e&#38;&#x61;p&#112;_&#110;&#x61;m&#x65;&#x3d;T&#101;&#97;t&#65;&#x70;&#x70;&#38;i&#109;&#x70;&#x6c;&#101;&#x6d;&#x65;&#110;&#x74;e&#100;&#x5f;&#x69;&#110;&#x5f;&#118;&#101;&#114;&#115;io&#x6e;&#61;&#118;&#x32;&#x2e;&#x31;.&#x30;&amp;&#x76;&#101;&#114;&#x62;&#x3d;P&#79;&#x53;&#x54;&#x26;&#117;&#115;&#x65;&#114;&#95;i&#x64;&#x3d;&#x63;7&#98;&#x36;&#x63;&#x62;&#x34;&#55;&#x2d;&#x63;&#98;&#57;&#x36;&#45;&#52;&#52;&#x34;&#x31;-&#x38;8&#48;&#49;&#x2d;&#51;&#x35;&#x62;&#x35;&#x37;4&#53;6&#55;&#x35;&#51;&#97;&#x26;&#117;&#x73;e&#114;_&#110;&#97;&#x6d;&#101;&#61;&#x73;&#117;&#x73;&#x61;&#x6e;&#x2e;u&#107;.2&#57;&#x40;&#101;&#120;&#x61;m&#x70;&#x6c;&#101;&#x2e;c&#x6f;m</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p><p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p><p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>
         * @summary Get Metrics at Bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv500GetMetricsAtBank: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv500GetMetricsAtBank.');
            }
            const localVarPath = `/obp/v5.0.0/management/metrics/banks/{BANK_ID}`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create Regulated Entity</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Create Regulated Entity
         * @param {RegulatedEntityPostJsonV510} body RegulatedEntityPostJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510CreateRegulatedEntity: async (body: RegulatedEntityPostJsonV510, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv510CreateRegulatedEntity.');
            }
            const localVarPath = `/obp/v5.1.0/regulated-entities`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete Regulated Entity specified by REGULATED_ENTITY_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">REGULATED_ENTITY_ID</a>: REGULATED_ENTITY_ID</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Regulated Entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510DeleteRegulatedEntity: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/regulated-entities/REGULATED_ENTITY_ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get API TagsGet API Tags</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>
         * @summary Get API Tags
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510GetApiTags: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/tags`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get API metrics rows. These are records of each REST API call.</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>You can filter by the following fields by applying url parameters</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date e.g.:from_date=1100-01-01T01:01:01.000Z Defaults to the Unix Epoch i.e. Thu Jan 01 00:00:00 UTC 1970</p><p>2 to_date e.g.:to_date=1100-01-01T01:01:01.000Z Defaults to a far future date i.e. Sat Jan 01 00:00:00 UTC 4000</p><p>Note: it is recommended you send a valid from_date (e.g. 5 seconds ago) and to_date (now + 1 second) if you want to get the latest records<br />Otherwise you may receive stale cached results.</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#97;&#105;&#108;&#x74;&#x6f;:&#x30;&#x31;&#x2e;&#48;&#x30;&#48;&#x5a;&#38;&#x6c;i&#x6d;&#x69;&#116;&#61;1&#48;0&#48;&#48;&#x26;&#x6f;&#102;&#102;&#x73;&#101;&#x74;&#61;&#x30;&#x26;&#97;&#110;on&#61;&#x66;a&#108;&#115;&#101;&#x26;&#x61;&#112;&#112;&#x5f;&#110;a&#x6d;e&#61;&#84;&#101;&#97;&#116;&#x41;pp&#x26;&#105;&#109;&#112;&#x6c;&#101;me&#110;t&#101;d&#95;&#105;&#110;&#95;&#118;&#101;&#x72;s&#x69;&#x6f;n&#x3d;&#118;&#x32;&#46;1&#46;&#x30;&#x26;v&#x65;&#114;&#98;&#61;&#x50;&#79;&#83;&#x54;&#38;&#117;&#115;&#x65;&#x72;&#95;&#105;&#100;&#61;&#99;7&#x62;&#54;&#x63;&#x62;&#x34;&#55;&#x2d;&#99;b&#57;&#x36;&#45;&#x34;&#52;4&#x31;-&#x38;&#x38;&#48;1&#45;&#51;&#x35;&#98;&#x35;7&#52;&#53;&#x36;&#x37;&#53;&#51;&#97;&amp;&#x75;&#x73;&#101;&#114;&#95;&#x6e;&#97;&#x6d;&#x65;&#61;&#x73;&#x75;&#115;&#x61;n&#46;&#117;&#107;&#x2e;&#x32;&#57;&#64;&#x65;&#x78;&#97;&#109;&#x70;l&#x65;&#46;&#x63;&#x6f;&#x6d;\">0&#49;&#x2e;0&#48;0&#x5a;&#38;&#108;&#105;&#109;&#105;t&#x3d;&#49;0&#x30;&#48;&#x30;&#x26;o&#102;&#102;se&#x74;=&#48;&#38;&#x61;&#110;&#x6f;&#x6e;&#61;&#102;&#97;&#108;&#115;&#101;&#38;&#x61;&#112;p&#x5f;&#x6e;&#x61;&#x6d;e=&#x54;&#x65;&#97;t&#65;&#112;&#112;&#38;&#x69;m&#112;&#x6c;&#101;&#x6d;e&#110;&#x74;&#101;&#100;&#x5f;&#105;&#110;&#x5f;v&#x65;r&#115;&#x69;&#x6f;&#x6e;&#61;v&#x32;.&#x31;&#46;&#48;&#38;&#x76;&#x65;&#114;&#98;&#x3d;&#x50;O&#83;&#x54;&#38;&#117;s&#x65;&#x72;&#x5f;&#105;&#x64;&#61;&#99;&#55;&#x62;6&#x63;&#x62;&#x34;&#55;-&#x63;&#98;&#x39;&#54;-&#x34;&#52;4&#49;&#x2d;&#56;&#x38;0&#x31;-&#x33;&#x35;&#x62;&#53;&#x37;&#52;56&#55;&#53;&#x33;&#97;&#38;&#117;&#115;&#101;&#x72;&#x5f;&#110;a&#x6d;&#101;&#x3d;&#x73;&#x75;&#x73;&#97;&#x6e;.&#x75;&#x6b;&#46;&#50;9&#64;&#x65;&#x78;&#x61;&#109;p&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p><p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#\"><strong>response_body</strong></a>: response_body</p><p><a href=\"/glossary#\"><strong>source_ip</strong></a>: source_ip</p><p><a href=\"/glossary#\"><strong>target_ip</strong></a>: target_ip</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p><p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>
         * @summary Get Metrics
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510GetMetrics: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/management/metrics`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get Regulated Entity By REGULATED_ENTITY_ID</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">REGULATED_ENTITY_ID</a>: REGULATED_ENTITY_ID</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Get Regulated Entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510GetRegulatedEntityById: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/regulated-entities/REGULATED_ENTITY_ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Returns information about:</p><ul><li>Regulated Entities</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Get Regulated Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510RegulatedEntities: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/regulated-entities`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Hosted at information</li><li>Energy source information</li><li>Git Commit</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Connector\"><strong>connector</strong></a>: connector</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;i&#x6c;&#116;&#x6f;&#58;&#102;e&#108;&#105;&#120;&#x73;&#x6d;&#x69;&#x74;&#104;@&#x65;&#x78;&#97;&#109;&#112;&#x6c;e&#46;&#x63;&#x6f;&#x6d;\">&#102;&#101;&#x6c;&#x69;x&#115;&#x6d;&#x69;&#x74;&#x68;&#x40;&#x65;&#120;&#x61;m&#112;&#x6c;&#x65;.&#x63;&#x6f;&#109;</a></p><p><a href=\"/glossary#energy_source\"><strong>energy_source</strong></a>:</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#hosted_at\"><strong>hosted_at</strong></a>:</p><p><a href=\"/glossary#hosted_by\"><strong>hosted_by</strong></a>:</p><p><a href=\"/glossary#\"><strong>hostname</strong></a>: hostname</p><p><a href=\"/glossary#\"><strong>local_identity_provider</strong></a>: local_identity_provider</p><p><a href=\"/glossary#organisation\"><strong>organisation</strong></a>:</p><p><a href=\"/glossary#organisation_website\"><strong>organisation_website</strong></a>:</p><p><a href=\"/glossary#phone\"><strong>phone</strong></a>:</p><p><a href=\"/glossary#\"><strong>resource_docs_requires_role</strong></a>: resource_docs_requires_role</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#version_status\"><strong>version_status</strong></a>:</p>
         * @summary Get API Info (root)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510Root: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/root`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Returns information about:</p><ul><li>Suggested session timeout in case of a user inactivity</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>timeout_in_seconds</strong></a>: timeout_in_seconds</p>
         * @summary Get Suggested Session Timeout
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510SuggestedSessionTimeout: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/ui/suggested-session-timeout`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Waiting For Godot</p><p>Uses query parameter &quot;sleep&quot; in milliseconds.<br />For instance: .../waiting-for-godot?sleep=50 means postpone response in 50 milliseconds.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>sleep_in_milliseconds</strong></a>: sleep_in_milliseconds</p>
         * @summary Waiting For Godot
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv510WaitingForGodot: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/waiting-for-godot`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * APIApi - functional programming interface
 * @export
 */
export const APIApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Bank Level Dynamic Resource Docs
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv140GetBankLevelDynamicResourceDocsObp(API_VERSION: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv140GetBankLevelDynamicResourceDocsObp(API_VERSION, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Resource Docs
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv140GetResourceDocsObpV400(API_VERSION: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv140GetResourceDocsObpV400(API_VERSION, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Swagger documentation
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv140GetResourceDocsSwagger(API_VERSION: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv140GetResourceDocsSwagger(API_VERSION, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Search API Metrics via Elasticsearch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv200ElasticSearchMetrics(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<EmptyElasticSearch>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv200ElasticSearchMetrics(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#connector_name\"><strong>connector_name</strong></a>:</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p>
         * @summary Get Connector Metrics
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv220GetConnectorMetrics(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConnectorMetricsJson>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv220GetConnectorMetrics(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>These message docs provide example messages sent by OBP to the (RabbitMq) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>: rest_vMar2019, stored_procedure_vDec2019 ...</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#adapter_implementation\"><strong>adapter_implementation</strong></a>:</p><p><a href=\"/glossary#dependent_endpoints\"><strong>dependent_endpoints</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#example_inbound_message\"><strong>example_inbound_message</strong></a>: {}</p><p><a href=\"/glossary#example_outbound_message\"><strong>example_outbound_message</strong></a>: {}</p><p><a href=\"/glossary#group\"><strong>group</strong></a>:</p><p><a href=\"/glossary#message_docs\"><strong>message_docs</strong></a>:</p><p><a href=\"/glossary#message_format\"><strong>message_format</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p><p><a href=\"/glossary#suggested_order\"><strong>suggested_order</strong></a>:</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#inboundavroschema\">inboundAvroSchema</a>:</p><p><a href=\"/glossary#inbound_topic\">inbound_topic</a>:</p><p><a href=\"/glossary#outboundavroschema\">outboundAvroSchema</a>:</p><p><a href=\"/glossary#outbound_topic\">outbound_topic</a>:</p><p><a href=\"/glossary#requiredfieldinfo\">requiredFieldInfo</a>: false</p>
         * @summary Get Message Docs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv220GetMessageDocs(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<MessageDocsJson>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv220GetMessageDocs(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get basic information about the Adapter listening on behalf of this bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>
         * @summary Get Adapter Info for a bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv300GetAdapterInfoForBank(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<AdapterInfoJsonV300>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv300GetAdapterInfoForBank(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#akka\"><strong>akka</strong></a>:</p><p><a href=\"/glossary#cache\"><strong>cache</strong></a>:</p><p><a href=\"/glossary#elastic_search\"><strong>elastic_search</strong></a>:</p><p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p><p><a href=\"/glossary#log_level\"><strong>log_level</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#ports\"><strong>ports</strong></a>:</p><p><a href=\"/glossary#property\"><strong>property</strong></a>:</p><p><a href=\"/glossary#require_scopes_for_all_roles\"><strong>require_scopes_for_all_roles</strong></a>:</p><p><a href=\"/glossary#require_scopes_for_listed_roles\"><strong>require_scopes_for_listed_roles</strong></a>: false</p><p><a href=\"/glossary#scopes\"><strong>scopes</strong></a>:</p><p><a href=\"/glossary#ttl_in_seconds\"><strong>ttl_in_seconds</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><a href=\"/glossary#warehouse\"><strong>warehouse</strong></a>:</p><p><a href=\"/glossary#\">remote_data_secret_matched</a>: remote_data_secret_matched</p>
         * @summary Get API Configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310Config(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ConfigurationJSON>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310Config(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create a MethodRouting.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Explanation of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some parameters for this method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li><li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li><li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Create MethodRouting
         * @param {MethodRoutingCommons} body MethodRoutingCommons object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310CreateMethodRouting(body: MethodRoutingCommons, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<MethodRoutingCommons>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310CreateMethodRouting(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete MethodRouting
         * @param {string} METHOD_ROUTING_ID the method routing id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310DeleteMethodRouting(METHOD_ROUTING_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310DeleteMethodRouting(METHOD_ROUTING_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>This endpoint provides example message docs in swagger format.<br />It is only relavent for REST Connectors.</p><p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Message Docs Swagger
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetMessageDocsSwagger(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310GetMessageDocsSwagger(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name: filter with method_name</li><li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li></ul><p>eg:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\">https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Get MethodRoutings
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetMethodRoutings(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse200>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310GetMethodRoutings(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#jwks_uri\"><strong>jwks_uri</strong></a>:</p><p><a href=\"/glossary#jwks_uris\"><strong>jwks_uris</strong></a>:</p>
         * @summary Get JSON Web Key (JWK) URIs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetOAuth2ServerJWKsURIs(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<OAuth2ServerJwksUrisJson>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310GetOAuth2ServerJWKsURIs(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>This endpoint makes a call to the Connector to check the backend transport is reachable. (WIP)</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#connector_version\"><strong>connector_version</strong></a>:</p><p><a href=\"/glossary#duration_time\"><strong>duration_time</strong></a>: 60</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>
         * @summary Get Connector Status (Loopback)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetObpConnectorLoopback(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ObpApiLoopbackJson>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310GetObpConnectorLoopback(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Note: Rate limiting can be set at the Consumer level and also for anonymous calls.</p><p>See the consumer rate limits / call limits endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#service_available\"><strong>service_available</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>
         * @summary Get Rate Limiting Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetRateLimitingInfo(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<RateLimitingInfoV310>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310GetRateLimitingInfo(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#e\"><strong>e</strong></a>:</p><p><a href=\"/glossary#kid\"><strong>kid</strong></a>:</p><p><a href=\"/glossary#kty\"><strong>kty</strong></a>:</p><p><a href=\"/glossary#n\"><strong>n</strong></a>:</p><p><a href=\"/glossary#use\"><strong>use</strong></a>:</p>
         * @summary Get JSON Web Key (JWK)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetServerJWK(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SeverJWK>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310GetServerJWK(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update a MethodRouting.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Explaination of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />note:</li><li><p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p></li></ul><p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Update MethodRouting
         * @param {MethodRoutingCommons} body MethodRoutingCommons object that needs to be added.
         * @param {string} METHOD_ROUTING_ID the method routing id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310UpdateMethodRouting(body: MethodRoutingCommons, METHOD_ROUTING_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<MethodRoutingCommons>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv310UpdateMethodRouting(body, METHOD_ROUTING_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Create Bank Level Dynamic Endpoint
         * @param {BANKIDDynamicendpointsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelDynamicEndpoint(body: BANKIDDynamicendpointsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2011>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400CreateBankLevelDynamicEndpoint(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;branchId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;atmId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;productCode=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;cardId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;transactionId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;counterpartyId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelDynamicEntity(body: DynamicEntityFooBar, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400CreateBankLevelDynamicEntity(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create Bank Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Create Bank Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelEndpointTag(body: EndpointTagJson400, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400CreateBankLevelEndpointTag(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Create Dynamic Endpoint
         * @param {ManagementDynamicendpointsBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateDynamicEndpoint(body: ManagementDynamicendpointsBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2011>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400CreateDynamicEndpoint(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create a system level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;branchId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;atmId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;productCode=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;cardId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;transactionId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;counterpartyId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateSystemDynamicEntity(body: DynamicEntityFooBar, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400CreateSystemDynamicEntity(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create System Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Create System Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateSystemLevelEndpointTag(body: EndpointTagJson400, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400CreateSystemLevelEndpointTag(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Delete Bank Level Dynamic Endpoint
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelDynamicEndpoint(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400DeleteBankLevelDynamicEndpoint(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete Bank Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete Bank Level Endpoint Tag.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Bank Level Endpoint Tag
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelEndpointTag(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Full>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400DeleteBankLevelEndpointTag(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Delete Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteDynamicEndpoint(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400DeleteDynamicEndpoint(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteMyDynamicEndpoint(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400DeleteMyDynamicEndpoint(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete System Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete System Level Endpoint Tag.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete System Level Endpoint Tag
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteSystemLevelEndpointTag(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Full>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400DeleteSystemLevelEndpointTag(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get a Bank Level Dynamic Endpoint.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Get Bank Level Dynamic Endpoint
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicEndpoint(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2011>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetBankLevelDynamicEndpoint(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get Bank Level Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Endpoints
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicEndpoints(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20011>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetBankLevelDynamicEndpoints(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all the bank level Dynamic Entities for one bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Entities
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicEntities(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2005>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetBankLevelDynamicEntities(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get Bank Level Endpoint Tags.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Get Bank Level Endpoint Tags
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelEndpointTags(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<NotSupportedYet>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetBankLevelEndpointTags(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the Call Context of the current call.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get the Call Context of a current call
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetCallContext(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetCallContext(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get a Dynamic Endpoint.</p><p>Get one DynamicEndpoint,</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetDynamicEndpoint(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2011>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetDynamicEndpoint(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Get Dynamic Endpoints
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetDynamicEndpoints(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20011>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetDynamicEndpoints(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get basic information about the Mapper Database.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>
         * @summary Get Mapper Database Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetMapperDatabaseInfo(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<AdapterInfoJsonV300>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetMapperDatabaseInfo(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get My Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Endpoints
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetMyDynamicEndpoints(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20011>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetMyDynamicEndpoints(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all my Dynamic Entities.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetMyDynamicEntities(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2005>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetMyDynamicEntities(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all the scanned API Versions.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get scanned API Versions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetScannedApiVersions(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2002>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetScannedApiVersions(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all System Dynamic Entities</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get System Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetSystemDynamicEntities(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2005>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetSystemDynamicEntities(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get System Level Endpoint Tags.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Get System Level Endpoint Tags
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetSystemLevelEndpointTags(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<NotSupportedYet>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400GetSystemLevelEndpointTags(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update Bank Level  dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Update Bank Level Dynamic Endpoint Host
         * @param {DynamicEndpointHostJson400} body DynamicEndpointHostJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelDynamicEndpointHost(body: DynamicEndpointHostJson400, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEndpointHostJson400>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400UpdateBankLevelDynamicEndpointHost(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;branchId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;atmId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;productCode=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;cardId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;transactionId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;counterpartyId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p></code></pre>
         * @summary Update Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400UpdateBankLevelDynamicEntity(body, DYNAMIC_ENTITY_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Update Bank Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelEndpointTag(body: EndpointTagJson400, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400UpdateBankLevelEndpointTag(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Update Dynamic Endpoint Host
         * @param {DynamicEndpointHostJson400} body DynamicEndpointHostJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateDynamicEndpointHost(body: DynamicEndpointHostJson400, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEndpointHostJson400>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400UpdateDynamicEndpointHost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update my DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;branchId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;atmId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;productCode=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;cardId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;transactionId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;counterpartyId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p></code></pre>
         * @summary Update My Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateMyDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400UpdateMyDynamicEntity(body, DYNAMIC_ENTITY_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update a System Level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;branchId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;atmId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;productCode=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;cardId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;transactionId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;counterpartyId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p></code></pre>
         * @summary Update System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateSystemDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400UpdateSystemDynamicEntity(body, DYNAMIC_ENTITY_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Update System Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateSystemLevelEndpointTag(body: EndpointTagJson400, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400UpdateSystemLevelEndpointTag(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Verify Request and Sign Response of a current call.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Verify Request and Sign Response of a current call
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400VerifyRequestSignResponse(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv400VerifyRequestSignResponse(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get basic information about the Adapter.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>backend_messages</strong></a>: backend_messages</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#errorCode\"><strong>errorCode</strong></a>: errorCode</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#text\"><strong>text</strong></a>:</p><p><a href=\"/glossary#\"><strong>total_duration</strong></a>: total_duration</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#duration\">duration</a>: 5.123</p>
         * @summary Get Adapter Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv500GetAdapterInfo(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<AdapterInfoJsonV500>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv500GetAdapterInfo(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the all metrics at the Bank specified by BANK_ID</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#x61;&#105;&#x6c;to:&#48;&#x31;&#x2e;&#48;&#48;&#x30;&#90;&#x26;&#108;&#x69;&#109;&#x69;&#116;&#x3d;&#x31;&#x30;&#48;&#x30;&#x30;&#38;&#111;&#x66;&#102;&#x73;&#x65;&#116;&#x3d;0&amp;&#x61;&#110;&#111;&#x6e;&#x3d;&#x66;&#x61;l&#115;&#101;&#x26;&#x61;pp&#95;&#x6e;&#x61;&#109;&#101;&#61;&#84;&#x65;&#97;&#x74;&#x41;&#x70;&#x70;&#38;&#105;&#x6d;&#112;&#108;&#x65;m&#101;&#x6e;&#116;&#x65;&#100;&#95;i&#110;_v&#101;r&#115;&#105;&#111;&#110;&#61;&#118;2&#x2e;&#49;.&#48;&#x26;&#118;&#101;&#x72;&#98;&#x3d;&#80;O&#x53;T&amp;&#x75;&#x73;&#x65;r_&#105;&#100;&#61;&#99;&#55;&#x62;6c&#98;&#x34;&#x37;&#45;&#x63;&#98;9&#54;&#x2d;4&#x34;&#52;&#x31;&#45;&#x38;&#56;&#x30;1-&#x33;&#x35;&#98;57&#x34;5&#54;&#x37;5&#x33;a&#x26;u&#115;&#x65;r&#x5f;&#x6e;&#x61;m&#101;&#61;&#115;&#x75;&#x73;a&#110;&#46;&#117;&#x6b;&#x2e;&#x32;&#x39;&#64;e&#x78;&#x61;&#x6d;&#112;&#x6c;&#x65;&#x2e;&#99;o&#109;\">&#48;&#49;&#46;00&#x30;&#x5a;&#x26;&#108;&#x69;m&#105;&#116;&#x3d;&#49;&#48;&#48;&#x30;&#48;&amp;&#111;&#x66;&#102;s&#x65;&#x74;&#x3d;&#48;&amp;&#x61;&#x6e;&#111;&#x6e;&#x3d;&#102;&#x61;&#x6c;&#115;e&#38;&#x61;p&#112;_&#110;&#x61;m&#x65;&#x3d;T&#101;&#97;t&#65;&#x70;&#x70;&#38;i&#109;&#x70;&#x6c;&#101;&#x6d;&#x65;&#110;&#x74;e&#100;&#x5f;&#x69;&#110;&#x5f;&#118;&#101;&#114;&#115;io&#x6e;&#61;&#118;&#x32;&#x2e;&#x31;.&#x30;&amp;&#x76;&#101;&#114;&#x62;&#x3d;P&#79;&#x53;&#x54;&#x26;&#117;&#115;&#x65;&#114;&#95;i&#x64;&#x3d;&#x63;7&#98;&#x36;&#x63;&#x62;&#x34;&#55;&#x2d;&#x63;&#98;&#57;&#x36;&#45;&#52;&#52;&#x34;&#x31;-&#x38;8&#48;&#49;&#x2d;&#51;&#x35;&#x62;&#x35;&#x37;4&#53;6&#55;&#x35;&#51;&#97;&#x26;&#117;&#x73;e&#114;_&#110;&#97;&#x6d;&#101;&#61;&#x73;&#117;&#x73;&#x61;&#x6e;&#x2e;u&#107;.2&#57;&#x40;&#101;&#120;&#x61;m&#x70;&#x6c;&#101;&#x2e;c&#x6f;m</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p><p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p><p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>
         * @summary Get Metrics at Bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv500GetMetricsAtBank(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<MetricsJson>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv500GetMetricsAtBank(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create Regulated Entity</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Create Regulated Entity
         * @param {RegulatedEntityPostJsonV510} body RegulatedEntityPostJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510CreateRegulatedEntity(body: RegulatedEntityPostJsonV510, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<RegulatedEntitiesJsonV510>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510CreateRegulatedEntity(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete Regulated Entity specified by REGULATED_ENTITY_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">REGULATED_ENTITY_ID</a>: REGULATED_ENTITY_ID</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Regulated Entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510DeleteRegulatedEntity(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510DeleteRegulatedEntity(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get API TagsGet API Tags</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>
         * @summary Get API Tags
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetApiTags(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<AccountsMinimalJson400>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510GetApiTags(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get API metrics rows. These are records of each REST API call.</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>You can filter by the following fields by applying url parameters</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date e.g.:from_date=1100-01-01T01:01:01.000Z Defaults to the Unix Epoch i.e. Thu Jan 01 00:00:00 UTC 1970</p><p>2 to_date e.g.:to_date=1100-01-01T01:01:01.000Z Defaults to a far future date i.e. Sat Jan 01 00:00:00 UTC 4000</p><p>Note: it is recommended you send a valid from_date (e.g. 5 seconds ago) and to_date (now + 1 second) if you want to get the latest records<br />Otherwise you may receive stale cached results.</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#97;&#105;&#108;&#x74;&#x6f;:&#x30;&#x31;&#x2e;&#48;&#x30;&#48;&#x5a;&#38;&#x6c;i&#x6d;&#x69;&#116;&#61;1&#48;0&#48;&#48;&#x26;&#x6f;&#102;&#102;&#x73;&#101;&#x74;&#61;&#x30;&#x26;&#97;&#110;on&#61;&#x66;a&#108;&#115;&#101;&#x26;&#x61;&#112;&#112;&#x5f;&#110;a&#x6d;e&#61;&#84;&#101;&#97;&#116;&#x41;pp&#x26;&#105;&#109;&#112;&#x6c;&#101;me&#110;t&#101;d&#95;&#105;&#110;&#95;&#118;&#101;&#x72;s&#x69;&#x6f;n&#x3d;&#118;&#x32;&#46;1&#46;&#x30;&#x26;v&#x65;&#114;&#98;&#61;&#x50;&#79;&#83;&#x54;&#38;&#117;&#115;&#x65;&#x72;&#95;&#105;&#100;&#61;&#99;7&#x62;&#54;&#x63;&#x62;&#x34;&#55;&#x2d;&#99;b&#57;&#x36;&#45;&#x34;&#52;4&#x31;-&#x38;&#x38;&#48;1&#45;&#51;&#x35;&#98;&#x35;7&#52;&#53;&#x36;&#x37;&#53;&#51;&#97;&amp;&#x75;&#x73;&#101;&#114;&#95;&#x6e;&#97;&#x6d;&#x65;&#61;&#x73;&#x75;&#115;&#x61;n&#46;&#117;&#107;&#x2e;&#x32;&#57;&#64;&#x65;&#x78;&#97;&#109;&#x70;l&#x65;&#46;&#x63;&#x6f;&#x6d;\">0&#49;&#x2e;0&#48;0&#x5a;&#38;&#108;&#105;&#109;&#105;t&#x3d;&#49;0&#x30;&#48;&#x30;&#x26;o&#102;&#102;se&#x74;=&#48;&#38;&#x61;&#110;&#x6f;&#x6e;&#61;&#102;&#97;&#108;&#115;&#101;&#38;&#x61;&#112;p&#x5f;&#x6e;&#x61;&#x6d;e=&#x54;&#x65;&#97;t&#65;&#112;&#112;&#38;&#x69;m&#112;&#x6c;&#101;&#x6d;e&#110;&#x74;&#101;&#100;&#x5f;&#105;&#110;&#x5f;v&#x65;r&#115;&#x69;&#x6f;&#x6e;&#61;v&#x32;.&#x31;&#46;&#48;&#38;&#x76;&#x65;&#114;&#98;&#x3d;&#x50;O&#83;&#x54;&#38;&#117;s&#x65;&#x72;&#x5f;&#105;&#x64;&#61;&#99;&#55;&#x62;6&#x63;&#x62;&#x34;&#55;-&#x63;&#98;&#x39;&#54;-&#x34;&#52;4&#49;&#x2d;&#56;&#x38;0&#x31;-&#x33;&#x35;&#x62;&#53;&#x37;&#52;56&#55;&#53;&#x33;&#97;&#38;&#117;&#115;&#101;&#x72;&#x5f;&#110;a&#x6d;&#101;&#x3d;&#x73;&#x75;&#x73;&#97;&#x6e;.&#x75;&#x6b;&#46;&#50;9&#64;&#x65;&#x78;&#x61;&#109;p&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p><p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#\"><strong>response_body</strong></a>: response_body</p><p><a href=\"/glossary#\"><strong>source_ip</strong></a>: source_ip</p><p><a href=\"/glossary#\"><strong>target_ip</strong></a>: target_ip</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p><p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>
         * @summary Get Metrics
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetMetrics(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<MetricsJsonV510>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510GetMetrics(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get Regulated Entity By REGULATED_ENTITY_ID</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">REGULATED_ENTITY_ID</a>: REGULATED_ENTITY_ID</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Get Regulated Entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetRegulatedEntityById(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<RegulatedEntitiesJsonV510>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510GetRegulatedEntityById(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Returns information about:</p><ul><li>Regulated Entities</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Get Regulated Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510RegulatedEntities(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<RegulatedEntitiesJsonV510>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510RegulatedEntities(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Hosted at information</li><li>Energy source information</li><li>Git Commit</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Connector\"><strong>connector</strong></a>: connector</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;i&#x6c;&#116;&#x6f;&#58;&#102;e&#108;&#105;&#120;&#x73;&#x6d;&#x69;&#x74;&#104;@&#x65;&#x78;&#97;&#109;&#112;&#x6c;e&#46;&#x63;&#x6f;&#x6d;\">&#102;&#101;&#x6c;&#x69;x&#115;&#x6d;&#x69;&#x74;&#x68;&#x40;&#x65;&#120;&#x61;m&#112;&#x6c;&#x65;.&#x63;&#x6f;&#109;</a></p><p><a href=\"/glossary#energy_source\"><strong>energy_source</strong></a>:</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#hosted_at\"><strong>hosted_at</strong></a>:</p><p><a href=\"/glossary#hosted_by\"><strong>hosted_by</strong></a>:</p><p><a href=\"/glossary#\"><strong>hostname</strong></a>: hostname</p><p><a href=\"/glossary#\"><strong>local_identity_provider</strong></a>: local_identity_provider</p><p><a href=\"/glossary#organisation\"><strong>organisation</strong></a>:</p><p><a href=\"/glossary#organisation_website\"><strong>organisation_website</strong></a>:</p><p><a href=\"/glossary#phone\"><strong>phone</strong></a>:</p><p><a href=\"/glossary#\"><strong>resource_docs_requires_role</strong></a>: resource_docs_requires_role</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#version_status\"><strong>version_status</strong></a>:</p>
         * @summary Get API Info (root)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510Root(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<APIInfoJson400>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510Root(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Returns information about:</p><ul><li>Suggested session timeout in case of a user inactivity</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>timeout_in_seconds</strong></a>: timeout_in_seconds</p>
         * @summary Get Suggested Session Timeout
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510SuggestedSessionTimeout(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuggestedSessionTimeoutV510>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510SuggestedSessionTimeout(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Waiting For Godot</p><p>Uses query parameter &quot;sleep&quot; in milliseconds.<br />For instance: .../waiting-for-godot?sleep=50 means postpone response in 50 milliseconds.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>sleep_in_milliseconds</strong></a>: sleep_in_milliseconds</p>
         * @summary Waiting For Godot
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510WaitingForGodot(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<WaitingForGodotJsonV510>>> {
            const localVarAxiosArgs = await APIApiAxiosParamCreator(configuration).oBPv510WaitingForGodot(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * APIApi - factory interface
 * @export
 */
export const APIApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Bank Level Dynamic Resource Docs
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv140GetBankLevelDynamicResourceDocsObp(API_VERSION: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv140GetBankLevelDynamicResourceDocsObp(API_VERSION, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Resource Docs
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv140GetResourceDocsObpV400(API_VERSION: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv140GetResourceDocsObpV400(API_VERSION, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Swagger documentation
         * @param {string} API_VERSION eg:v2.2.0, v3.0.0
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv140GetResourceDocsSwagger(API_VERSION: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv140GetResourceDocsSwagger(API_VERSION, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Search API Metrics via Elasticsearch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv200ElasticSearchMetrics(options?: AxiosRequestConfig): Promise<AxiosResponse<EmptyElasticSearch>> {
            return APIApiFp(configuration).oBPv200ElasticSearchMetrics(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#connector_name\"><strong>connector_name</strong></a>:</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p>
         * @summary Get Connector Metrics
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv220GetConnectorMetrics(options?: AxiosRequestConfig): Promise<AxiosResponse<ConnectorMetricsJson>> {
            return APIApiFp(configuration).oBPv220GetConnectorMetrics(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>These message docs provide example messages sent by OBP to the (RabbitMq) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>: rest_vMar2019, stored_procedure_vDec2019 ...</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#adapter_implementation\"><strong>adapter_implementation</strong></a>:</p><p><a href=\"/glossary#dependent_endpoints\"><strong>dependent_endpoints</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#example_inbound_message\"><strong>example_inbound_message</strong></a>: {}</p><p><a href=\"/glossary#example_outbound_message\"><strong>example_outbound_message</strong></a>: {}</p><p><a href=\"/glossary#group\"><strong>group</strong></a>:</p><p><a href=\"/glossary#message_docs\"><strong>message_docs</strong></a>:</p><p><a href=\"/glossary#message_format\"><strong>message_format</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p><p><a href=\"/glossary#suggested_order\"><strong>suggested_order</strong></a>:</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#inboundavroschema\">inboundAvroSchema</a>:</p><p><a href=\"/glossary#inbound_topic\">inbound_topic</a>:</p><p><a href=\"/glossary#outboundavroschema\">outboundAvroSchema</a>:</p><p><a href=\"/glossary#outbound_topic\">outbound_topic</a>:</p><p><a href=\"/glossary#requiredfieldinfo\">requiredFieldInfo</a>: false</p>
         * @summary Get Message Docs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv220GetMessageDocs(options?: AxiosRequestConfig): Promise<AxiosResponse<MessageDocsJson>> {
            return APIApiFp(configuration).oBPv220GetMessageDocs(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get basic information about the Adapter listening on behalf of this bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>
         * @summary Get Adapter Info for a bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv300GetAdapterInfoForBank(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<AdapterInfoJsonV300>> {
            return APIApiFp(configuration).oBPv300GetAdapterInfoForBank(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#akka\"><strong>akka</strong></a>:</p><p><a href=\"/glossary#cache\"><strong>cache</strong></a>:</p><p><a href=\"/glossary#elastic_search\"><strong>elastic_search</strong></a>:</p><p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p><p><a href=\"/glossary#log_level\"><strong>log_level</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#ports\"><strong>ports</strong></a>:</p><p><a href=\"/glossary#property\"><strong>property</strong></a>:</p><p><a href=\"/glossary#require_scopes_for_all_roles\"><strong>require_scopes_for_all_roles</strong></a>:</p><p><a href=\"/glossary#require_scopes_for_listed_roles\"><strong>require_scopes_for_listed_roles</strong></a>: false</p><p><a href=\"/glossary#scopes\"><strong>scopes</strong></a>:</p><p><a href=\"/glossary#ttl_in_seconds\"><strong>ttl_in_seconds</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><a href=\"/glossary#warehouse\"><strong>warehouse</strong></a>:</p><p><a href=\"/glossary#\">remote_data_secret_matched</a>: remote_data_secret_matched</p>
         * @summary Get API Configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310Config(options?: AxiosRequestConfig): Promise<AxiosResponse<ConfigurationJSON>> {
            return APIApiFp(configuration).oBPv310Config(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create a MethodRouting.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Explanation of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some parameters for this method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li><li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li><li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Create MethodRouting
         * @param {MethodRoutingCommons} body MethodRoutingCommons object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310CreateMethodRouting(body: MethodRoutingCommons, options?: AxiosRequestConfig): Promise<AxiosResponse<MethodRoutingCommons>> {
            return APIApiFp(configuration).oBPv310CreateMethodRouting(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete MethodRouting
         * @param {string} METHOD_ROUTING_ID the method routing id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310DeleteMethodRouting(METHOD_ROUTING_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv310DeleteMethodRouting(METHOD_ROUTING_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>This endpoint provides example message docs in swagger format.<br />It is only relavent for REST Connectors.</p><p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get Message Docs Swagger
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetMessageDocsSwagger(options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv310GetMessageDocsSwagger(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name: filter with method_name</li><li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li></ul><p>eg:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\">https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Get MethodRoutings
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetMethodRoutings(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse200>> {
            return APIApiFp(configuration).oBPv310GetMethodRoutings(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#jwks_uri\"><strong>jwks_uri</strong></a>:</p><p><a href=\"/glossary#jwks_uris\"><strong>jwks_uris</strong></a>:</p>
         * @summary Get JSON Web Key (JWK) URIs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetOAuth2ServerJWKsURIs(options?: AxiosRequestConfig): Promise<AxiosResponse<OAuth2ServerJwksUrisJson>> {
            return APIApiFp(configuration).oBPv310GetOAuth2ServerJWKsURIs(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>This endpoint makes a call to the Connector to check the backend transport is reachable. (WIP)</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#connector_version\"><strong>connector_version</strong></a>:</p><p><a href=\"/glossary#duration_time\"><strong>duration_time</strong></a>: 60</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>
         * @summary Get Connector Status (Loopback)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetObpConnectorLoopback(options?: AxiosRequestConfig): Promise<AxiosResponse<ObpApiLoopbackJson>> {
            return APIApiFp(configuration).oBPv310GetObpConnectorLoopback(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Note: Rate limiting can be set at the Consumer level and also for anonymous calls.</p><p>See the consumer rate limits / call limits endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#service_available\"><strong>service_available</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>
         * @summary Get Rate Limiting Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetRateLimitingInfo(options?: AxiosRequestConfig): Promise<AxiosResponse<RateLimitingInfoV310>> {
            return APIApiFp(configuration).oBPv310GetRateLimitingInfo(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#e\"><strong>e</strong></a>:</p><p><a href=\"/glossary#kid\"><strong>kid</strong></a>:</p><p><a href=\"/glossary#kty\"><strong>kty</strong></a>:</p><p><a href=\"/glossary#n\"><strong>n</strong></a>:</p><p><a href=\"/glossary#use\"><strong>use</strong></a>:</p>
         * @summary Get JSON Web Key (JWK)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetServerJWK(options?: AxiosRequestConfig): Promise<AxiosResponse<SeverJWK>> {
            return APIApiFp(configuration).oBPv310GetServerJWK(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update a MethodRouting.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Explaination of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />note:</li><li><p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p></li></ul><p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Update MethodRouting
         * @param {MethodRoutingCommons} body MethodRoutingCommons object that needs to be added.
         * @param {string} METHOD_ROUTING_ID the method routing id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310UpdateMethodRouting(body: MethodRoutingCommons, METHOD_ROUTING_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<MethodRoutingCommons>> {
            return APIApiFp(configuration).oBPv310UpdateMethodRouting(body, METHOD_ROUTING_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Create Bank Level Dynamic Endpoint
         * @param {BANKIDDynamicendpointsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelDynamicEndpoint(body: BANKIDDynamicendpointsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2011>> {
            return APIApiFp(configuration).oBPv400CreateBankLevelDynamicEndpoint(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;branchId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;atmId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;productCode=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;cardId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;transactionId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;counterpartyId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelDynamicEntity(body: DynamicEntityFooBar, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return APIApiFp(configuration).oBPv400CreateBankLevelDynamicEntity(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create Bank Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Create Bank Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelEndpointTag(body: EndpointTagJson400, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>> {
            return APIApiFp(configuration).oBPv400CreateBankLevelEndpointTag(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Create Dynamic Endpoint
         * @param {ManagementDynamicendpointsBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateDynamicEndpoint(body: ManagementDynamicendpointsBody, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2011>> {
            return APIApiFp(configuration).oBPv400CreateDynamicEndpoint(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create a system level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;branchId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;atmId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;productCode=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;cardId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;transactionId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;counterpartyId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateSystemDynamicEntity(body: DynamicEntityFooBar, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return APIApiFp(configuration).oBPv400CreateSystemDynamicEntity(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create System Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Create System Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateSystemLevelEndpointTag(body: EndpointTagJson400, options?: AxiosRequestConfig): Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>> {
            return APIApiFp(configuration).oBPv400CreateSystemLevelEndpointTag(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Delete Bank Level Dynamic Endpoint
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelDynamicEndpoint(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv400DeleteBankLevelDynamicEndpoint(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete Bank Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete Bank Level Endpoint Tag.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Bank Level Endpoint Tag
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelEndpointTag(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Full>> {
            return APIApiFp(configuration).oBPv400DeleteBankLevelEndpointTag(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Delete Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteDynamicEndpoint(options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv400DeleteDynamicEndpoint(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteMyDynamicEndpoint(options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv400DeleteMyDynamicEndpoint(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete System Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete System Level Endpoint Tag.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete System Level Endpoint Tag
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteSystemLevelEndpointTag(options?: AxiosRequestConfig): Promise<AxiosResponse<Full>> {
            return APIApiFp(configuration).oBPv400DeleteSystemLevelEndpointTag(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get a Bank Level Dynamic Endpoint.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Get Bank Level Dynamic Endpoint
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicEndpoint(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2011>> {
            return APIApiFp(configuration).oBPv400GetBankLevelDynamicEndpoint(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get Bank Level Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Endpoints
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicEndpoints(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20011>> {
            return APIApiFp(configuration).oBPv400GetBankLevelDynamicEndpoints(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all the bank level Dynamic Entities for one bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Entities
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicEntities(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2005>> {
            return APIApiFp(configuration).oBPv400GetBankLevelDynamicEntities(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get Bank Level Endpoint Tags.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Get Bank Level Endpoint Tags
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelEndpointTags(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<NotSupportedYet>> {
            return APIApiFp(configuration).oBPv400GetBankLevelEndpointTags(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the Call Context of the current call.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get the Call Context of a current call
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetCallContext(options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv400GetCallContext(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get a Dynamic Endpoint.</p><p>Get one DynamicEndpoint,</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Dynamic Endpoint
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetDynamicEndpoint(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2011>> {
            return APIApiFp(configuration).oBPv400GetDynamicEndpoint(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Get Dynamic Endpoints
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetDynamicEndpoints(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20011>> {
            return APIApiFp(configuration).oBPv400GetDynamicEndpoints(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get basic information about the Mapper Database.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>
         * @summary Get Mapper Database Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetMapperDatabaseInfo(options?: AxiosRequestConfig): Promise<AxiosResponse<AdapterInfoJsonV300>> {
            return APIApiFp(configuration).oBPv400GetMapperDatabaseInfo(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get My Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Endpoints
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetMyDynamicEndpoints(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20011>> {
            return APIApiFp(configuration).oBPv400GetMyDynamicEndpoints(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all my Dynamic Entities.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetMyDynamicEntities(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2005>> {
            return APIApiFp(configuration).oBPv400GetMyDynamicEntities(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all the scanned API Versions.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Get scanned API Versions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetScannedApiVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2002>> {
            return APIApiFp(configuration).oBPv400GetScannedApiVersions(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all System Dynamic Entities</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get System Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetSystemDynamicEntities(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2005>> {
            return APIApiFp(configuration).oBPv400GetSystemDynamicEntities(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get System Level Endpoint Tags.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Get System Level Endpoint Tags
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetSystemLevelEndpointTags(options?: AxiosRequestConfig): Promise<AxiosResponse<NotSupportedYet>> {
            return APIApiFp(configuration).oBPv400GetSystemLevelEndpointTags(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update Bank Level  dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Update Bank Level Dynamic Endpoint Host
         * @param {DynamicEndpointHostJson400} body DynamicEndpointHostJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelDynamicEndpointHost(body: DynamicEndpointHostJson400, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEndpointHostJson400>> {
            return APIApiFp(configuration).oBPv400UpdateBankLevelDynamicEndpointHost(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;branchId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;atmId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;productCode=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;cardId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;transactionId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;counterpartyId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p></code></pre>
         * @summary Update Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return APIApiFp(configuration).oBPv400UpdateBankLevelDynamicEntity(body, DYNAMIC_ENTITY_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Update Bank Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelEndpointTag(body: EndpointTagJson400, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>> {
            return APIApiFp(configuration).oBPv400UpdateBankLevelEndpointTag(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary  Update Dynamic Endpoint Host
         * @param {DynamicEndpointHostJson400} body DynamicEndpointHostJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateDynamicEndpointHost(body: DynamicEndpointHostJson400, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEndpointHostJson400>> {
            return APIApiFp(configuration).oBPv400UpdateDynamicEndpointHost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update my DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;branchId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;atmId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;productCode=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;cardId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;transactionId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;counterpartyId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p></code></pre>
         * @summary Update My Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateMyDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return APIApiFp(configuration).oBPv400UpdateMyDynamicEntity(body, DYNAMIC_ENTITY_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update a System Level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;branchId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;atmId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;productCode=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;cardId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;transactionId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;counterpartyId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p></code></pre>
         * @summary Update System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateSystemDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return APIApiFp(configuration).oBPv400UpdateSystemDynamicEntity(body, DYNAMIC_ENTITY_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
         * @summary Update System Level Endpoint Tag
         * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateSystemLevelEndpointTag(body: EndpointTagJson400, options?: AxiosRequestConfig): Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>> {
            return APIApiFp(configuration).oBPv400UpdateSystemLevelEndpointTag(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Verify Request and Sign Response of a current call.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Verify Request and Sign Response of a current call
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400VerifyRequestSignResponse(options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv400VerifyRequestSignResponse(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get basic information about the Adapter.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>backend_messages</strong></a>: backend_messages</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#errorCode\"><strong>errorCode</strong></a>: errorCode</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#text\"><strong>text</strong></a>:</p><p><a href=\"/glossary#\"><strong>total_duration</strong></a>: total_duration</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#duration\">duration</a>: 5.123</p>
         * @summary Get Adapter Info
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv500GetAdapterInfo(options?: AxiosRequestConfig): Promise<AxiosResponse<AdapterInfoJsonV500>> {
            return APIApiFp(configuration).oBPv500GetAdapterInfo(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the all metrics at the Bank specified by BANK_ID</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#x61;&#105;&#x6c;to:&#48;&#x31;&#x2e;&#48;&#48;&#x30;&#90;&#x26;&#108;&#x69;&#109;&#x69;&#116;&#x3d;&#x31;&#x30;&#48;&#x30;&#x30;&#38;&#111;&#x66;&#102;&#x73;&#x65;&#116;&#x3d;0&amp;&#x61;&#110;&#111;&#x6e;&#x3d;&#x66;&#x61;l&#115;&#101;&#x26;&#x61;pp&#95;&#x6e;&#x61;&#109;&#101;&#61;&#84;&#x65;&#97;&#x74;&#x41;&#x70;&#x70;&#38;&#105;&#x6d;&#112;&#108;&#x65;m&#101;&#x6e;&#116;&#x65;&#100;&#95;i&#110;_v&#101;r&#115;&#105;&#111;&#110;&#61;&#118;2&#x2e;&#49;.&#48;&#x26;&#118;&#101;&#x72;&#98;&#x3d;&#80;O&#x53;T&amp;&#x75;&#x73;&#x65;r_&#105;&#100;&#61;&#99;&#55;&#x62;6c&#98;&#x34;&#x37;&#45;&#x63;&#98;9&#54;&#x2d;4&#x34;&#52;&#x31;&#45;&#x38;&#56;&#x30;1-&#x33;&#x35;&#98;57&#x34;5&#54;&#x37;5&#x33;a&#x26;u&#115;&#x65;r&#x5f;&#x6e;&#x61;m&#101;&#61;&#115;&#x75;&#x73;a&#110;&#46;&#117;&#x6b;&#x2e;&#x32;&#x39;&#64;e&#x78;&#x61;&#x6d;&#112;&#x6c;&#x65;&#x2e;&#99;o&#109;\">&#48;&#49;&#46;00&#x30;&#x5a;&#x26;&#108;&#x69;m&#105;&#116;&#x3d;&#49;&#48;&#48;&#x30;&#48;&amp;&#111;&#x66;&#102;s&#x65;&#x74;&#x3d;&#48;&amp;&#x61;&#x6e;&#111;&#x6e;&#x3d;&#102;&#x61;&#x6c;&#115;e&#38;&#x61;p&#112;_&#110;&#x61;m&#x65;&#x3d;T&#101;&#97;t&#65;&#x70;&#x70;&#38;i&#109;&#x70;&#x6c;&#101;&#x6d;&#x65;&#110;&#x74;e&#100;&#x5f;&#x69;&#110;&#x5f;&#118;&#101;&#114;&#115;io&#x6e;&#61;&#118;&#x32;&#x2e;&#x31;.&#x30;&amp;&#x76;&#101;&#114;&#x62;&#x3d;P&#79;&#x53;&#x54;&#x26;&#117;&#115;&#x65;&#114;&#95;i&#x64;&#x3d;&#x63;7&#98;&#x36;&#x63;&#x62;&#x34;&#55;&#x2d;&#x63;&#98;&#57;&#x36;&#45;&#52;&#52;&#x34;&#x31;-&#x38;8&#48;&#49;&#x2d;&#51;&#x35;&#x62;&#x35;&#x37;4&#53;6&#55;&#x35;&#51;&#97;&#x26;&#117;&#x73;e&#114;_&#110;&#97;&#x6d;&#101;&#61;&#x73;&#117;&#x73;&#x61;&#x6e;&#x2e;u&#107;.2&#57;&#x40;&#101;&#120;&#x61;m&#x70;&#x6c;&#101;&#x2e;c&#x6f;m</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p><p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p><p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>
         * @summary Get Metrics at Bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv500GetMetricsAtBank(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<MetricsJson>> {
            return APIApiFp(configuration).oBPv500GetMetricsAtBank(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create Regulated Entity</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Create Regulated Entity
         * @param {RegulatedEntityPostJsonV510} body RegulatedEntityPostJsonV510 object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510CreateRegulatedEntity(body: RegulatedEntityPostJsonV510, options?: AxiosRequestConfig): Promise<AxiosResponse<RegulatedEntitiesJsonV510>> {
            return APIApiFp(configuration).oBPv510CreateRegulatedEntity(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete Regulated Entity specified by REGULATED_ENTITY_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">REGULATED_ENTITY_ID</a>: REGULATED_ENTITY_ID</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Regulated Entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510DeleteRegulatedEntity(options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return APIApiFp(configuration).oBPv510DeleteRegulatedEntity(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get API TagsGet API Tags</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>
         * @summary Get API Tags
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetApiTags(options?: AxiosRequestConfig): Promise<AxiosResponse<AccountsMinimalJson400>> {
            return APIApiFp(configuration).oBPv510GetApiTags(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get API metrics rows. These are records of each REST API call.</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>You can filter by the following fields by applying url parameters</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date e.g.:from_date=1100-01-01T01:01:01.000Z Defaults to the Unix Epoch i.e. Thu Jan 01 00:00:00 UTC 1970</p><p>2 to_date e.g.:to_date=1100-01-01T01:01:01.000Z Defaults to a far future date i.e. Sat Jan 01 00:00:00 UTC 4000</p><p>Note: it is recommended you send a valid from_date (e.g. 5 seconds ago) and to_date (now + 1 second) if you want to get the latest records<br />Otherwise you may receive stale cached results.</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#97;&#105;&#108;&#x74;&#x6f;:&#x30;&#x31;&#x2e;&#48;&#x30;&#48;&#x5a;&#38;&#x6c;i&#x6d;&#x69;&#116;&#61;1&#48;0&#48;&#48;&#x26;&#x6f;&#102;&#102;&#x73;&#101;&#x74;&#61;&#x30;&#x26;&#97;&#110;on&#61;&#x66;a&#108;&#115;&#101;&#x26;&#x61;&#112;&#112;&#x5f;&#110;a&#x6d;e&#61;&#84;&#101;&#97;&#116;&#x41;pp&#x26;&#105;&#109;&#112;&#x6c;&#101;me&#110;t&#101;d&#95;&#105;&#110;&#95;&#118;&#101;&#x72;s&#x69;&#x6f;n&#x3d;&#118;&#x32;&#46;1&#46;&#x30;&#x26;v&#x65;&#114;&#98;&#61;&#x50;&#79;&#83;&#x54;&#38;&#117;&#115;&#x65;&#x72;&#95;&#105;&#100;&#61;&#99;7&#x62;&#54;&#x63;&#x62;&#x34;&#55;&#x2d;&#99;b&#57;&#x36;&#45;&#x34;&#52;4&#x31;-&#x38;&#x38;&#48;1&#45;&#51;&#x35;&#98;&#x35;7&#52;&#53;&#x36;&#x37;&#53;&#51;&#97;&amp;&#x75;&#x73;&#101;&#114;&#95;&#x6e;&#97;&#x6d;&#x65;&#61;&#x73;&#x75;&#115;&#x61;n&#46;&#117;&#107;&#x2e;&#x32;&#57;&#64;&#x65;&#x78;&#97;&#109;&#x70;l&#x65;&#46;&#x63;&#x6f;&#x6d;\">0&#49;&#x2e;0&#48;0&#x5a;&#38;&#108;&#105;&#109;&#105;t&#x3d;&#49;0&#x30;&#48;&#x30;&#x26;o&#102;&#102;se&#x74;=&#48;&#38;&#x61;&#110;&#x6f;&#x6e;&#61;&#102;&#97;&#108;&#115;&#101;&#38;&#x61;&#112;p&#x5f;&#x6e;&#x61;&#x6d;e=&#x54;&#x65;&#97;t&#65;&#112;&#112;&#38;&#x69;m&#112;&#x6c;&#101;&#x6d;e&#110;&#x74;&#101;&#100;&#x5f;&#105;&#110;&#x5f;v&#x65;r&#115;&#x69;&#x6f;&#x6e;&#61;v&#x32;.&#x31;&#46;&#48;&#38;&#x76;&#x65;&#114;&#98;&#x3d;&#x50;O&#83;&#x54;&#38;&#117;s&#x65;&#x72;&#x5f;&#105;&#x64;&#61;&#99;&#55;&#x62;6&#x63;&#x62;&#x34;&#55;-&#x63;&#98;&#x39;&#54;-&#x34;&#52;4&#49;&#x2d;&#56;&#x38;0&#x31;-&#x33;&#x35;&#x62;&#53;&#x37;&#52;56&#55;&#53;&#x33;&#97;&#38;&#117;&#115;&#101;&#x72;&#x5f;&#110;a&#x6d;&#101;&#x3d;&#x73;&#x75;&#x73;&#97;&#x6e;.&#x75;&#x6b;&#46;&#50;9&#64;&#x65;&#x78;&#x61;&#109;p&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p><p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#\"><strong>response_body</strong></a>: response_body</p><p><a href=\"/glossary#\"><strong>source_ip</strong></a>: source_ip</p><p><a href=\"/glossary#\"><strong>target_ip</strong></a>: target_ip</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p><p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>
         * @summary Get Metrics
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetMetrics(options?: AxiosRequestConfig): Promise<AxiosResponse<MetricsJsonV510>> {
            return APIApiFp(configuration).oBPv510GetMetrics(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get Regulated Entity By REGULATED_ENTITY_ID</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">REGULATED_ENTITY_ID</a>: REGULATED_ENTITY_ID</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Get Regulated Entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510GetRegulatedEntityById(options?: AxiosRequestConfig): Promise<AxiosResponse<RegulatedEntitiesJsonV510>> {
            return APIApiFp(configuration).oBPv510GetRegulatedEntityById(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Returns information about:</p><ul><li>Regulated Entities</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
         * @summary Get Regulated Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510RegulatedEntities(options?: AxiosRequestConfig): Promise<AxiosResponse<RegulatedEntitiesJsonV510>> {
            return APIApiFp(configuration).oBPv510RegulatedEntities(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Hosted at information</li><li>Energy source information</li><li>Git Commit</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Connector\"><strong>connector</strong></a>: connector</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;i&#x6c;&#116;&#x6f;&#58;&#102;e&#108;&#105;&#120;&#x73;&#x6d;&#x69;&#x74;&#104;@&#x65;&#x78;&#97;&#109;&#112;&#x6c;e&#46;&#x63;&#x6f;&#x6d;\">&#102;&#101;&#x6c;&#x69;x&#115;&#x6d;&#x69;&#x74;&#x68;&#x40;&#x65;&#120;&#x61;m&#112;&#x6c;&#x65;.&#x63;&#x6f;&#109;</a></p><p><a href=\"/glossary#energy_source\"><strong>energy_source</strong></a>:</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#hosted_at\"><strong>hosted_at</strong></a>:</p><p><a href=\"/glossary#hosted_by\"><strong>hosted_by</strong></a>:</p><p><a href=\"/glossary#\"><strong>hostname</strong></a>: hostname</p><p><a href=\"/glossary#\"><strong>local_identity_provider</strong></a>: local_identity_provider</p><p><a href=\"/glossary#organisation\"><strong>organisation</strong></a>:</p><p><a href=\"/glossary#organisation_website\"><strong>organisation_website</strong></a>:</p><p><a href=\"/glossary#phone\"><strong>phone</strong></a>:</p><p><a href=\"/glossary#\"><strong>resource_docs_requires_role</strong></a>: resource_docs_requires_role</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#version_status\"><strong>version_status</strong></a>:</p>
         * @summary Get API Info (root)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510Root(options?: AxiosRequestConfig): Promise<AxiosResponse<APIInfoJson400>> {
            return APIApiFp(configuration).oBPv510Root(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Returns information about:</p><ul><li>Suggested session timeout in case of a user inactivity</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>timeout_in_seconds</strong></a>: timeout_in_seconds</p>
         * @summary Get Suggested Session Timeout
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510SuggestedSessionTimeout(options?: AxiosRequestConfig): Promise<AxiosResponse<SuggestedSessionTimeoutV510>> {
            return APIApiFp(configuration).oBPv510SuggestedSessionTimeout(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Waiting For Godot</p><p>Uses query parameter &quot;sleep&quot; in milliseconds.<br />For instance: .../waiting-for-godot?sleep=50 means postpone response in 50 milliseconds.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>sleep_in_milliseconds</strong></a>: sleep_in_milliseconds</p>
         * @summary Waiting For Godot
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv510WaitingForGodot(options?: AxiosRequestConfig): Promise<AxiosResponse<WaitingForGodotJsonV510>> {
            return APIApiFp(configuration).oBPv510WaitingForGodot(options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * APIApi - object-oriented interface
 * @export
 * @class APIApi
 * @extends {BaseAPI}
 */
export class APIApi extends BaseAPI {
    /**
     * <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
     * @summary Get Bank Level Dynamic Resource Docs
     * @param {string} API_VERSION eg:v2.2.0, v3.0.0
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv140GetBankLevelDynamicResourceDocsObp(API_VERSION: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv140GetBankLevelDynamicResourceDocsObp(API_VERSION, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><strong>JSON response body fields:</strong></p>
     * @summary Get Resource Docs
     * @param {string} API_VERSION eg:v2.2.0, v3.0.0
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv140GetResourceDocsObpV400(API_VERSION: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv140GetResourceDocsObpV400(API_VERSION, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#api_version\">API_VERSION</a>:</p><p><strong>JSON response body fields:</strong></p>
     * @summary Get Swagger documentation
     * @param {string} API_VERSION eg:v2.2.0, v3.0.0
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv140GetResourceDocsSwagger(API_VERSION: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv140GetResourceDocsSwagger(API_VERSION, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
     * @summary Search API Metrics via Elasticsearch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv200ElasticSearchMetrics(options?: AxiosRequestConfig) : Promise<AxiosResponse<EmptyElasticSearch>> {
        return APIApiFp(this.configuration).oBPv200ElasticSearchMetrics(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#connector_name\"><strong>connector_name</strong></a>:</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p>
     * @summary Get Connector Metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv220GetConnectorMetrics(options?: AxiosRequestConfig) : Promise<AxiosResponse<ConnectorMetricsJson>> {
        return APIApiFp(this.configuration).oBPv220GetConnectorMetrics(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>These message docs provide example messages sent by OBP to the (RabbitMq) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>: rest_vMar2019, stored_procedure_vDec2019 ...</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#adapter_implementation\"><strong>adapter_implementation</strong></a>:</p><p><a href=\"/glossary#dependent_endpoints\"><strong>dependent_endpoints</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#example_inbound_message\"><strong>example_inbound_message</strong></a>: {}</p><p><a href=\"/glossary#example_outbound_message\"><strong>example_outbound_message</strong></a>: {}</p><p><a href=\"/glossary#group\"><strong>group</strong></a>:</p><p><a href=\"/glossary#message_docs\"><strong>message_docs</strong></a>:</p><p><a href=\"/glossary#message_format\"><strong>message_format</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p><p><a href=\"/glossary#suggested_order\"><strong>suggested_order</strong></a>:</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#inboundavroschema\">inboundAvroSchema</a>:</p><p><a href=\"/glossary#inbound_topic\">inbound_topic</a>:</p><p><a href=\"/glossary#outboundavroschema\">outboundAvroSchema</a>:</p><p><a href=\"/glossary#outbound_topic\">outbound_topic</a>:</p><p><a href=\"/glossary#requiredfieldinfo\">requiredFieldInfo</a>: false</p>
     * @summary Get Message Docs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv220GetMessageDocs(options?: AxiosRequestConfig) : Promise<AxiosResponse<MessageDocsJson>> {
        return APIApiFp(this.configuration).oBPv220GetMessageDocs(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get basic information about the Adapter listening on behalf of this bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>
     * @summary Get Adapter Info for a bank
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv300GetAdapterInfoForBank(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<AdapterInfoJsonV300>> {
        return APIApiFp(this.configuration).oBPv300GetAdapterInfoForBank(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#akka\"><strong>akka</strong></a>:</p><p><a href=\"/glossary#cache\"><strong>cache</strong></a>:</p><p><a href=\"/glossary#elastic_search\"><strong>elastic_search</strong></a>:</p><p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p><p><a href=\"/glossary#log_level\"><strong>log_level</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#ports\"><strong>ports</strong></a>:</p><p><a href=\"/glossary#property\"><strong>property</strong></a>:</p><p><a href=\"/glossary#require_scopes_for_all_roles\"><strong>require_scopes_for_all_roles</strong></a>:</p><p><a href=\"/glossary#require_scopes_for_listed_roles\"><strong>require_scopes_for_listed_roles</strong></a>: false</p><p><a href=\"/glossary#scopes\"><strong>scopes</strong></a>:</p><p><a href=\"/glossary#ttl_in_seconds\"><strong>ttl_in_seconds</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><a href=\"/glossary#warehouse\"><strong>warehouse</strong></a>:</p><p><a href=\"/glossary#\">remote_data_secret_matched</a>: remote_data_secret_matched</p>
     * @summary Get API Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310Config(options?: AxiosRequestConfig) : Promise<AxiosResponse<ConfigurationJSON>> {
        return APIApiFp(this.configuration).oBPv310Config(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create a MethodRouting.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Explanation of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some parameters for this method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li><li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li><li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
     * @summary Create MethodRouting
     * @param {MethodRoutingCommons} body MethodRoutingCommons object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310CreateMethodRouting(body: MethodRoutingCommons, options?: AxiosRequestConfig) : Promise<AxiosResponse<MethodRoutingCommons>> {
        return APIApiFp(this.configuration).oBPv310CreateMethodRouting(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete MethodRouting
     * @param {string} METHOD_ROUTING_ID the method routing id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310DeleteMethodRouting(METHOD_ROUTING_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv310DeleteMethodRouting(METHOD_ROUTING_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>This endpoint provides example message docs in swagger format.<br />It is only relavent for REST Connectors.</p><p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p><p><strong>JSON response body fields:</strong></p>
     * @summary Get Message Docs Swagger
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310GetMessageDocsSwagger(options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv310GetMessageDocsSwagger(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name: filter with method_name</li><li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li></ul><p>eg:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\">https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
     * @summary Get MethodRoutings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310GetMethodRoutings(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse200>> {
        return APIApiFp(this.configuration).oBPv310GetMethodRoutings(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#jwks_uri\"><strong>jwks_uri</strong></a>:</p><p><a href=\"/glossary#jwks_uris\"><strong>jwks_uris</strong></a>:</p>
     * @summary Get JSON Web Key (JWK) URIs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310GetOAuth2ServerJWKsURIs(options?: AxiosRequestConfig) : Promise<AxiosResponse<OAuth2ServerJwksUrisJson>> {
        return APIApiFp(this.configuration).oBPv310GetOAuth2ServerJWKsURIs(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>This endpoint makes a call to the Connector to check the backend transport is reachable. (WIP)</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#connector_version\"><strong>connector_version</strong></a>:</p><p><a href=\"/glossary#duration_time\"><strong>duration_time</strong></a>: 60</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>
     * @summary Get Connector Status (Loopback)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310GetObpConnectorLoopback(options?: AxiosRequestConfig) : Promise<AxiosResponse<ObpApiLoopbackJson>> {
        return APIApiFp(this.configuration).oBPv310GetObpConnectorLoopback(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Note: Rate limiting can be set at the Consumer level and also for anonymous calls.</p><p>See the consumer rate limits / call limits endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#service_available\"><strong>service_available</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>
     * @summary Get Rate Limiting Info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310GetRateLimitingInfo(options?: AxiosRequestConfig) : Promise<AxiosResponse<RateLimitingInfoV310>> {
        return APIApiFp(this.configuration).oBPv310GetRateLimitingInfo(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#e\"><strong>e</strong></a>:</p><p><a href=\"/glossary#kid\"><strong>kid</strong></a>:</p><p><a href=\"/glossary#kty\"><strong>kty</strong></a>:</p><p><a href=\"/glossary#n\"><strong>n</strong></a>:</p><p><a href=\"/glossary#use\"><strong>use</strong></a>:</p>
     * @summary Get JSON Web Key (JWK)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310GetServerJWK(options?: AxiosRequestConfig) : Promise<AxiosResponse<SeverJWK>> {
        return APIApiFp(this.configuration).oBPv310GetServerJWK(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update a MethodRouting.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Explaination of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />note:</li><li><p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p></li></ul><p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p><p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
     * @summary Update MethodRouting
     * @param {MethodRoutingCommons} body MethodRoutingCommons object that needs to be added.
     * @param {string} METHOD_ROUTING_ID the method routing id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv310UpdateMethodRouting(body: MethodRoutingCommons, METHOD_ROUTING_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<MethodRoutingCommons>> {
        return APIApiFp(this.configuration).oBPv310UpdateMethodRouting(body, METHOD_ROUTING_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Create Bank Level Dynamic Endpoint
     * @param {BANKIDDynamicendpointsBody} body JObject object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400CreateBankLevelDynamicEndpoint(body: BANKIDDynamicendpointsBody, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2011>> {
        return APIApiFp(this.configuration).oBPv400CreateBankLevelDynamicEndpoint(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;branchId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;atmId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;productCode=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;cardId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;transactionId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;counterpartyId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
     * @summary Create Bank Level Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400CreateBankLevelDynamicEntity(body: DynamicEntityFooBar, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return APIApiFp(this.configuration).oBPv400CreateBankLevelDynamicEntity(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create Bank Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
     * @summary Create Bank Level Endpoint Tag
     * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400CreateBankLevelEndpointTag(body: EndpointTagJson400, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>> {
        return APIApiFp(this.configuration).oBPv400CreateBankLevelEndpointTag(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Create Dynamic Endpoint
     * @param {ManagementDynamicendpointsBody} body JObject object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400CreateDynamicEndpoint(body: ManagementDynamicendpointsBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2011>> {
        return APIApiFp(this.configuration).oBPv400CreateDynamicEndpoint(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create a system level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;branchId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;atmId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;productCode=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;cardId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;transactionId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;counterpartyId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
     * @summary Create System Level Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400CreateSystemDynamicEntity(body: DynamicEntityFooBar, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return APIApiFp(this.configuration).oBPv400CreateSystemDynamicEntity(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create System Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
     * @summary Create System Level Endpoint Tag
     * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400CreateSystemLevelEndpointTag(body: EndpointTagJson400, options?: AxiosRequestConfig) : Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>> {
        return APIApiFp(this.configuration).oBPv400CreateSystemLevelEndpointTag(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary  Delete Bank Level Dynamic Endpoint
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400DeleteBankLevelDynamicEndpoint(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv400DeleteBankLevelDynamicEndpoint(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Delete Bank Level Dynamic Entity
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete Bank Level Endpoint Tag.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete Bank Level Endpoint Tag
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400DeleteBankLevelEndpointTag(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<Full>> {
        return APIApiFp(this.configuration).oBPv400DeleteBankLevelEndpointTag(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary  Delete Dynamic Endpoint
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400DeleteDynamicEndpoint(options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv400DeleteDynamicEndpoint(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Delete My Dynamic Endpoint
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400DeleteMyDynamicEndpoint(options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv400DeleteMyDynamicEndpoint(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Delete My Dynamic Entity
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Delete System Level Dynamic Entity
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete System Level Endpoint Tag.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete System Level Endpoint Tag
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400DeleteSystemLevelEndpointTag(options?: AxiosRequestConfig) : Promise<AxiosResponse<Full>> {
        return APIApiFp(this.configuration).oBPv400DeleteSystemLevelEndpointTag(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get a Bank Level Dynamic Endpoint.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary  Get Bank Level Dynamic Endpoint
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetBankLevelDynamicEndpoint(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2011>> {
        return APIApiFp(this.configuration).oBPv400GetBankLevelDynamicEndpoint(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get Bank Level Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get Bank Level Dynamic Endpoints
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetBankLevelDynamicEndpoints(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20011>> {
        return APIApiFp(this.configuration).oBPv400GetBankLevelDynamicEndpoints(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all the bank level Dynamic Entities for one bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get Bank Level Dynamic Entities
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetBankLevelDynamicEntities(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2005>> {
        return APIApiFp(this.configuration).oBPv400GetBankLevelDynamicEntities(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get Bank Level Endpoint Tags.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
     * @summary Get Bank Level Endpoint Tags
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetBankLevelEndpointTags(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<NotSupportedYet>> {
        return APIApiFp(this.configuration).oBPv400GetBankLevelEndpointTags(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the Call Context of the current call.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
     * @summary Get the Call Context of a current call
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetCallContext(options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv400GetCallContext(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get a Dynamic Endpoint.</p><p>Get one DynamicEndpoint,</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get Dynamic Endpoint
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetDynamicEndpoint(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2011>> {
        return APIApiFp(this.configuration).oBPv400GetDynamicEndpoint(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary  Get Dynamic Endpoints
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetDynamicEndpoints(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20011>> {
        return APIApiFp(this.configuration).oBPv400GetDynamicEndpoints(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get basic information about the Mapper Database.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>
     * @summary Get Mapper Database Info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetMapperDatabaseInfo(options?: AxiosRequestConfig) : Promise<AxiosResponse<AdapterInfoJsonV300>> {
        return APIApiFp(this.configuration).oBPv400GetMapperDatabaseInfo(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get My Dynamic Endpoints.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get My Dynamic Endpoints
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetMyDynamicEndpoints(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20011>> {
        return APIApiFp(this.configuration).oBPv400GetMyDynamicEndpoints(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all my Dynamic Entities.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get My Dynamic Entities
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetMyDynamicEntities(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2005>> {
        return APIApiFp(this.configuration).oBPv400GetMyDynamicEntities(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all the scanned API Versions.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p>
     * @summary Get scanned API Versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetScannedApiVersions(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2002>> {
        return APIApiFp(this.configuration).oBPv400GetScannedApiVersions(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all System Dynamic Entities</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get System Dynamic Entities
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetSystemDynamicEntities(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2005>> {
        return APIApiFp(this.configuration).oBPv400GetSystemDynamicEntities(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get System Level Endpoint Tags.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
     * @summary Get System Level Endpoint Tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400GetSystemLevelEndpointTags(options?: AxiosRequestConfig) : Promise<AxiosResponse<NotSupportedYet>> {
        return APIApiFp(this.configuration).oBPv400GetSystemLevelEndpointTags(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update Bank Level  dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary  Update Bank Level Dynamic Endpoint Host
     * @param {DynamicEndpointHostJson400} body DynamicEndpointHostJson400 object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400UpdateBankLevelDynamicEndpointHost(body: DynamicEndpointHostJson400, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEndpointHostJson400>> {
        return APIApiFp(this.configuration).oBPv400UpdateBankLevelDynamicEndpointHost(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;branchId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;atmId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;productCode=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;cardId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;transactionId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;counterpartyId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p></code></pre>
     * @summary Update Bank Level Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400UpdateBankLevelDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return APIApiFp(this.configuration).oBPv400UpdateBankLevelDynamicEntity(body, DYNAMIC_ENTITY_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
     * @summary Update Bank Level Endpoint Tag
     * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400UpdateBankLevelEndpointTag(body: EndpointTagJson400, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>> {
        return APIApiFp(this.configuration).oBPv400UpdateBankLevelEndpointTag(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary  Update Dynamic Endpoint Host
     * @param {DynamicEndpointHostJson400} body DynamicEndpointHostJson400 object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400UpdateDynamicEndpointHost(body: DynamicEndpointHostJson400, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEndpointHostJson400>> {
        return APIApiFp(this.configuration).oBPv400UpdateDynamicEndpointHost(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update my DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;branchId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;atmId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;productCode=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;cardId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;transactionId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;counterpartyId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p></code></pre>
     * @summary Update My Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400UpdateMyDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return APIApiFp(this.configuration).oBPv400UpdateMyDynamicEntity(body, DYNAMIC_ENTITY_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update a System Level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;branchId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;atmId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;productCode=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;cardId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;transactionId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;counterpartyId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p></code></pre>
     * @summary Update System Level Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400UpdateSystemDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return APIApiFp(this.configuration).oBPv400UpdateSystemDynamicEntity(body, DYNAMIC_ENTITY_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p><p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>
     * @summary Update System Level Endpoint Tag
     * @param {EndpointTagJson400} body EndpointTagJson400 object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400UpdateSystemLevelEndpointTag(body: EndpointTagJson400, options?: AxiosRequestConfig) : Promise<AxiosResponse<BankLevelEndpointTagResponseJson400>> {
        return APIApiFp(this.configuration).oBPv400UpdateSystemLevelEndpointTag(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Verify Request and Sign Response of a current call.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
     * @summary Verify Request and Sign Response of a current call
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv400VerifyRequestSignResponse(options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv400VerifyRequestSignResponse(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get basic information about the Adapter.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>backend_messages</strong></a>: backend_messages</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#errorCode\"><strong>errorCode</strong></a>: errorCode</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#text\"><strong>text</strong></a>:</p><p><a href=\"/glossary#\"><strong>total_duration</strong></a>: total_duration</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#duration\">duration</a>: 5.123</p>
     * @summary Get Adapter Info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv500GetAdapterInfo(options?: AxiosRequestConfig) : Promise<AxiosResponse<AdapterInfoJsonV500>> {
        return APIApiFp(this.configuration).oBPv500GetAdapterInfo(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the all metrics at the Bank specified by BANK_ID</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#x61;&#105;&#x6c;to:&#48;&#x31;&#x2e;&#48;&#48;&#x30;&#90;&#x26;&#108;&#x69;&#109;&#x69;&#116;&#x3d;&#x31;&#x30;&#48;&#x30;&#x30;&#38;&#111;&#x66;&#102;&#x73;&#x65;&#116;&#x3d;0&amp;&#x61;&#110;&#111;&#x6e;&#x3d;&#x66;&#x61;l&#115;&#101;&#x26;&#x61;pp&#95;&#x6e;&#x61;&#109;&#101;&#61;&#84;&#x65;&#97;&#x74;&#x41;&#x70;&#x70;&#38;&#105;&#x6d;&#112;&#108;&#x65;m&#101;&#x6e;&#116;&#x65;&#100;&#95;i&#110;_v&#101;r&#115;&#105;&#111;&#110;&#61;&#118;2&#x2e;&#49;.&#48;&#x26;&#118;&#101;&#x72;&#98;&#x3d;&#80;O&#x53;T&amp;&#x75;&#x73;&#x65;r_&#105;&#100;&#61;&#99;&#55;&#x62;6c&#98;&#x34;&#x37;&#45;&#x63;&#98;9&#54;&#x2d;4&#x34;&#52;&#x31;&#45;&#x38;&#56;&#x30;1-&#x33;&#x35;&#98;57&#x34;5&#54;&#x37;5&#x33;a&#x26;u&#115;&#x65;r&#x5f;&#x6e;&#x61;m&#101;&#61;&#115;&#x75;&#x73;a&#110;&#46;&#117;&#x6b;&#x2e;&#x32;&#x39;&#64;e&#x78;&#x61;&#x6d;&#112;&#x6c;&#x65;&#x2e;&#99;o&#109;\">&#48;&#49;&#46;00&#x30;&#x5a;&#x26;&#108;&#x69;m&#105;&#116;&#x3d;&#49;&#48;&#48;&#x30;&#48;&amp;&#111;&#x66;&#102;s&#x65;&#x74;&#x3d;&#48;&amp;&#x61;&#x6e;&#111;&#x6e;&#x3d;&#102;&#x61;&#x6c;&#115;e&#38;&#x61;p&#112;_&#110;&#x61;m&#x65;&#x3d;T&#101;&#97;t&#65;&#x70;&#x70;&#38;i&#109;&#x70;&#x6c;&#101;&#x6d;&#x65;&#110;&#x74;e&#100;&#x5f;&#x69;&#110;&#x5f;&#118;&#101;&#114;&#115;io&#x6e;&#61;&#118;&#x32;&#x2e;&#x31;.&#x30;&amp;&#x76;&#101;&#114;&#x62;&#x3d;P&#79;&#x53;&#x54;&#x26;&#117;&#115;&#x65;&#114;&#95;i&#x64;&#x3d;&#x63;7&#98;&#x36;&#x63;&#x62;&#x34;&#55;&#x2d;&#x63;&#98;&#57;&#x36;&#45;&#52;&#52;&#x34;&#x31;-&#x38;8&#48;&#49;&#x2d;&#51;&#x35;&#x62;&#x35;&#x37;4&#53;6&#55;&#x35;&#51;&#97;&#x26;&#117;&#x73;e&#114;_&#110;&#97;&#x6d;&#101;&#61;&#x73;&#117;&#x73;&#x61;&#x6e;&#x2e;u&#107;.2&#57;&#x40;&#101;&#120;&#x61;m&#x70;&#x6c;&#101;&#x2e;c&#x6f;m</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p><p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p><p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>
     * @summary Get Metrics at Bank
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv500GetMetricsAtBank(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<MetricsJson>> {
        return APIApiFp(this.configuration).oBPv500GetMetricsAtBank(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create Regulated Entity</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
     * @summary Create Regulated Entity
     * @param {RegulatedEntityPostJsonV510} body RegulatedEntityPostJsonV510 object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510CreateRegulatedEntity(body: RegulatedEntityPostJsonV510, options?: AxiosRequestConfig) : Promise<AxiosResponse<RegulatedEntitiesJsonV510>> {
        return APIApiFp(this.configuration).oBPv510CreateRegulatedEntity(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete Regulated Entity specified by REGULATED_ENTITY_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">REGULATED_ENTITY_ID</a>: REGULATED_ENTITY_ID</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete Regulated Entity
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510DeleteRegulatedEntity(options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return APIApiFp(this.configuration).oBPv510DeleteRegulatedEntity(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get API TagsGet API Tags</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>
     * @summary Get API Tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510GetApiTags(options?: AxiosRequestConfig) : Promise<AxiosResponse<AccountsMinimalJson400>> {
        return APIApiFp(this.configuration).oBPv510GetApiTags(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get API metrics rows. These are records of each REST API call.</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>You can filter by the following fields by applying url parameters</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date e.g.:from_date=1100-01-01T01:01:01.000Z Defaults to the Unix Epoch i.e. Thu Jan 01 00:00:00 UTC 1970</p><p>2 to_date e.g.:to_date=1100-01-01T01:01:01.000Z Defaults to a far future date i.e. Sat Jan 01 00:00:00 UTC 4000</p><p>Note: it is recommended you send a valid from_date (e.g. 5 seconds ago) and to_date (now + 1 second) if you want to get the latest records<br />Otherwise you may receive stale cached results.</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#97;&#105;&#108;&#x74;&#x6f;:&#x30;&#x31;&#x2e;&#48;&#x30;&#48;&#x5a;&#38;&#x6c;i&#x6d;&#x69;&#116;&#61;1&#48;0&#48;&#48;&#x26;&#x6f;&#102;&#102;&#x73;&#101;&#x74;&#61;&#x30;&#x26;&#97;&#110;on&#61;&#x66;a&#108;&#115;&#101;&#x26;&#x61;&#112;&#112;&#x5f;&#110;a&#x6d;e&#61;&#84;&#101;&#97;&#116;&#x41;pp&#x26;&#105;&#109;&#112;&#x6c;&#101;me&#110;t&#101;d&#95;&#105;&#110;&#95;&#118;&#101;&#x72;s&#x69;&#x6f;n&#x3d;&#118;&#x32;&#46;1&#46;&#x30;&#x26;v&#x65;&#114;&#98;&#61;&#x50;&#79;&#83;&#x54;&#38;&#117;&#115;&#x65;&#x72;&#95;&#105;&#100;&#61;&#99;7&#x62;&#54;&#x63;&#x62;&#x34;&#55;&#x2d;&#99;b&#57;&#x36;&#45;&#x34;&#52;4&#x31;-&#x38;&#x38;&#48;1&#45;&#51;&#x35;&#98;&#x35;7&#52;&#53;&#x36;&#x37;&#53;&#51;&#97;&amp;&#x75;&#x73;&#101;&#114;&#95;&#x6e;&#97;&#x6d;&#x65;&#61;&#x73;&#x75;&#115;&#x61;n&#46;&#117;&#107;&#x2e;&#x32;&#57;&#64;&#x65;&#x78;&#97;&#109;&#x70;l&#x65;&#46;&#x63;&#x6f;&#x6d;\">0&#49;&#x2e;0&#48;0&#x5a;&#38;&#108;&#105;&#109;&#105;t&#x3d;&#49;0&#x30;&#48;&#x30;&#x26;o&#102;&#102;se&#x74;=&#48;&#38;&#x61;&#110;&#x6f;&#x6e;&#61;&#102;&#97;&#108;&#115;&#101;&#38;&#x61;&#112;p&#x5f;&#x6e;&#x61;&#x6d;e=&#x54;&#x65;&#97;t&#65;&#112;&#112;&#38;&#x69;m&#112;&#x6c;&#101;&#x6d;e&#110;&#x74;&#101;&#100;&#x5f;&#105;&#110;&#x5f;v&#x65;r&#115;&#x69;&#x6f;&#x6e;&#61;v&#x32;.&#x31;&#46;&#48;&#38;&#x76;&#x65;&#114;&#98;&#x3d;&#x50;O&#83;&#x54;&#38;&#117;s&#x65;&#x72;&#x5f;&#105;&#x64;&#61;&#99;&#55;&#x62;6&#x63;&#x62;&#x34;&#55;-&#x63;&#98;&#x39;&#54;-&#x34;&#52;4&#49;&#x2d;&#56;&#x38;0&#x31;-&#x33;&#x35;&#x62;&#53;&#x37;&#52;56&#55;&#53;&#x33;&#97;&#38;&#117;&#115;&#101;&#x72;&#x5f;&#110;a&#x6d;&#101;&#x3d;&#x73;&#x75;&#x73;&#97;&#x6e;.&#x75;&#x6b;&#46;&#50;9&#64;&#x65;&#x78;&#x61;&#109;p&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>: appNameBank</p><p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p><p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p><p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p><p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p><p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p><p><a href=\"/glossary#\"><strong>response_body</strong></a>: response_body</p><p><a href=\"/glossary#\"><strong>source_ip</strong></a>: source_ip</p><p><a href=\"/glossary#\"><strong>target_ip</strong></a>: target_ip</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p><p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>
     * @summary Get Metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510GetMetrics(options?: AxiosRequestConfig) : Promise<AxiosResponse<MetricsJsonV510>> {
        return APIApiFp(this.configuration).oBPv510GetMetrics(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get Regulated Entity By REGULATED_ENTITY_ID</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#\">REGULATED_ENTITY_ID</a>: REGULATED_ENTITY_ID</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
     * @summary Get Regulated Entity
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510GetRegulatedEntityById(options?: AxiosRequestConfig) : Promise<AxiosResponse<RegulatedEntitiesJsonV510>> {
        return APIApiFp(this.configuration).oBPv510GetRegulatedEntityById(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Returns information about:</p><ul><li>Regulated Entities</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>certificate_authority_ca_owner_id</strong></a>: certificate_authority_ca_owner_id</p><p><a href=\"/glossary#\"><strong>entities</strong></a>: entities</p><p><a href=\"/glossary#\"><strong>entity_address</strong></a>: entity_address</p><p><a href=\"/glossary#\"><strong>entity_certificate_public_key</strong></a>: entity_certificate_public_key</p><p><a href=\"/glossary#\"><strong>entity_code</strong></a>: entity_code</p><p><a href=\"/glossary#\"><strong>entity_country</strong></a>: entity_country</p><p><a href=\"/glossary#\"><strong>entity_id</strong></a>: entity_id</p><p><a href=\"/glossary#\"><strong>entity_name</strong></a>: entity_name</p><p><a href=\"/glossary#\"><strong>entity_post_code</strong></a>: entity_post_code</p><p><a href=\"/glossary#\"><strong>entity_town_city</strong></a>: entity_town_city</p><p><a href=\"/glossary#\"><strong>entity_type</strong></a>: entity_type</p><p><a href=\"/glossary#\"><strong>entity_web_site</strong></a>: entity_web_site</p><p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>
     * @summary Get Regulated Entities
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510RegulatedEntities(options?: AxiosRequestConfig) : Promise<AxiosResponse<RegulatedEntitiesJsonV510>> {
        return APIApiFp(this.configuration).oBPv510RegulatedEntities(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Hosted at information</li><li>Energy source information</li><li>Git Commit</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Connector\"><strong>connector</strong></a>: connector</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;i&#x6c;&#116;&#x6f;&#58;&#102;e&#108;&#105;&#120;&#x73;&#x6d;&#x69;&#x74;&#104;@&#x65;&#x78;&#97;&#109;&#112;&#x6c;e&#46;&#x63;&#x6f;&#x6d;\">&#102;&#101;&#x6c;&#x69;x&#115;&#x6d;&#x69;&#x74;&#x68;&#x40;&#x65;&#120;&#x61;m&#112;&#x6c;&#x65;.&#x63;&#x6f;&#109;</a></p><p><a href=\"/glossary#energy_source\"><strong>energy_source</strong></a>:</p><p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p><p><a href=\"/glossary#hosted_at\"><strong>hosted_at</strong></a>:</p><p><a href=\"/glossary#hosted_by\"><strong>hosted_by</strong></a>:</p><p><a href=\"/glossary#\"><strong>hostname</strong></a>: hostname</p><p><a href=\"/glossary#\"><strong>local_identity_provider</strong></a>: local_identity_provider</p><p><a href=\"/glossary#organisation\"><strong>organisation</strong></a>:</p><p><a href=\"/glossary#organisation_website\"><strong>organisation_website</strong></a>:</p><p><a href=\"/glossary#phone\"><strong>phone</strong></a>:</p><p><a href=\"/glossary#\"><strong>resource_docs_requires_role</strong></a>: resource_docs_requires_role</p><p><a href=\"/glossary#version\"><strong>version</strong></a>:</p><p><a href=\"/glossary#version_status\"><strong>version_status</strong></a>:</p>
     * @summary Get API Info (root)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510Root(options?: AxiosRequestConfig) : Promise<AxiosResponse<APIInfoJson400>> {
        return APIApiFp(this.configuration).oBPv510Root(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Returns information about:</p><ul><li>Suggested session timeout in case of a user inactivity</li></ul><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>timeout_in_seconds</strong></a>: timeout_in_seconds</p>
     * @summary Get Suggested Session Timeout
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510SuggestedSessionTimeout(options?: AxiosRequestConfig) : Promise<AxiosResponse<SuggestedSessionTimeoutV510>> {
        return APIApiFp(this.configuration).oBPv510SuggestedSessionTimeout(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Waiting For Godot</p><p>Uses query parameter &quot;sleep&quot; in milliseconds.<br />For instance: .../waiting-for-godot?sleep=50 means postpone response in 50 milliseconds.</p><p>User Authentication is Optional. The User need not be logged in.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>sleep_in_milliseconds</strong></a>: sleep_in_milliseconds</p>
     * @summary Waiting For Godot
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    public async oBPv510WaitingForGodot(options?: AxiosRequestConfig) : Promise<AxiosResponse<WaitingForGodotJsonV510>> {
        return APIApiFp(this.configuration).oBPv510WaitingForGodot(options).then((request) => request(this.axios, this.basePath));
    }
}
