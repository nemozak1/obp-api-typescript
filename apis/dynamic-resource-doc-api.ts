/* tslint:disable */
/* eslint-disable */
/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { BANKIDDynamicresourcedocsBody } from '../models';
import { DynamicresourcedocsDYNAMICRESOURCEDOCIDBody } from '../models';
import { DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1 } from '../models';
import { DynamicresourcedocsEndpointcodeBody } from '../models';
import { ErrorBankNotFound } from '../models';
import { ErrorUserNotLoggedIn } from '../models';
import { InlineResponse200110 } from '../models';
import { InlineResponse20138 } from '../models';
import { InlineResponse20141 } from '../models';
import { ManagementDynamicresourcedocsBody } from '../models';
/**
 * DynamicResourceDocApi - axios parameter creator
 * @export
 */
export const DynamicResourceDocApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <p>Create a Dynamic Resource Doc endpoint code.</p><p>copy the response and past to PractiseEndpoint, So you can have the benefits of<br />auto compilation and debug</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>
         * @summary Create Dynamic Resource Doc endpoint code
         * @param {DynamicresourcedocsEndpointcodeBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400BuildDynamicEndpointTemplate: async (body: DynamicresourcedocsEndpointcodeBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400BuildDynamicEndpointTemplate.');
            }
            const localVarPath = `/obp/v4.0.0/management/dynamic-resource-docs/endpoint-code`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Create Bank Level Dynamic Resource Doc
         * @param {BANKIDDynamicresourcedocsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateBankLevelDynamicResourceDoc: async (body: BANKIDDynamicresourcedocsBody, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateBankLevelDynamicResourceDoc.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400CreateBankLevelDynamicResourceDoc.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-resource-docs`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Create Dynamic Resource Doc
         * @param {ManagementDynamicresourcedocsBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateDynamicResourceDoc: async (body: ManagementDynamicresourcedocsBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateDynamicResourceDoc.');
            }
            const localVarPath = `/obp/v4.0.0/management/dynamic-resource-docs`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a Bank Level Dynamic Resource Doc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Bank Level Dynamic Resource Doc
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteBankLevelDynamicResourceDoc: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400DeleteBankLevelDynamicResourceDoc.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a Dynamic Resource Doc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Dynamic Resource Doc
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteDynamicResourceDoc: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all Bank Level Dynamic Resource Docs.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get all Bank Level Dynamic Resource Docs
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetAllBankLevelDynamicResourceDocs: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400GetAllBankLevelDynamicResourceDocs.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-resource-docs`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all Dynamic Resource Docs.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get all Dynamic Resource Docs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetAllDynamicResourceDocs: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/management/dynamic-resource-docs`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get a Bank Level Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get Bank Level Dynamic Resource Doc by Id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetBankLevelDynamicResourceDoc: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400GetBankLevelDynamicResourceDoc.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get a Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get Dynamic Resource Doc by Id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetDynamicResourceDoc: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Update Bank Level Dynamic Resource Doc
         * @param {DynamicresourcedocsDYNAMICRESOURCEDOCIDBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateBankLevelDynamicResourceDoc: async (body: DynamicresourcedocsDYNAMICRESOURCEDOCIDBody, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateBankLevelDynamicResourceDoc.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400UpdateBankLevelDynamicResourceDoc.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Update Dynamic Resource Doc
         * @param {DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateDynamicResourceDoc: async (body: DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateDynamicResourceDoc.');
            }
            const localVarPath = `/obp/v4.0.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DynamicResourceDocApi - functional programming interface
 * @export
 */
export const DynamicResourceDocApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <p>Create a Dynamic Resource Doc endpoint code.</p><p>copy the response and past to PractiseEndpoint, So you can have the benefits of<br />auto compilation and debug</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>
         * @summary Create Dynamic Resource Doc endpoint code
         * @param {DynamicresourcedocsEndpointcodeBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400BuildDynamicEndpointTemplate(body: DynamicresourcedocsEndpointcodeBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20141>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400BuildDynamicEndpointTemplate(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Create Bank Level Dynamic Resource Doc
         * @param {BANKIDDynamicresourcedocsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelDynamicResourceDoc(body: BANKIDDynamicresourcedocsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20138>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400CreateBankLevelDynamicResourceDoc(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Create Dynamic Resource Doc
         * @param {ManagementDynamicresourcedocsBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateDynamicResourceDoc(body: ManagementDynamicresourcedocsBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20138>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400CreateDynamicResourceDoc(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a Bank Level Dynamic Resource Doc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Bank Level Dynamic Resource Doc
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelDynamicResourceDoc(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<boolean>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400DeleteBankLevelDynamicResourceDoc(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a Dynamic Resource Doc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Dynamic Resource Doc
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteDynamicResourceDoc(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<boolean>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400DeleteDynamicResourceDoc(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all Bank Level Dynamic Resource Docs.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get all Bank Level Dynamic Resource Docs
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetAllBankLevelDynamicResourceDocs(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse200110>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400GetAllBankLevelDynamicResourceDocs(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all Dynamic Resource Docs.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get all Dynamic Resource Docs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetAllDynamicResourceDocs(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse200110>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400GetAllDynamicResourceDocs(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get a Bank Level Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get Bank Level Dynamic Resource Doc by Id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicResourceDoc(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20138>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400GetBankLevelDynamicResourceDoc(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get a Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get Dynamic Resource Doc by Id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetDynamicResourceDoc(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20138>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400GetDynamicResourceDoc(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Update Bank Level Dynamic Resource Doc
         * @param {DynamicresourcedocsDYNAMICRESOURCEDOCIDBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelDynamicResourceDoc(body: DynamicresourcedocsDYNAMICRESOURCEDOCIDBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20138>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400UpdateBankLevelDynamicResourceDoc(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Update Dynamic Resource Doc
         * @param {DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateDynamicResourceDoc(body: DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20138>>> {
            const localVarAxiosArgs = await DynamicResourceDocApiAxiosParamCreator(configuration).oBPv400UpdateDynamicResourceDoc(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * DynamicResourceDocApi - factory interface
 * @export
 */
export const DynamicResourceDocApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * <p>Create a Dynamic Resource Doc endpoint code.</p><p>copy the response and past to PractiseEndpoint, So you can have the benefits of<br />auto compilation and debug</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>
         * @summary Create Dynamic Resource Doc endpoint code
         * @param {DynamicresourcedocsEndpointcodeBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400BuildDynamicEndpointTemplate(body: DynamicresourcedocsEndpointcodeBody, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20141>> {
            return DynamicResourceDocApiFp(configuration).oBPv400BuildDynamicEndpointTemplate(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Create Bank Level Dynamic Resource Doc
         * @param {BANKIDDynamicresourcedocsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelDynamicResourceDoc(body: BANKIDDynamicresourcedocsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20138>> {
            return DynamicResourceDocApiFp(configuration).oBPv400CreateBankLevelDynamicResourceDoc(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Create Dynamic Resource Doc
         * @param {ManagementDynamicresourcedocsBody} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateDynamicResourceDoc(body: ManagementDynamicresourcedocsBody, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20138>> {
            return DynamicResourceDocApiFp(configuration).oBPv400CreateDynamicResourceDoc(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a Bank Level Dynamic Resource Doc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Bank Level Dynamic Resource Doc
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelDynamicResourceDoc(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<boolean>> {
            return DynamicResourceDocApiFp(configuration).oBPv400DeleteBankLevelDynamicResourceDoc(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a Dynamic Resource Doc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Dynamic Resource Doc
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteDynamicResourceDoc(options?: AxiosRequestConfig): Promise<AxiosResponse<boolean>> {
            return DynamicResourceDocApiFp(configuration).oBPv400DeleteDynamicResourceDoc(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all Bank Level Dynamic Resource Docs.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get all Bank Level Dynamic Resource Docs
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetAllBankLevelDynamicResourceDocs(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse200110>> {
            return DynamicResourceDocApiFp(configuration).oBPv400GetAllBankLevelDynamicResourceDocs(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all Dynamic Resource Docs.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get all Dynamic Resource Docs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetAllDynamicResourceDocs(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse200110>> {
            return DynamicResourceDocApiFp(configuration).oBPv400GetAllDynamicResourceDocs(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get a Bank Level Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get Bank Level Dynamic Resource Doc by Id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicResourceDoc(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20138>> {
            return DynamicResourceDocApiFp(configuration).oBPv400GetBankLevelDynamicResourceDoc(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get a Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Get Dynamic Resource Doc by Id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetDynamicResourceDoc(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20138>> {
            return DynamicResourceDocApiFp(configuration).oBPv400GetDynamicResourceDoc(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Update Bank Level Dynamic Resource Doc
         * @param {DynamicresourcedocsDYNAMICRESOURCEDOCIDBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelDynamicResourceDoc(body: DynamicresourcedocsDYNAMICRESOURCEDOCIDBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20138>> {
            return DynamicResourceDocApiFp(configuration).oBPv400UpdateBankLevelDynamicResourceDoc(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
         * @summary Update Dynamic Resource Doc
         * @param {DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1} body JObject object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateDynamicResourceDoc(body: DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20138>> {
            return DynamicResourceDocApiFp(configuration).oBPv400UpdateDynamicResourceDoc(body, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * DynamicResourceDocApi - object-oriented interface
 * @export
 * @class DynamicResourceDocApi
 * @extends {BaseAPI}
 */
export class DynamicResourceDocApi extends BaseAPI {
    /**
     * <p>Create a Dynamic Resource Doc endpoint code.</p><p>copy the response and past to PractiseEndpoint, So you can have the benefits of<br />auto compilation and debug</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>
     * @summary Create Dynamic Resource Doc endpoint code
     * @param {DynamicresourcedocsEndpointcodeBody} body JObject object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400BuildDynamicEndpointTemplate(body: DynamicresourcedocsEndpointcodeBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20141>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400BuildDynamicEndpointTemplate(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
     * @summary Create Bank Level Dynamic Resource Doc
     * @param {BANKIDDynamicresourcedocsBody} body JObject object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400CreateBankLevelDynamicResourceDoc(body: BANKIDDynamicresourcedocsBody, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20138>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400CreateBankLevelDynamicResourceDoc(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
     * @summary Create Dynamic Resource Doc
     * @param {ManagementDynamicresourcedocsBody} body JObject object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400CreateDynamicResourceDoc(body: ManagementDynamicresourcedocsBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20138>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400CreateDynamicResourceDoc(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a Bank Level Dynamic Resource Doc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete Bank Level Dynamic Resource Doc
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400DeleteBankLevelDynamicResourceDoc(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<boolean>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400DeleteBankLevelDynamicResourceDoc(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a Dynamic Resource Doc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete Dynamic Resource Doc
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400DeleteDynamicResourceDoc(options?: AxiosRequestConfig) : Promise<AxiosResponse<boolean>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400DeleteDynamicResourceDoc(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all Bank Level Dynamic Resource Docs.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
     * @summary Get all Bank Level Dynamic Resource Docs
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400GetAllBankLevelDynamicResourceDocs(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse200110>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400GetAllBankLevelDynamicResourceDocs(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all Dynamic Resource Docs.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
     * @summary Get all Dynamic Resource Docs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400GetAllDynamicResourceDocs(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse200110>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400GetAllDynamicResourceDocs(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get a Bank Level Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
     * @summary Get Bank Level Dynamic Resource Doc by Id
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400GetBankLevelDynamicResourceDoc(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20138>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400GetBankLevelDynamicResourceDoc(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get a Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
     * @summary Get Dynamic Resource Doc by Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400GetDynamicResourceDoc(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20138>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400GetDynamicResourceDoc(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
     * @summary Update Bank Level Dynamic Resource Doc
     * @param {DynamicresourcedocsDYNAMICRESOURCEDOCIDBody} body JObject object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400UpdateBankLevelDynamicResourceDoc(body: DynamicresourcedocsDYNAMICRESOURCEDOCIDBody, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20138>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400UpdateBankLevelDynamicResourceDoc(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p><p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p><p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>
     * @summary Update Dynamic Resource Doc
     * @param {DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1} body JObject object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicResourceDocApi
     */
    public async oBPv400UpdateDynamicResourceDoc(body: DynamicresourcedocsDYNAMICRESOURCEDOCIDBody1, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20138>> {
        return DynamicResourceDocApiFp(this.configuration).oBPv400UpdateDynamicResourceDoc(body, options).then((request) => request(this.axios, this.basePath));
    }
}
