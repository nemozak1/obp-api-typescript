/* tslint:disable */
/* eslint-disable */
/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { BANKIDMeetingsBody } from '../models';
import { ErrorUserNotLoggedIn } from '../models';
import { InlineResponse20033 } from '../models';
import { InlineResponse20110 } from '../models';
/**
 * CustomerMeetingApi - axios parameter creator
 * @export
 */
export const CustomerMeetingApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The Meetings resource contains meta data about video/other conference sessions</p><p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p><p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login is required.</p><p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Create Meeting (video conference/call)
         * @param {BANKIDMeetingsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310CreateMeeting: async (body: BANKIDMeetingsBody, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310CreateMeeting.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310CreateMeeting.');
            }
            const localVarPath = `/obp/v3.1.0/banks/{BANK_ID}/meetings`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get Meeting specified by BANK_ID / MEETING_ID<br />Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#meeting_id\">MEETING_ID</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Get Meeting
         * @param {string} MEETING_ID the meeting id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetMeeting: async (MEETING_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'MEETING_ID' is not null or undefined
            if (MEETING_ID === null || MEETING_ID === undefined) {
                throw new RequiredError('MEETING_ID','Required parameter MEETING_ID was null or undefined when calling oBPv310GetMeeting.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310GetMeeting.');
            }
            const localVarPath = `/obp/v3.1.0/banks/{BANK_ID}/meetings/{MEETING_ID}`
                .replace(`{${"MEETING_ID"}}`, encodeURIComponent(String(MEETING_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#meetings\"><strong>meetings</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Get Meetings
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetMeetings: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310GetMeetings.');
            }
            const localVarPath = `/obp/v3.1.0/banks/{BANK_ID}/meetings`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CustomerMeetingApi - functional programming interface
 * @export
 */
export const CustomerMeetingApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The Meetings resource contains meta data about video/other conference sessions</p><p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p><p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login is required.</p><p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Create Meeting (video conference/call)
         * @param {BANKIDMeetingsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310CreateMeeting(body: BANKIDMeetingsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20110>>> {
            const localVarAxiosArgs = await CustomerMeetingApiAxiosParamCreator(configuration).oBPv310CreateMeeting(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get Meeting specified by BANK_ID / MEETING_ID<br />Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#meeting_id\">MEETING_ID</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Get Meeting
         * @param {string} MEETING_ID the meeting id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetMeeting(MEETING_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20110>>> {
            const localVarAxiosArgs = await CustomerMeetingApiAxiosParamCreator(configuration).oBPv310GetMeeting(MEETING_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#meetings\"><strong>meetings</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Get Meetings
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetMeetings(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20033>>> {
            const localVarAxiosArgs = await CustomerMeetingApiAxiosParamCreator(configuration).oBPv310GetMeetings(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * CustomerMeetingApi - factory interface
 * @export
 */
export const CustomerMeetingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * <p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The Meetings resource contains meta data about video/other conference sessions</p><p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p><p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login is required.</p><p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Create Meeting (video conference/call)
         * @param {BANKIDMeetingsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310CreateMeeting(body: BANKIDMeetingsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20110>> {
            return CustomerMeetingApiFp(configuration).oBPv310CreateMeeting(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get Meeting specified by BANK_ID / MEETING_ID<br />Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#meeting_id\">MEETING_ID</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Get Meeting
         * @param {string} MEETING_ID the meeting id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetMeeting(MEETING_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20110>> {
            return CustomerMeetingApiFp(configuration).oBPv310GetMeeting(MEETING_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#meetings\"><strong>meetings</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
         * @summary Get Meetings
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetMeetings(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20033>> {
            return CustomerMeetingApiFp(configuration).oBPv310GetMeetings(BANK_ID, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * CustomerMeetingApi - object-oriented interface
 * @export
 * @class CustomerMeetingApi
 * @extends {BaseAPI}
 */
export class CustomerMeetingApi extends BaseAPI {
    /**
     * <p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The Meetings resource contains meta data about video/other conference sessions</p><p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p><p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login is required.</p><p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
     * @summary Create Meeting (video conference/call)
     * @param {BANKIDMeetingsBody} body JObject object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerMeetingApi
     */
    public async oBPv310CreateMeeting(body: BANKIDMeetingsBody, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20110>> {
        return CustomerMeetingApiFp(this.configuration).oBPv310CreateMeeting(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get Meeting specified by BANK_ID / MEETING_ID<br />Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#meeting_id\">MEETING_ID</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
     * @summary Get Meeting
     * @param {string} MEETING_ID the meeting id
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerMeetingApi
     */
    public async oBPv310GetMeeting(MEETING_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20110>> {
        return CustomerMeetingApiFp(this.configuration).oBPv310GetMeeting(MEETING_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p><p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p><p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p><p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p><p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p><p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p><p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p><p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p><p><a href=\"/glossary#meetings\"><strong>meetings</strong></a>:</p><p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#present\"><strong>present</strong></a>:</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p><p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>
     * @summary Get Meetings
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerMeetingApi
     */
    public async oBPv310GetMeetings(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20033>> {
        return CustomerMeetingApiFp(this.configuration).oBPv310GetMeetings(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
}
