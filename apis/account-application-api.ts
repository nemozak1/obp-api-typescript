/* tslint:disable */
/* eslint-disable */
/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { AccountapplicationsACCOUNTAPPLICATIONIDBody } from '../models';
import { BANKIDAccountapplicationsBody } from '../models';
import { ErrorInvalidJsonFormat } from '../models';
import { ErrorUserNotLoggedIn } from '../models';
import { InlineResponse20022 } from '../models';
import { InlineResponse2015 } from '../models';
/**
 * AccountApplicationApi - axios parameter creator
 * @export
 */
export const AccountApplicationApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <p>Create Account Application</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#\">customer_id</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">user_id</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#x66;&#101;&#108;&#105;&#x78;&#x73;&#109;&#105;&#116;&#x68;&#x40;e&#120;am&#112;&#108;&#x65;&#x2e;&#x63;&#x6f;&#109;\">&#x66;&#x65;&#x6c;&#105;&#120;s&#x6d;&#105;&#116;&#x68;@ex&#97;&#x6d;p&#x6c;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Create Account Application
         * @param {BANKIDAccountapplicationsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310CreateAccountApplication: async (body: BANKIDAccountapplicationsBody, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310CreateAccountApplication.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310CreateAccountApplication.');
            }
            const localVarPath = `/obp/v3.1.0/banks/{BANK_ID}/account-applications`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the Account Application.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#x61;&#105;&#x6c;&#116;&#x6f;:&#x66;&#x65;l&#x69;&#120;&#x73;&#109;&#105;&#116;&#104;@&#x65;x&#97;&#109;&#x70;l&#x65;&#x2e;&#x63;&#x6f;&#x6d;\">&#102;el&#105;&#x78;&#115;&#109;&#105;&#116;h&#x40;e&#x78;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#99;o&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Get Account Application by Id
         * @param {string} ACCOUNT_APPLICATION_ID the account application id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetAccountApplication: async (ACCOUNT_APPLICATION_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'ACCOUNT_APPLICATION_ID' is not null or undefined
            if (ACCOUNT_APPLICATION_ID === null || ACCOUNT_APPLICATION_ID === undefined) {
                throw new RequiredError('ACCOUNT_APPLICATION_ID','Required parameter ACCOUNT_APPLICATION_ID was null or undefined when calling oBPv310GetAccountApplication.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310GetAccountApplication.');
            }
            const localVarPath = `/obp/v3.1.0/banks/{BANK_ID}/account-applications/{ACCOUNT_APPLICATION_ID}`
                .replace(`{${"ACCOUNT_APPLICATION_ID"}}`, encodeURIComponent(String(ACCOUNT_APPLICATION_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get the Account Applications.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#account_applications\"><strong>account_applications</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;&#x69;t&#104;&#64;ex&#97;&#x6d;&#112;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;\">&#x66;&#101;&#108;&#x69;&#120;&#x73;&#109;&#105;t&#x68;&#64;&#101;&#x78;&#x61;&#x6d;p&#108;&#x65;&#46;&#99;&#x6f;&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Get Account Applications
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetAccountApplications: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310GetAccountApplications.');
            }
            const localVarPath = `/obp/v3.1.0/banks/{BANK_ID}/account-applications`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update an Account Application status</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#x69;&#x6c;&#x74;o&#x3a;f&#x65;li&#120;&#x73;&#x6d;&#105;&#x74;&#x68;&#64;&#101;x&#x61;&#x6d;p&#x6c;&#x65;.&#99;om\">&#x66;&#101;&#x6c;&#x69;xs&#109;&#x69;&#x74;&#x68;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#108;&#101;&#46;&#99;&#111;&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Update Account Application Status
         * @param {AccountapplicationsACCOUNTAPPLICATIONIDBody} body JObject object that needs to be added.
         * @param {string} ACCOUNT_APPLICATION_ID the account application id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310UpdateAccountApplicationStatus: async (body: AccountapplicationsACCOUNTAPPLICATIONIDBody, ACCOUNT_APPLICATION_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310UpdateAccountApplicationStatus.');
            }
            // verify required parameter 'ACCOUNT_APPLICATION_ID' is not null or undefined
            if (ACCOUNT_APPLICATION_ID === null || ACCOUNT_APPLICATION_ID === undefined) {
                throw new RequiredError('ACCOUNT_APPLICATION_ID','Required parameter ACCOUNT_APPLICATION_ID was null or undefined when calling oBPv310UpdateAccountApplicationStatus.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310UpdateAccountApplicationStatus.');
            }
            const localVarPath = `/obp/v3.1.0/banks/{BANK_ID}/account-applications/{ACCOUNT_APPLICATION_ID}`
                .replace(`{${"ACCOUNT_APPLICATION_ID"}}`, encodeURIComponent(String(ACCOUNT_APPLICATION_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AccountApplicationApi - functional programming interface
 * @export
 */
export const AccountApplicationApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <p>Create Account Application</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#\">customer_id</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">user_id</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#x66;&#101;&#108;&#105;&#x78;&#x73;&#109;&#105;&#116;&#x68;&#x40;e&#120;am&#112;&#108;&#x65;&#x2e;&#x63;&#x6f;&#109;\">&#x66;&#x65;&#x6c;&#105;&#120;s&#x6d;&#105;&#116;&#x68;@ex&#97;&#x6d;p&#x6c;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Create Account Application
         * @param {BANKIDAccountapplicationsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310CreateAccountApplication(body: BANKIDAccountapplicationsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2015>>> {
            const localVarAxiosArgs = await AccountApplicationApiAxiosParamCreator(configuration).oBPv310CreateAccountApplication(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the Account Application.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#x61;&#105;&#x6c;&#116;&#x6f;:&#x66;&#x65;l&#x69;&#120;&#x73;&#109;&#105;&#116;&#104;@&#x65;x&#97;&#109;&#x70;l&#x65;&#x2e;&#x63;&#x6f;&#x6d;\">&#102;el&#105;&#x78;&#115;&#109;&#105;&#116;h&#x40;e&#x78;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#99;o&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Get Account Application by Id
         * @param {string} ACCOUNT_APPLICATION_ID the account application id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetAccountApplication(ACCOUNT_APPLICATION_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2015>>> {
            const localVarAxiosArgs = await AccountApplicationApiAxiosParamCreator(configuration).oBPv310GetAccountApplication(ACCOUNT_APPLICATION_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get the Account Applications.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#account_applications\"><strong>account_applications</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;&#x69;t&#104;&#64;ex&#97;&#x6d;&#112;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;\">&#x66;&#101;&#108;&#x69;&#120;&#x73;&#109;&#105;t&#x68;&#64;&#101;&#x78;&#x61;&#x6d;p&#108;&#x65;&#46;&#99;&#x6f;&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Get Account Applications
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetAccountApplications(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20022>>> {
            const localVarAxiosArgs = await AccountApplicationApiAxiosParamCreator(configuration).oBPv310GetAccountApplications(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update an Account Application status</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#x69;&#x6c;&#x74;o&#x3a;f&#x65;li&#120;&#x73;&#x6d;&#105;&#x74;&#x68;&#64;&#101;x&#x61;&#x6d;p&#x6c;&#x65;.&#99;om\">&#x66;&#101;&#x6c;&#x69;xs&#109;&#x69;&#x74;&#x68;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#108;&#101;&#46;&#99;&#111;&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Update Account Application Status
         * @param {AccountapplicationsACCOUNTAPPLICATIONIDBody} body JObject object that needs to be added.
         * @param {string} ACCOUNT_APPLICATION_ID the account application id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310UpdateAccountApplicationStatus(body: AccountapplicationsACCOUNTAPPLICATIONIDBody, ACCOUNT_APPLICATION_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2015>>> {
            const localVarAxiosArgs = await AccountApplicationApiAxiosParamCreator(configuration).oBPv310UpdateAccountApplicationStatus(body, ACCOUNT_APPLICATION_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * AccountApplicationApi - factory interface
 * @export
 */
export const AccountApplicationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * <p>Create Account Application</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#\">customer_id</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">user_id</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#x66;&#101;&#108;&#105;&#x78;&#x73;&#109;&#105;&#116;&#x68;&#x40;e&#120;am&#112;&#108;&#x65;&#x2e;&#x63;&#x6f;&#109;\">&#x66;&#x65;&#x6c;&#105;&#120;s&#x6d;&#105;&#116;&#x68;@ex&#97;&#x6d;p&#x6c;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Create Account Application
         * @param {BANKIDAccountapplicationsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310CreateAccountApplication(body: BANKIDAccountapplicationsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2015>> {
            return AccountApplicationApiFp(configuration).oBPv310CreateAccountApplication(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the Account Application.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#x61;&#105;&#x6c;&#116;&#x6f;:&#x66;&#x65;l&#x69;&#120;&#x73;&#109;&#105;&#116;&#104;@&#x65;x&#97;&#109;&#x70;l&#x65;&#x2e;&#x63;&#x6f;&#x6d;\">&#102;el&#105;&#x78;&#115;&#109;&#105;&#116;h&#x40;e&#x78;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#99;o&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Get Account Application by Id
         * @param {string} ACCOUNT_APPLICATION_ID the account application id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetAccountApplication(ACCOUNT_APPLICATION_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2015>> {
            return AccountApplicationApiFp(configuration).oBPv310GetAccountApplication(ACCOUNT_APPLICATION_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get the Account Applications.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#account_applications\"><strong>account_applications</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;&#x69;t&#104;&#64;ex&#97;&#x6d;&#112;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;\">&#x66;&#101;&#108;&#x69;&#120;&#x73;&#109;&#105;t&#x68;&#64;&#101;&#x78;&#x61;&#x6d;p&#108;&#x65;&#46;&#99;&#x6f;&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Get Account Applications
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetAccountApplications(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20022>> {
            return AccountApplicationApiFp(configuration).oBPv310GetAccountApplications(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update an Account Application status</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#x69;&#x6c;&#x74;o&#x3a;f&#x65;li&#120;&#x73;&#x6d;&#105;&#x74;&#x68;&#64;&#101;x&#x61;&#x6d;p&#x6c;&#x65;.&#99;om\">&#x66;&#101;&#x6c;&#x69;xs&#109;&#x69;&#x74;&#x68;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#108;&#101;&#46;&#99;&#111;&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
         * @summary Update Account Application Status
         * @param {AccountapplicationsACCOUNTAPPLICATIONIDBody} body JObject object that needs to be added.
         * @param {string} ACCOUNT_APPLICATION_ID the account application id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310UpdateAccountApplicationStatus(body: AccountapplicationsACCOUNTAPPLICATIONIDBody, ACCOUNT_APPLICATION_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2015>> {
            return AccountApplicationApiFp(configuration).oBPv310UpdateAccountApplicationStatus(body, ACCOUNT_APPLICATION_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * AccountApplicationApi - object-oriented interface
 * @export
 * @class AccountApplicationApi
 * @extends {BaseAPI}
 */
export class AccountApplicationApi extends BaseAPI {
    /**
     * <p>Create Account Application</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#\">customer_id</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\">user_id</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#x66;&#101;&#108;&#105;&#x78;&#x73;&#109;&#105;&#116;&#x68;&#x40;e&#120;am&#112;&#108;&#x65;&#x2e;&#x63;&#x6f;&#109;\">&#x66;&#x65;&#x6c;&#105;&#120;s&#x6d;&#105;&#116;&#x68;@ex&#97;&#x6d;p&#x6c;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
     * @summary Create Account Application
     * @param {BANKIDAccountapplicationsBody} body JObject object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApplicationApi
     */
    public async oBPv310CreateAccountApplication(body: BANKIDAccountapplicationsBody, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2015>> {
        return AccountApplicationApiFp(this.configuration).oBPv310CreateAccountApplication(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the Account Application.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#x61;&#105;&#x6c;&#116;&#x6f;:&#x66;&#x65;l&#x69;&#120;&#x73;&#109;&#105;&#116;&#104;@&#x65;x&#97;&#109;&#x70;l&#x65;&#x2e;&#x63;&#x6f;&#x6d;\">&#102;el&#105;&#x78;&#115;&#109;&#105;&#116;h&#x40;e&#x78;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#99;o&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
     * @summary Get Account Application by Id
     * @param {string} ACCOUNT_APPLICATION_ID the account application id 
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApplicationApi
     */
    public async oBPv310GetAccountApplication(ACCOUNT_APPLICATION_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2015>> {
        return AccountApplicationApiFp(this.configuration).oBPv310GetAccountApplication(ACCOUNT_APPLICATION_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get the Account Applications.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#account_applications\"><strong>account_applications</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#102;&#x65;&#x6c;i&#x78;&#x73;&#109;&#x69;t&#104;&#64;ex&#97;&#x6d;&#112;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;\">&#x66;&#101;&#108;&#x69;&#120;&#x73;&#109;&#105;t&#x68;&#64;&#101;&#x78;&#x61;&#x6d;p&#108;&#x65;&#46;&#99;&#x6f;&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
     * @summary Get Account Applications
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApplicationApi
     */
    public async oBPv310GetAccountApplications(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20022>> {
        return AccountApplicationApiFp(this.configuration).oBPv310GetAccountApplications(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update an Account Application status</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p><p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p><p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p><p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p><p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p><p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p><p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#x69;&#x6c;&#x74;o&#x3a;f&#x65;li&#120;&#x73;&#x6d;&#105;&#x74;&#x68;&#64;&#101;x&#x61;&#x6d;p&#x6c;&#x65;.&#99;om\">&#x66;&#101;&#x6c;&#x69;xs&#109;&#x69;&#x74;&#x68;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#108;&#101;&#46;&#99;&#111;&#x6d;</a></p><p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p><p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p><p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p><p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: false</p><p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2024-03-05T12:14:22.434Z</p><p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p><p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p><p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p><p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p><p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p><p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>rating</strong></a>:</p><p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p><p><a href=\"/glossary#\"><strong>source</strong></a>:</p><p><a href=\"/glossary#status\"><strong>status</strong></a>:</p><p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p><p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p><p><a href=\"/glossary#User\"><strong>user</strong></a>:</p><p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p><p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p><p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p><p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>
     * @summary Update Account Application Status
     * @param {AccountapplicationsACCOUNTAPPLICATIONIDBody} body JObject object that needs to be added.
     * @param {string} ACCOUNT_APPLICATION_ID the account application id 
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApplicationApi
     */
    public async oBPv310UpdateAccountApplicationStatus(body: AccountapplicationsACCOUNTAPPLICATIONIDBody, ACCOUNT_APPLICATION_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2015>> {
        return AccountApplicationApiFp(this.configuration).oBPv310UpdateAccountApplicationStatus(body, ACCOUNT_APPLICATION_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
}
