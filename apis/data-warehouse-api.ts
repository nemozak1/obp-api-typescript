/* tslint:disable */
/* eslint-disable */
/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { ErrorUserNotLoggedIn } from '../models';
import { INDEXFIELDBody } from '../models';
import { WarehouseINDEXBody } from '../models';
/**
 * DataWarehouseApi - axios parameter creator
 * @export
 */
export const DataWarehouseApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <p>Search the data warehouse and get row level results.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>CanSearchWarehouse entitlement is required. You can request the Role below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p><p>POST /search/warehouse/INDEX1,INDEX2</p><p>POST /search/warehouse/ALL</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#index\">INDEX</a>:</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p><p><a href=\"/glossary#query\"><strong>query</strong></a>:</p><p><a href=\"/glossary#none\">none</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Data Warehouse Search
         * @param {WarehouseINDEXBody} body JObject object that needs to be added.
         * @param {string} INDEX the elastic search index
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv300DataWarehouseSearch: async (body: WarehouseINDEXBody, INDEX: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv300DataWarehouseSearch.');
            }
            // verify required parameter 'INDEX' is not null or undefined
            if (INDEX === null || INDEX === undefined) {
                throw new RequiredError('INDEX','Required parameter INDEX was null or undefined when calling oBPv300DataWarehouseSearch.');
            }
            const localVarPath = `/obp/v3.0.0/search/warehouse/{INDEX}`
                .replace(`{${"INDEX"}}`, encodeURIComponent(String(INDEX)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Search the data warehouse and get statistical aggregations over a warehouse field</p><p>Does a stats aggregation over some numeric field:</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>CanSearchWarehouseStats Role is required. You can request this below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/statistics/INDEX/FIELD</p><p>POST /search/warehouse/statistics/ALL/FIELD</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#field\">FIELD</a>:</p><p><a href=\"/glossary#index\">INDEX</a>:</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p><p><a href=\"/glossary#query\"><strong>query</strong></a>:</p><p><a href=\"/glossary#none\">none</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Data Warehouse Statistics
         * @param {INDEXFIELDBody} body JObject object that needs to be added.
         * @param {string} FIELD the elastic search field
         * @param {string} INDEX the elastic search index
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv300DataWarehouseStatistics: async (body: INDEXFIELDBody, FIELD: string, INDEX: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv300DataWarehouseStatistics.');
            }
            // verify required parameter 'FIELD' is not null or undefined
            if (FIELD === null || FIELD === undefined) {
                throw new RequiredError('FIELD','Required parameter FIELD was null or undefined when calling oBPv300DataWarehouseStatistics.');
            }
            // verify required parameter 'INDEX' is not null or undefined
            if (INDEX === null || INDEX === undefined) {
                throw new RequiredError('INDEX','Required parameter INDEX was null or undefined when calling oBPv300DataWarehouseStatistics.');
            }
            const localVarPath = `/obp/v3.0.0/search/warehouse/statistics/{INDEX}/{FIELD}`
                .replace(`{${"FIELD"}}`, encodeURIComponent(String(FIELD)))
                .replace(`{${"INDEX"}}`, encodeURIComponent(String(INDEX)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DataWarehouseApi - functional programming interface
 * @export
 */
export const DataWarehouseApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <p>Search the data warehouse and get row level results.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>CanSearchWarehouse entitlement is required. You can request the Role below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p><p>POST /search/warehouse/INDEX1,INDEX2</p><p>POST /search/warehouse/ALL</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#index\">INDEX</a>:</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p><p><a href=\"/glossary#query\"><strong>query</strong></a>:</p><p><a href=\"/glossary#none\">none</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Data Warehouse Search
         * @param {WarehouseINDEXBody} body JObject object that needs to be added.
         * @param {string} INDEX the elastic search index
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv300DataWarehouseSearch(body: WarehouseINDEXBody, INDEX: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<any>>> {
            const localVarAxiosArgs = await DataWarehouseApiAxiosParamCreator(configuration).oBPv300DataWarehouseSearch(body, INDEX, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Search the data warehouse and get statistical aggregations over a warehouse field</p><p>Does a stats aggregation over some numeric field:</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>CanSearchWarehouseStats Role is required. You can request this below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/statistics/INDEX/FIELD</p><p>POST /search/warehouse/statistics/ALL/FIELD</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#field\">FIELD</a>:</p><p><a href=\"/glossary#index\">INDEX</a>:</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p><p><a href=\"/glossary#query\"><strong>query</strong></a>:</p><p><a href=\"/glossary#none\">none</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Data Warehouse Statistics
         * @param {INDEXFIELDBody} body JObject object that needs to be added.
         * @param {string} FIELD the elastic search field
         * @param {string} INDEX the elastic search index
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv300DataWarehouseStatistics(body: INDEXFIELDBody, FIELD: string, INDEX: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<any>>> {
            const localVarAxiosArgs = await DataWarehouseApiAxiosParamCreator(configuration).oBPv300DataWarehouseStatistics(body, FIELD, INDEX, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * DataWarehouseApi - factory interface
 * @export
 */
export const DataWarehouseApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * <p>Search the data warehouse and get row level results.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>CanSearchWarehouse entitlement is required. You can request the Role below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p><p>POST /search/warehouse/INDEX1,INDEX2</p><p>POST /search/warehouse/ALL</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#index\">INDEX</a>:</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p><p><a href=\"/glossary#query\"><strong>query</strong></a>:</p><p><a href=\"/glossary#none\">none</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Data Warehouse Search
         * @param {WarehouseINDEXBody} body JObject object that needs to be added.
         * @param {string} INDEX the elastic search index
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv300DataWarehouseSearch(body: WarehouseINDEXBody, INDEX: string, options?: AxiosRequestConfig): Promise<AxiosResponse<any>> {
            return DataWarehouseApiFp(configuration).oBPv300DataWarehouseSearch(body, INDEX, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Search the data warehouse and get statistical aggregations over a warehouse field</p><p>Does a stats aggregation over some numeric field:</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>CanSearchWarehouseStats Role is required. You can request this below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/statistics/INDEX/FIELD</p><p>POST /search/warehouse/statistics/ALL/FIELD</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#field\">FIELD</a>:</p><p><a href=\"/glossary#index\">INDEX</a>:</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p><p><a href=\"/glossary#query\"><strong>query</strong></a>:</p><p><a href=\"/glossary#none\">none</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
         * @summary Data Warehouse Statistics
         * @param {INDEXFIELDBody} body JObject object that needs to be added.
         * @param {string} FIELD the elastic search field
         * @param {string} INDEX the elastic search index
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv300DataWarehouseStatistics(body: INDEXFIELDBody, FIELD: string, INDEX: string, options?: AxiosRequestConfig): Promise<AxiosResponse<any>> {
            return DataWarehouseApiFp(configuration).oBPv300DataWarehouseStatistics(body, FIELD, INDEX, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * DataWarehouseApi - object-oriented interface
 * @export
 * @class DataWarehouseApi
 * @extends {BaseAPI}
 */
export class DataWarehouseApi extends BaseAPI {
    /**
     * <p>Search the data warehouse and get row level results.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>CanSearchWarehouse entitlement is required. You can request the Role below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p><p>POST /search/warehouse/INDEX1,INDEX2</p><p>POST /search/warehouse/ALL</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#index\">INDEX</a>:</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p><p><a href=\"/glossary#query\"><strong>query</strong></a>:</p><p><a href=\"/glossary#none\">none</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
     * @summary Data Warehouse Search
     * @param {WarehouseINDEXBody} body JObject object that needs to be added.
     * @param {string} INDEX the elastic search index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DataWarehouseApi
     */
    public async oBPv300DataWarehouseSearch(body: WarehouseINDEXBody, INDEX: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<any>> {
        return DataWarehouseApiFp(this.configuration).oBPv300DataWarehouseSearch(body, INDEX, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Search the data warehouse and get statistical aggregations over a warehouse field</p><p>Does a stats aggregation over some numeric field:</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>CanSearchWarehouseStats Role is required. You can request this below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/statistics/INDEX/FIELD</p><p>POST /search/warehouse/statistics/ALL/FIELD</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#field\">FIELD</a>:</p><p><a href=\"/glossary#index\">INDEX</a>:</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p><p><a href=\"/glossary#query\"><strong>query</strong></a>:</p><p><a href=\"/glossary#none\">none</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#none\">none</a>:</p>
     * @summary Data Warehouse Statistics
     * @param {INDEXFIELDBody} body JObject object that needs to be added.
     * @param {string} FIELD the elastic search field
     * @param {string} INDEX the elastic search index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DataWarehouseApi
     */
    public async oBPv300DataWarehouseStatistics(body: INDEXFIELDBody, FIELD: string, INDEX: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<any>> {
        return DataWarehouseApiFp(this.configuration).oBPv300DataWarehouseStatistics(body, FIELD, INDEX, options).then((request) => request(this.axios, this.basePath));
    }
}
