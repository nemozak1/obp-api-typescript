/* tslint:disable */
/* eslint-disable */
/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { DynamicEntityFooBar } from '../models';
import { ErrorBankNotFound } from '../models';
import { ErrorUserNotLoggedIn } from '../models';
import { InlineResponse2005 } from '../models';
/**
 * DynamicEntityManageApi - axios parameter creator
 * @export
 */
export const DynamicEntityManageApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <p>Create a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;branchId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;atmId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;productCode=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;cardId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;transactionId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;counterpartyId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateBankLevelDynamicEntity: async (body: DynamicEntityFooBar, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateBankLevelDynamicEntity.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400CreateBankLevelDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-entities`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create a system level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;branchId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;atmId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;productCode=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;cardId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;transactionId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;counterpartyId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateSystemDynamicEntity: async (body: DynamicEntityFooBar, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateSystemDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/system-dynamic-entities`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete Bank Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteBankLevelDynamicEntity: async (DYNAMIC_ENTITY_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400DeleteBankLevelDynamicEntity.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400DeleteBankLevelDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteMyDynamicEntity: async (DYNAMIC_ENTITY_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400DeleteMyDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete System Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteSystemDynamicEntity: async (DYNAMIC_ENTITY_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400DeleteSystemDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all the bank level Dynamic Entities for one bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Entities
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetBankLevelDynamicEntities: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400GetBankLevelDynamicEntities.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-entities`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all my Dynamic Entities.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetMyDynamicEntities: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/my/dynamic-entities`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get all System Dynamic Entities</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get System Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetSystemDynamicEntities: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v4.0.0/management/system-dynamic-entities`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;branchId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;atmId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;productCode=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;cardId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;transactionId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;counterpartyId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p></code></pre>
         * @summary Update Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateBankLevelDynamicEntity: async (body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateBankLevelDynamicEntity.');
            }
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400UpdateBankLevelDynamicEntity.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400UpdateBankLevelDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update my DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;branchId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;atmId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;productCode=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;cardId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;transactionId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;counterpartyId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p></code></pre>
         * @summary Update My Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateMyDynamicEntity: async (body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateMyDynamicEntity.');
            }
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400UpdateMyDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update a System Level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;branchId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;atmId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;productCode=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;cardId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;transactionId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;counterpartyId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p></code></pre>
         * @summary Update System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400UpdateSystemDynamicEntity: async (body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400UpdateSystemDynamicEntity.');
            }
            // verify required parameter 'DYNAMIC_ENTITY_ID' is not null or undefined
            if (DYNAMIC_ENTITY_ID === null || DYNAMIC_ENTITY_ID === undefined) {
                throw new RequiredError('DYNAMIC_ENTITY_ID','Required parameter DYNAMIC_ENTITY_ID was null or undefined when calling oBPv400UpdateSystemDynamicEntity.');
            }
            const localVarPath = `/obp/v4.0.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}`
                .replace(`{${"DYNAMIC_ENTITY_ID"}}`, encodeURIComponent(String(DYNAMIC_ENTITY_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DynamicEntityManageApi - functional programming interface
 * @export
 */
export const DynamicEntityManageApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <p>Create a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;branchId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;atmId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;productCode=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;cardId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;transactionId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;counterpartyId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelDynamicEntity(body: DynamicEntityFooBar, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400CreateBankLevelDynamicEntity(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create a system level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;branchId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;atmId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;productCode=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;cardId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;transactionId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;counterpartyId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateSystemDynamicEntity(body: DynamicEntityFooBar, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400CreateSystemDynamicEntity(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete Bank Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete System Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all the bank level Dynamic Entities for one bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Entities
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicEntities(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2005>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400GetBankLevelDynamicEntities(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all my Dynamic Entities.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetMyDynamicEntities(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2005>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400GetMyDynamicEntities(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get all System Dynamic Entities</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get System Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetSystemDynamicEntities(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2005>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400GetSystemDynamicEntities(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;branchId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;atmId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;productCode=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;cardId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;transactionId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;counterpartyId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p></code></pre>
         * @summary Update Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400UpdateBankLevelDynamicEntity(body, DYNAMIC_ENTITY_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update my DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;branchId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;atmId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;productCode=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;cardId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;transactionId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;counterpartyId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p></code></pre>
         * @summary Update My Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateMyDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400UpdateMyDynamicEntity(body, DYNAMIC_ENTITY_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update a System Level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;branchId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;atmId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;productCode=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;cardId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;transactionId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;counterpartyId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p></code></pre>
         * @summary Update System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateSystemDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<DynamicEntityFooBar>>> {
            const localVarAxiosArgs = await DynamicEntityManageApiAxiosParamCreator(configuration).oBPv400UpdateSystemDynamicEntity(body, DYNAMIC_ENTITY_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * DynamicEntityManageApi - factory interface
 * @export
 */
export const DynamicEntityManageApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * <p>Create a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;branchId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;atmId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;productCode=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;cardId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;transactionId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;counterpartyId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateBankLevelDynamicEntity(body: DynamicEntityFooBar, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return DynamicEntityManageApiFp(configuration).oBPv400CreateBankLevelDynamicEntity(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create a system level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;branchId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;atmId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;productCode=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;cardId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;transactionId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;counterpartyId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
         * @summary Create System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateSystemDynamicEntity(body: DynamicEntityFooBar, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return DynamicEntityManageApiFp(configuration).oBPv400CreateSystemDynamicEntity(body, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete Bank Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return DynamicEntityManageApiFp(configuration).oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete My Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return DynamicEntityManageApiFp(configuration).oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Delete System Level Dynamic Entity
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return DynamicEntityManageApiFp(configuration).oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all the bank level Dynamic Entities for one bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get Bank Level Dynamic Entities
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetBankLevelDynamicEntities(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2005>> {
            return DynamicEntityManageApiFp(configuration).oBPv400GetBankLevelDynamicEntities(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all my Dynamic Entities.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get My Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetMyDynamicEntities(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2005>> {
            return DynamicEntityManageApiFp(configuration).oBPv400GetMyDynamicEntities(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get all System Dynamic Entities</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
         * @summary Get System Dynamic Entities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetSystemDynamicEntities(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2005>> {
            return DynamicEntityManageApiFp(configuration).oBPv400GetSystemDynamicEntities(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;branchId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;atmId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;productCode=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;cardId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;transactionId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;counterpartyId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p></code></pre>
         * @summary Update Bank Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateBankLevelDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return DynamicEntityManageApiFp(configuration).oBPv400UpdateBankLevelDynamicEntity(body, DYNAMIC_ENTITY_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update my DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;branchId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;atmId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;productCode=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;cardId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;transactionId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;counterpartyId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p></code></pre>
         * @summary Update My Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateMyDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return DynamicEntityManageApiFp(configuration).oBPv400UpdateMyDynamicEntity(body, DYNAMIC_ENTITY_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update a System Level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;branchId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;atmId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;productCode=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;cardId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;transactionId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;counterpartyId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p></code></pre>
         * @summary Update System Level Dynamic Entity
         * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
         * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400UpdateSystemDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<DynamicEntityFooBar>> {
            return DynamicEntityManageApiFp(configuration).oBPv400UpdateSystemDynamicEntity(body, DYNAMIC_ENTITY_ID, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * DynamicEntityManageApi - object-oriented interface
 * @export
 * @class DynamicEntityManageApi
 * @extends {BaseAPI}
 */
export class DynamicEntityManageApi extends BaseAPI {
    /**
     * <p>Create a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;6c2167c1-cf40-4bb5-b9b2-e287761dd348&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;branchId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;atmId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;productCode=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;cardId=bc638f0f-16c6-44cd-a715-cefb790729af&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;transactionId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=6c2167c1-cf40-4bb5-b9b2-e287761dd348&amp;accountId=bc638f0f-16c6-44cd-a715-cefb790729af&amp;counterpartyId=d7ce8e92-38a9-4f23-b9a9-b20161736f87&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
     * @summary Create Bank Level Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400CreateBankLevelDynamicEntity(body: DynamicEntityFooBar, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400CreateBankLevelDynamicEntity(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create a system level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;branchId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;atmId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;productCode=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;cardId=a54cfe5c-e210-4457-ac91-6628d3ce656a&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;transactionId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=b27bf3e9-d71f-495d-b7a1-dc2ac1471ff8&amp;accountId=a54cfe5c-e210-4457-ac91-6628d3ce656a&amp;counterpartyId=88f8443c-e08a-48c2-9aa4-e942600a07e7&quot;<br />}</p></code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>
     * @summary Create System Level Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400CreateSystemDynamicEntity(body: DynamicEntityFooBar, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400CreateSystemDynamicEntity(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Delete Bank Level Dynamic Entity
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400DeleteBankLevelDynamicEntity(DYNAMIC_ENTITY_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Delete My Dynamic Entity
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400DeleteMyDynamicEntity(DYNAMIC_ENTITY_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Delete System Level Dynamic Entity
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400DeleteSystemDynamicEntity(DYNAMIC_ENTITY_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all the bank level Dynamic Entities for one bank.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get Bank Level Dynamic Entities
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400GetBankLevelDynamicEntities(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2005>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400GetBankLevelDynamicEntities(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all my Dynamic Entities.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get My Dynamic Entities
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400GetMyDynamicEntities(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2005>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400GetMyDynamicEntities(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get all System Dynamic Entities</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p>
     * @summary Get System Dynamic Entities
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400GetSystemDynamicEntities(options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2005>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400GetSystemDynamicEntities(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update a Bank Level DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;26cd2e94-87c5-44d6-a37a-eca9361e56a2&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;branchId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;atmId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;productCode=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;cardId=e7bc5d35-fc42-4285-888f-a4776c3dad94&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;transactionId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=26cd2e94-87c5-44d6-a37a-eca9361e56a2&amp;accountId=e7bc5d35-fc42-4285-888f-a4776c3dad94&amp;counterpartyId=e7c92bd0-7202-4f44-81f6-2331df1fa434&quot;<br />}</p></code></pre>
     * @summary Update Bank Level Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400UpdateBankLevelDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400UpdateBankLevelDynamicEntity(body, DYNAMIC_ENTITY_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update my DynamicEntity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;9d19e2a7-c84c-443a-af17-96f0096152c7&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;branchId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;atmId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;productCode=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;cardId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;transactionId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=9d19e2a7-c84c-443a-af17-96f0096152c7&amp;accountId=6cc09e9e-6c29-4cf2-88c2-92efa222a63d&amp;counterpartyId=4b2c7de1-eb03-4a2c-a257-1f34da77197d&quot;<br />}</p></code></pre>
     * @summary Update My Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400UpdateMyDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400UpdateMyDynamicEntity(body, DYNAMIC_ENTITY_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update a System Level Dynamic Entity.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;}<p>&quot;someField1&quot;: {<br />&quot;type&quot;: &quot;reference:FooBar&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField2&quot;: {<br />&quot;type&quot;: &quot;reference:sustrans&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField3&quot;: {<br />&quot;type&quot;: &quot;reference:SimonCovid&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField4&quot;: {<br />&quot;type&quot;: &quot;reference:CovidAPIDays&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField5&quot;: {<br />&quot;type&quot;: &quot;reference:customer_cars&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField6&quot;: {<br />&quot;type&quot;: &quot;reference:MarchHare&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField7&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePolicy&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField8&quot;: {<br />&quot;type&quot;: &quot;reference:Odometer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField9&quot;: {<br />&quot;type&quot;: &quot;reference:InsurancePremium&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField10&quot;: {<br />&quot;type&quot;: &quot;reference:ObpActivity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField11&quot;: {<br />&quot;type&quot;: &quot;reference:test1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField12&quot;: {<br />&quot;type&quot;: &quot;reference:D-Entity1&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField13&quot;: {<br />&quot;type&quot;: &quot;reference:test_daniel707&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField14&quot;: {<br />&quot;type&quot;: &quot;reference:Bank&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField15&quot;: {<br />&quot;type&quot;: &quot;reference:Consumer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField16&quot;: {<br />&quot;type&quot;: &quot;reference:Customer&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField17&quot;: {<br />&quot;type&quot;: &quot;reference:MethodRouting&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField18&quot;: {<br />&quot;type&quot;: &quot;reference:DynamicEntity&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField19&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionRequest&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField20&quot;: {<br />&quot;type&quot;: &quot;reference:ProductAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField21&quot;: {<br />&quot;type&quot;: &quot;reference:AccountAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField22&quot;: {<br />&quot;type&quot;: &quot;reference:TransactionAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField23&quot;: {<br />&quot;type&quot;: &quot;reference:CustomerAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField24&quot;: {<br />&quot;type&quot;: &quot;reference:AccountApplication&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField25&quot;: {<br />&quot;type&quot;: &quot;reference:CardAttribute&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField26&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty&quot;,<br />&quot;example&quot;: &quot;fb19e7c5-fa7d-4da0-94da-ef1765865920&quot;<br />}</p><p>&quot;someField27&quot;: {<br />&quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;branchId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField28&quot;: {<br />&quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;atmId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField29&quot;: {<br />&quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField30&quot;: {<br />&quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;productCode=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField31&quot;: {<br />&quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;cardId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&quot;<br />}</p><p>&quot;someField32&quot;: {<br />&quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;transactionId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p><p>&quot;someField33&quot;: {<br />&quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,<br />&quot;example&quot;: &quot;bankId=fb19e7c5-fa7d-4da0-94da-ef1765865920&amp;accountId=1ec6d5c0-b3cf-4292-9ee6-4218b79d6c30&amp;counterpartyId=669e383b-45af-418e-a88c-fa9c3fcc8eed&quot;<br />}</p></code></pre>
     * @summary Update System Level Dynamic Entity
     * @param {DynamicEntityFooBar} body DynamicEntityFooBar object that needs to be added.
     * @param {string} DYNAMIC_ENTITY_ID the dynamic entity id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DynamicEntityManageApi
     */
    public async oBPv400UpdateSystemDynamicEntity(body: DynamicEntityFooBar, DYNAMIC_ENTITY_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<DynamicEntityFooBar>> {
        return DynamicEntityManageApiFp(this.configuration).oBPv400UpdateSystemDynamicEntity(body, DYNAMIC_ENTITY_ID, options).then((request) => request(this.axios, this.basePath));
    }
}
