/* tslint:disable */
/* eslint-disable */
/**
 * Open Bank Project API
 * An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2025. Licensed under the AGPL and commercial licences.
 *
 * OpenAPI spec version: v5.1.0
 * Contact: contact@tesobe.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { AttributedefinitionsCardBody } from '../models';
import { AttributesCARDATTRIBUTEIDBody } from '../models';
import { BANKIDCardsBody } from '../models';
import { CARDIDAttributeBody } from '../models';
import { CardsCARDIDBody } from '../models';
import { ErrorUserNotLoggedIn } from '../models';
import { InlineResponse20025 } from '../models';
import { InlineResponse20044 } from '../models';
import { InlineResponse20045 } from '../models';
import { InlineResponse20046 } from '../models';
import { InlineResponse20077 } from '../models';
import { InlineResponse20078 } from '../models';
import { InlineResponse20111 } from '../models';
import { InlineResponse20153 } from '../models';
import { PhysicalCardsJSON } from '../models';
/**
 * CardApi - axios parameter creator
 * @export
 */
export const CardApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get cards for the current user
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv130GetCards: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/obp/v5.1.0/cards`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Create Card Attribute
         * @param {CARDIDAttributeBody} body JObject object that needs to be added.
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310CreateCardAttribute: async (body: CARDIDAttributeBody, CARD_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310CreateCardAttribute.');
            }
            // verify required parameter 'CARD_ID' is not null or undefined
            if (CARD_ID === null || CARD_ID === undefined) {
                throw new RequiredError('CARD_ID','Required parameter CARD_ID was null or undefined when calling oBPv310CreateCardAttribute.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310CreateCardAttribute.');
            }
            const localVarPath = `/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attribute`
                .replace(`{${"CARD_ID"}}`, encodeURIComponent(String(CARD_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete a Card at bank specified by CARD_ID .</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Card
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310DeleteCardForBank: async (CARD_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'CARD_ID' is not null or undefined
            if (CARD_ID === null || CARD_ID === undefined) {
                throw new RequiredError('CARD_ID','Required parameter CARD_ID was null or undefined when calling oBPv310DeleteCardForBank.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310DeleteCardForBank.');
            }
            const localVarPath = `/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}`
                .replace(`{${"CARD_ID"}}`, encodeURIComponent(String(CARD_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>This will the datails of the card.<br />It shows the account infomation which linked the the card.<br />Also shows the card attributes of the card.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#card_attributes\"><strong>card_attributes</strong></a>:</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get Card By Id
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetCardForBank: async (CARD_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'CARD_ID' is not null or undefined
            if (CARD_ID === null || CARD_ID === undefined) {
                throw new RequiredError('CARD_ID','Required parameter CARD_ID was null or undefined when calling oBPv310GetCardForBank.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310GetCardForBank.');
            }
            const localVarPath = `/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}`
                .replace(`{${"CARD_ID"}}`, encodeURIComponent(String(CARD_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Should be able to filter on the following fields</p><p>eg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0</p><p>1 customer_id should be valid customer_id, otherwise, it will return an empty card list.</p><p>2 account_id should be valid account_id , otherwise, it will return an empty card list.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get Cards for the specified bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetCardsForBank: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310GetCardsForBank.');
            }
            const localVarPath = `/obp/v3.1.0/management/banks/{BANK_ID}/cards`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get status of Credit Card orders<br />Get all orders</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#card_description\"><strong>card_description</strong></a>:</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#use_type\"><strong>use_type</strong></a>:</p>
         * @summary Get status of Credit Card order 
         * @param {string} VIEW_ID The view id
         * @param {string} ACCOUNT_ID The account id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310GetStatusOfCreditCardOrder: async (VIEW_ID: string, ACCOUNT_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'VIEW_ID' is not null or undefined
            if (VIEW_ID === null || VIEW_ID === undefined) {
                throw new RequiredError('VIEW_ID','Required parameter VIEW_ID was null or undefined when calling oBPv310GetStatusOfCreditCardOrder.');
            }
            // verify required parameter 'ACCOUNT_ID' is not null or undefined
            if (ACCOUNT_ID === null || ACCOUNT_ID === undefined) {
                throw new RequiredError('ACCOUNT_ID','Required parameter ACCOUNT_ID was null or undefined when calling oBPv310GetStatusOfCreditCardOrder.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310GetStatusOfCreditCardOrder.');
            }
            const localVarPath = `/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/credit_cards/orders`
                .replace(`{${"VIEW_ID"}}`, encodeURIComponent(String(VIEW_ID)))
                .replace(`{${"ACCOUNT_ID"}}`, encodeURIComponent(String(ACCOUNT_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ATTRIBUTE_ID</a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Update Card Attribute
         * @param {AttributesCARDATTRIBUTEIDBody} body JObject object that needs to be added.
         * @param {string} CARD_ATTRIBUTE_ID the card attribute id
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310UpdateCardAttribute: async (body: AttributesCARDATTRIBUTEIDBody, CARD_ATTRIBUTE_ID: string, CARD_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310UpdateCardAttribute.');
            }
            // verify required parameter 'CARD_ATTRIBUTE_ID' is not null or undefined
            if (CARD_ATTRIBUTE_ID === null || CARD_ATTRIBUTE_ID === undefined) {
                throw new RequiredError('CARD_ATTRIBUTE_ID','Required parameter CARD_ATTRIBUTE_ID was null or undefined when calling oBPv310UpdateCardAttribute.');
            }
            // verify required parameter 'CARD_ID' is not null or undefined
            if (CARD_ID === null || CARD_ID === undefined) {
                throw new RequiredError('CARD_ID','Required parameter CARD_ID was null or undefined when calling oBPv310UpdateCardAttribute.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310UpdateCardAttribute.');
            }
            const localVarPath = `/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attributes/{CARD_ATTRIBUTE_ID}`
                .replace(`{${"CARD_ATTRIBUTE_ID"}}`, encodeURIComponent(String(CARD_ATTRIBUTE_ID)))
                .replace(`{${"CARD_ID"}}`, encodeURIComponent(String(CARD_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Update Card at bank specified by CARD_ID .<br />User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Update Card
         * @param {CardsCARDIDBody} body JObject object that needs to be added.
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv310UpdatedCardForBank: async (body: CardsCARDIDBody, CARD_ID: string, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv310UpdatedCardForBank.');
            }
            // verify required parameter 'CARD_ID' is not null or undefined
            if (CARD_ID === null || CARD_ID === undefined) {
                throw new RequiredError('CARD_ID','Required parameter CARD_ID was null or undefined when calling oBPv310UpdatedCardForBank.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv310UpdatedCardForBank.');
            }
            const localVarPath = `/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}`
                .replace(`{${"CARD_ID"}}`, encodeURIComponent(String(CARD_ID)))
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create or Update Card Attribute Definition</p><p>The category field must be Card</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: false</p><p><a href=\"/glossary#category\"><strong>category</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>
         * @summary Create or Update Card Attribute Definition
         * @param {AttributedefinitionsCardBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400CreateOrUpdateCardAttributeDefinition: async (body: AttributedefinitionsCardBody, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv400CreateOrUpdateCardAttributeDefinition.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400CreateOrUpdateCardAttributeDefinition.');
            }
            const localVarPath = `/obp/v4.0.0/banks/{BANK_ID}/attribute-definitions/card`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Delete Card Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Card Attribute Definition
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400DeleteCardAttributeDefinition: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400DeleteCardAttributeDefinition.');
            }
            const localVarPath = `/obp/v4.0.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/card`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Get Card Attribute Definition</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p><p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: false</p><p><a href=\"/glossary#category\"><strong>category</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>
         * @summary Get Card Attribute Definition
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv400GetCardAttributeDefinition: async (BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv400GetCardAttributeDefinition.');
            }
            const localVarPath = `/obp/v4.0.0/banks/{BANK_ID}/attribute-definitions/card`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * <p>Create Card at bank specified by BANK_ID .</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#collected\">collected</a>: 2020-01-27</p><p><a href=\"/glossary#posted\">posted</a>: 2020-01-27</p><p><a href=\"/glossary#replacement\">replacement</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>cvv</strong></a>: 123</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Create Card
         * @param {BANKIDCardsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oBPv500AddCardForBank: async (body: BANKIDCardsBody, BANK_ID: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling oBPv500AddCardForBank.');
            }
            // verify required parameter 'BANK_ID' is not null or undefined
            if (BANK_ID === null || BANK_ID === undefined) {
                throw new RequiredError('BANK_ID','Required parameter BANK_ID was null or undefined when calling oBPv500AddCardForBank.');
            }
            const localVarPath = `/obp/v5.0.0/management/banks/{BANK_ID}/cards`
                .replace(`{${"BANK_ID"}}`, encodeURIComponent(String(BANK_ID)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication directLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            // authentication gatewayLogin required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
                    ? await configuration.apiKey("Authorization")
                    : await configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = '*/*';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CardApi - functional programming interface
 * @export
 */
export const CardApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get cards for the current user
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv130GetCards(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<PhysicalCardsJSON>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv130GetCards(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Create Card Attribute
         * @param {CARDIDAttributeBody} body JObject object that needs to be added.
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310CreateCardAttribute(body: CARDIDAttributeBody, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20111>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv310CreateCardAttribute(body, CARD_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete a Card at bank specified by CARD_ID .</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Card
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310DeleteCardForBank(CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv310DeleteCardForBank(CARD_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>This will the datails of the card.<br />It shows the account infomation which linked the the card.<br />Also shows the card attributes of the card.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#card_attributes\"><strong>card_attributes</strong></a>:</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get Card By Id
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetCardForBank(CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20045>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv310GetCardForBank(CARD_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Should be able to filter on the following fields</p><p>eg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0</p><p>1 customer_id should be valid customer_id, otherwise, it will return an empty card list.</p><p>2 account_id should be valid account_id , otherwise, it will return an empty card list.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get Cards for the specified bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetCardsForBank(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20044>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv310GetCardsForBank(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get status of Credit Card orders<br />Get all orders</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#card_description\"><strong>card_description</strong></a>:</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#use_type\"><strong>use_type</strong></a>:</p>
         * @summary Get status of Credit Card order 
         * @param {string} VIEW_ID The view id
         * @param {string} ACCOUNT_ID The account id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetStatusOfCreditCardOrder(VIEW_ID: string, ACCOUNT_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20025>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv310GetStatusOfCreditCardOrder(VIEW_ID, ACCOUNT_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ATTRIBUTE_ID</a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Update Card Attribute
         * @param {AttributesCARDATTRIBUTEIDBody} body JObject object that needs to be added.
         * @param {string} CARD_ATTRIBUTE_ID the card attribute id
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310UpdateCardAttribute(body: AttributesCARDATTRIBUTEIDBody, CARD_ATTRIBUTE_ID: string, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20111>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv310UpdateCardAttribute(body, CARD_ATTRIBUTE_ID, CARD_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Update Card at bank specified by CARD_ID .<br />User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Update Card
         * @param {CardsCARDIDBody} body JObject object that needs to be added.
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310UpdatedCardForBank(body: CardsCARDIDBody, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20046>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv310UpdatedCardForBank(body, CARD_ID, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create or Update Card Attribute Definition</p><p>The category field must be Card</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: false</p><p><a href=\"/glossary#category\"><strong>category</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>
         * @summary Create or Update Card Attribute Definition
         * @param {AttributedefinitionsCardBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateOrUpdateCardAttributeDefinition(body: AttributedefinitionsCardBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20078>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv400CreateOrUpdateCardAttributeDefinition(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Delete Card Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Card Attribute Definition
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteCardAttributeDefinition(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv400DeleteCardAttributeDefinition(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Get Card Attribute Definition</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p><p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: false</p><p><a href=\"/glossary#category\"><strong>category</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>
         * @summary Get Card Attribute Definition
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetCardAttributeDefinition(BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20077>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv400GetCardAttributeDefinition(BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * <p>Create Card at bank specified by BANK_ID .</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#collected\">collected</a>: 2020-01-27</p><p><a href=\"/glossary#posted\">posted</a>: 2020-01-27</p><p><a href=\"/glossary#replacement\">replacement</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>cvv</strong></a>: 123</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Create Card
         * @param {BANKIDCardsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv500AddCardForBank(body: BANKIDCardsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20153>>> {
            const localVarAxiosArgs = await CardApiAxiosParamCreator(configuration).oBPv500AddCardForBank(body, BANK_ID, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * CardApi - factory interface
 * @export
 */
export const CardApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * <p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get cards for the current user
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv130GetCards(options?: AxiosRequestConfig): Promise<AxiosResponse<PhysicalCardsJSON>> {
            return CardApiFp(configuration).oBPv130GetCards(options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Create Card Attribute
         * @param {CARDIDAttributeBody} body JObject object that needs to be added.
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310CreateCardAttribute(body: CARDIDAttributeBody, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20111>> {
            return CardApiFp(configuration).oBPv310CreateCardAttribute(body, CARD_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete a Card at bank specified by CARD_ID .</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Card
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310DeleteCardForBank(CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return CardApiFp(configuration).oBPv310DeleteCardForBank(CARD_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>This will the datails of the card.<br />It shows the account infomation which linked the the card.<br />Also shows the card attributes of the card.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#card_attributes\"><strong>card_attributes</strong></a>:</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get Card By Id
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetCardForBank(CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20045>> {
            return CardApiFp(configuration).oBPv310GetCardForBank(CARD_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Should be able to filter on the following fields</p><p>eg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0</p><p>1 customer_id should be valid customer_id, otherwise, it will return an empty card list.</p><p>2 account_id should be valid account_id , otherwise, it will return an empty card list.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Get Cards for the specified bank
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetCardsForBank(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20044>> {
            return CardApiFp(configuration).oBPv310GetCardsForBank(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get status of Credit Card orders<br />Get all orders</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#card_description\"><strong>card_description</strong></a>:</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#use_type\"><strong>use_type</strong></a>:</p>
         * @summary Get status of Credit Card order 
         * @param {string} VIEW_ID The view id
         * @param {string} ACCOUNT_ID The account id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310GetStatusOfCreditCardOrder(VIEW_ID: string, ACCOUNT_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20025>> {
            return CardApiFp(configuration).oBPv310GetStatusOfCreditCardOrder(VIEW_ID, ACCOUNT_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ATTRIBUTE_ID</a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
         * @summary Update Card Attribute
         * @param {AttributesCARDATTRIBUTEIDBody} body JObject object that needs to be added.
         * @param {string} CARD_ATTRIBUTE_ID the card attribute id
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310UpdateCardAttribute(body: AttributesCARDATTRIBUTEIDBody, CARD_ATTRIBUTE_ID: string, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20111>> {
            return CardApiFp(configuration).oBPv310UpdateCardAttribute(body, CARD_ATTRIBUTE_ID, CARD_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Update Card at bank specified by CARD_ID .<br />User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Update Card
         * @param {CardsCARDIDBody} body JObject object that needs to be added.
         * @param {string} CARD_ID the card id
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv310UpdatedCardForBank(body: CardsCARDIDBody, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20046>> {
            return CardApiFp(configuration).oBPv310UpdatedCardForBank(body, CARD_ID, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create or Update Card Attribute Definition</p><p>The category field must be Card</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: false</p><p><a href=\"/glossary#category\"><strong>category</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>
         * @summary Create or Update Card Attribute Definition
         * @param {AttributedefinitionsCardBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400CreateOrUpdateCardAttributeDefinition(body: AttributedefinitionsCardBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20078>> {
            return CardApiFp(configuration).oBPv400CreateOrUpdateCardAttributeDefinition(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Delete Card Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
         * @summary Delete Card Attribute Definition
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400DeleteCardAttributeDefinition(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return CardApiFp(configuration).oBPv400DeleteCardAttributeDefinition(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Get Card Attribute Definition</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p><p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: false</p><p><a href=\"/glossary#category\"><strong>category</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>
         * @summary Get Card Attribute Definition
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv400GetCardAttributeDefinition(BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20077>> {
            return CardApiFp(configuration).oBPv400GetCardAttributeDefinition(BANK_ID, options).then((request) => request(axios, basePath));
        },
        /**
         * <p>Create Card at bank specified by BANK_ID .</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#collected\">collected</a>: 2020-01-27</p><p><a href=\"/glossary#posted\">posted</a>: 2020-01-27</p><p><a href=\"/glossary#replacement\">replacement</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>cvv</strong></a>: 123</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
         * @summary Create Card
         * @param {BANKIDCardsBody} body JObject object that needs to be added.
         * @param {string} BANK_ID The bank id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oBPv500AddCardForBank(body: BANKIDCardsBody, BANK_ID: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20153>> {
            return CardApiFp(configuration).oBPv500AddCardForBank(body, BANK_ID, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * CardApi - object-oriented interface
 * @export
 * @class CardApi
 * @extends {BaseAPI}
 */
export class CardApi extends BaseAPI {
    /**
     * <p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
     * @summary Get cards for the current user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv130GetCards(options?: AxiosRequestConfig) : Promise<AxiosResponse<PhysicalCardsJSON>> {
        return CardApiFp(this.configuration).oBPv130GetCards(options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
     * @summary Create Card Attribute
     * @param {CARDIDAttributeBody} body JObject object that needs to be added.
     * @param {string} CARD_ID the card id
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv310CreateCardAttribute(body: CARDIDAttributeBody, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20111>> {
        return CardApiFp(this.configuration).oBPv310CreateCardAttribute(body, CARD_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete a Card at bank specified by CARD_ID .</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete Card
     * @param {string} CARD_ID the card id
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv310DeleteCardForBank(CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return CardApiFp(this.configuration).oBPv310DeleteCardForBank(CARD_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>This will the datails of the card.<br />It shows the account infomation which linked the the card.<br />Also shows the card attributes of the card.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#card_attributes\"><strong>card_attributes</strong></a>:</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
     * @summary Get Card By Id
     * @param {string} CARD_ID the card id
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv310GetCardForBank(CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20045>> {
        return CardApiFp(this.configuration).oBPv310GetCardForBank(CARD_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Should be able to filter on the following fields</p><p>eg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0</p><p>1 customer_id should be valid customer_id, otherwise, it will return an empty card list.</p><p>2 account_id should be valid account_id , otherwise, it will return an empty card list.</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
     * @summary Get Cards for the specified bank
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv310GetCardsForBank(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20044>> {
        return CardApiFp(this.configuration).oBPv310GetCardsForBank(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get status of Credit Card orders<br />Get all orders</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#card_description\"><strong>card_description</strong></a>:</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p><p><a href=\"/glossary#use_type\"><strong>use_type</strong></a>:</p>
     * @summary Get status of Credit Card order 
     * @param {string} VIEW_ID The view id
     * @param {string} ACCOUNT_ID The account id
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv310GetStatusOfCreditCardOrder(VIEW_ID: string, ACCOUNT_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20025>> {
        return CardApiFp(this.configuration).oBPv310GetStatusOfCreditCardOrder(VIEW_ID, ACCOUNT_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ATTRIBUTE_ID</a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>
     * @summary Update Card Attribute
     * @param {AttributesCARDATTRIBUTEIDBody} body JObject object that needs to be added.
     * @param {string} CARD_ATTRIBUTE_ID the card attribute id
     * @param {string} CARD_ID the card id
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv310UpdateCardAttribute(body: AttributesCARDATTRIBUTEIDBody, CARD_ATTRIBUTE_ID: string, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20111>> {
        return CardApiFp(this.configuration).oBPv310UpdateCardAttribute(body, CARD_ATTRIBUTE_ID, CARD_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Update Card at bank specified by CARD_ID .<br />User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
     * @summary Update Card
     * @param {CardsCARDIDBody} body JObject object that needs to be added.
     * @param {string} CARD_ID the card id
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv310UpdatedCardForBank(body: CardsCARDIDBody, CARD_ID: string, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20046>> {
        return CardApiFp(this.configuration).oBPv310UpdatedCardForBank(body, CARD_ID, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create or Update Card Attribute Definition</p><p>The category field must be Card</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: false</p><p><a href=\"/glossary#category\"><strong>category</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>
     * @summary Create or Update Card Attribute Definition
     * @param {AttributedefinitionsCardBody} body JObject object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv400CreateOrUpdateCardAttributeDefinition(body: AttributedefinitionsCardBody, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20078>> {
        return CardApiFp(this.configuration).oBPv400CreateOrUpdateCardAttributeDefinition(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Delete Card Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p>
     * @summary Delete Card Attribute Definition
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv400DeleteCardAttributeDefinition(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return CardApiFp(this.configuration).oBPv400DeleteCardAttributeDefinition(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Get Card Attribute Definition</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p><p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: false</p><p><a href=\"/glossary#category\"><strong>category</strong></a>:</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: false</p><p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p><p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>
     * @summary Get Card Attribute Definition
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv400GetCardAttributeDefinition(BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20077>> {
        return CardApiFp(this.configuration).oBPv400GetCardAttributeDefinition(BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * <p>Create Card at bank specified by BANK_ID .</p><p>User Authentication is Required. The User must be logged in. The Application must also be authenticated.</p><p><strong>URL Parameters:</strong></p><p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p><p><strong>JSON request body fields:</strong></p><p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#collected\">collected</a>: 2020-01-27</p><p><a href=\"/glossary#posted\">posted</a>: 2020-01-27</p><p><a href=\"/glossary#replacement\">replacement</a>:</p><p><strong>JSON response body fields:</strong></p><p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p><p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p><p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p><p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p><p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p><p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p><p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p><p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p><p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: false</p><p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: false</p><p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p><p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p><p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p><p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: false</p><p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p><p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p><p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: false</p><p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p><p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p><p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: false</p><p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: false</p><p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p><p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p><p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p><p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: false</p><p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: false</p><p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: false</p><p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p><p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: false</p><p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: false</p><p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p><p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p><p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p><p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p><p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: false</p><p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p><p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p><p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: false</p><p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: false</p><p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p><p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p><p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p><p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p><p><a href=\"/glossary#\"><strong>cvv</strong></a>: 123</p><p><a href=\"/glossary#description\"><strong>description</strong></a>: Description of the object. Maximum length is 2000. It can be any characters here.</p><p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: false</p><p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p><p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>: false</p><p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p><p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: false</p><p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p><p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p><p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p><p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p><p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p><p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p><p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p><p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p><p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p><p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p><p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p><p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p><p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p><p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>
     * @summary Create Card
     * @param {BANKIDCardsBody} body JObject object that needs to be added.
     * @param {string} BANK_ID The bank id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardApi
     */
    public async oBPv500AddCardForBank(body: BANKIDCardsBody, BANK_ID: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20153>> {
        return CardApiFp(this.configuration).oBPv500AddCardForBank(body, BANK_ID, options).then((request) => request(this.axios, this.basePath));
    }
}
